{
	"id": "a54eb644cfed1ebb7dda160389e713fb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MMEXT.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.18;\r\n\r\n \r\n \r\n\r\nimport {StringsUpgradeable} from \"../lib/contracts-upgradeable/utils/StringsUpgradeable.sol\";\r\nimport {IERC20Upgradeable} from \"../lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\"; \r\nimport {UUPSUpgradeable} from \"../lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport {OwnableUpgradeable} from \"../lib/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport {ECDSAUpgradeable} from \"../lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\";\r\n\r\n \r\n\r\n\r\n\r\nimport {BokkyPooBahsDateTimeLibrary} from \"../lib/BokkyPooBahsDateTimeLibrary.sol\";\r\n//import {ACConfig} from \"./ACConfig.sol\";\r\nimport {IMMStore} from \"./interface/IMMStore.sol\";\r\n\r\n\r\ninterface IACBPair_ {\r\n    function token0()external view returns (address);\r\n    function remove(uint256 amount0,uint256 amount1,address to) external;\r\n    function simpleSwap(address token,address to, uint256 amountIn) external returns(uint256 amountOut);\r\n    function mint(address to) external returns (uint liquidity);\r\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\r\n    function getReserves() external view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast);\r\n    \r\n}\r\n\r\ninterface IMinePool {\r\n    function withdraw(address to,uint256 amount) external;\r\n}\r\n\r\n\r\n\r\ninterface ACCONFIG {\r\n    function usdt()external view returns (address);\r\n    function platformAddress()external view returns (address);\r\n    function mv()external view returns (address);\r\n    function swapRate()external view returns (uint256 );\r\n    function buylocked()external view returns (uint );\r\n    function mvCollectionAddress() external view returns (address);  \r\n    function techAddress() external view returns (address);\r\n    function marketAddress() external view returns (address); \r\n    function claimInterval()external view returns (uint256 );\r\n    function operator() external view returns (address); \r\n    function minePool() external view returns (address); \r\n    function acb() external view returns (address); \r\n    function acbPair() external view returns (address); \r\n    function machineExpireTime() external view returns (uint256);\r\n    \r\n     \r\n    \r\n}\r\ninterface MMSTORE is IMMStore{\r\n   \r\n    \r\n    function getNoOrderRewardArr() external view returns(TransferOrder[] memory) ;\r\n    function transferNoOrder() external view returns(TransferOrder[] memory) ;\r\n\r\n}\r\ncontract MMEXT is IMMStore,OwnableUpgradeable,UUPSUpgradeable{\r\n\r\n     \r\n    address public MMstore;\r\n\r\n     \r\n    MiningMachine[] public machineArr;\r\n    ClaimOrder[] public claimOrderArr;\r\n    TransferOrder[] public NoOrder;\r\n    TransferOrder[] public transferMaxOrder;\r\n\r\n \r\n  \r\n\r\n  \r\n\r\n\r\n\r\n  \r\n    function initialize( address _store)external initializer{\r\n        __Ownable_init();\r\n\r\n       \r\n        MMstore = _store;\r\n     \r\n    }\r\n\r\n    \r\n    function _authorizeUpgrade(address) internal override onlyOwner {}\r\n\r\n    \r\n    \r\n    function changeMmstore(address _store)external onlyOwner{\r\n        MMstore = _store;\r\n    }\r\n \r\n \r\n\r\n    function getNoOrderRewardByIndex(uint256 start,uint256 end) external view returns(TransferOrder[] memory NoOrderReward) {\r\n        TransferOrder[] memory NoOrderr = MMSTORE(MMstore).getNoOrderRewardArr();\r\n        uint256 length = end - start + 1;\r\n        NoOrderReward = new TransferOrder[](length);\r\n        for(uint256 i = 0; i < length; i++){\r\n            NoOrderReward[i] = NoOrderr[start + i];\r\n        }\r\n    }\r\n\r\n\r\n    function getNoOrderRewardBy( ) external view returns(TransferOrder[] memory NoOrderReward) {\r\n        NoOrderReward = MMSTORE(MMstore).getNoOrderRewardArr();\r\n       \r\n    }\r\n\r\n   \r\n\r\n\r\n    \r\n}\r\n\r\n "
			},
			"contracts/interface/IMMStore.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.18;\r\n\r\n\r\ninterface IMMStore {\r\n\r\n    struct MiningMachine {\r\n        address user;\r\n        uint256 computingPower;\r\n        uint256 createTime;\r\n        uint256 lastTime;\r\n    }\r\n\r\n    struct ClaimOrder{\r\n        address user;\r\n        uint256 amount;\r\n        uint256 orderType;\r\n\tuint256 createTime;\r\n    }\r\n\r\n    struct TransferOrder{\r\n        address user;\r\n        uint256 amount;\r\n        uint256 number;\r\n        uint256 timestamp;\r\n    }\r\n\r\n    struct User{\r\n        address user;\r\n        address ref;\r\n        uint256 registerTime;\r\n    }\r\n\r\n\r\n\r\n    \r\n    struct ClaimedDynReward{\r\n        uint256 ref;\r\n        uint256 team;\r\n        uint256 sameLevel;\r\n        uint256 share;\r\n    }\r\n\r\n    \r\n    struct SuperFomo{\r\n        uint256 countdown;\r\n        uint256 poolAmount;\r\n        uint256 rewardAmount;\r\n        uint256 totalBurnAmount;\r\n        address lastUser;\r\n    }\r\n\r\n\r\n    struct MaxOrderReward {\r\n        uint256 countdown;\r\n        uint256 poolAmount;\r\n        uint256 rewardAmount;\r\n        uint256 maxComputingPower;\r\n        address maxOrderUser;\r\n    }\r\n\r\n\r\n\r\n    struct MachineReward{\r\n        uint256 pendingReward;\r\n        uint256 pendingRebate;\r\n        uint256 claimedReward;\r\n        uint256 rebatedReward;\r\n        bool canClaim;\r\n    }\r\n    struct MachineResponse {\r\n        uint256 computingPower;\r\n        uint256 createTime;\r\n\tuint256 countdown;\r\n\tuint256 lastTime;\r\n    }\r\n\r\n    \r\n}"
			},
			"lib/BokkyPooBahsDateTimeLibrary.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.0 <0.9.0;\r\n\r\n// ----------------------------------------------------------------------------\r\n// BokkyPooBah's DateTime Library v1.01\r\n//\r\n// A gas-efficient Solidity date and time library\r\n//\r\n// https://github.com/bokkypoobah/BokkyPooBahsDateTimeLibrary\r\n//\r\n// Tested date range 1970/01/01 to 2345/12/31\r\n//\r\n// Conventions:\r\n// Unit      | Range         | Notes\r\n// :-------- |:-------------:|:-----\r\n// timestamp | >= 0          | Unix timestamp, number of seconds since 1970/01/01 00:00:00 UTC\r\n// year      | 1970 ... 2345 |\r\n// month     | 1 ... 12      |\r\n// day       | 1 ... 31      |\r\n// hour      | 0 ... 23      |\r\n// minute    | 0 ... 59      |\r\n// second    | 0 ... 59      |\r\n// dayOfWeek | 1 ... 7       | 1 = Monday, ..., 7 = Sunday\r\n//\r\n//\r\n// Enjoy. (c) BokkyPooBah / Bok Consulting Pty Ltd 2018-2019. The MIT Licence.\r\n// ----------------------------------------------------------------------------\r\n\r\nlibrary BokkyPooBahsDateTimeLibrary {\r\n\r\n    uint constant SECONDS_PER_DAY = 24 * 60 * 60;\r\n    uint constant SECONDS_PER_HOUR = 60 * 60;\r\n    uint constant SECONDS_PER_MINUTE = 60;\r\n    int constant OFFSET19700101 = 2440588;\r\n\r\n    // uint constant DOW_MON = 1;\r\n    // uint constant DOW_TUE = 2;\r\n    // uint constant DOW_WED = 3;\r\n    // uint constant DOW_THU = 4;\r\n    // uint constant DOW_FRI = 5;\r\n    // uint constant DOW_SAT = 6;\r\n    // uint constant DOW_SUN = 7;\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Calculate the number of days from 1970/01/01 to year/month/day using\r\n    // the date conversion algorithm from\r\n    //   https://aa.usno.navy.mil/faq/JD_formula.html\r\n    // and subtracting the offset 2440588 so that 1970/01/01 is day 0\r\n    //\r\n    // days = day\r\n    //      - 32075\r\n    //      + 1461 * (year + 4800 + (month - 14) / 12) / 4\r\n    //      + 367 * (month - 2 - (month - 14) / 12 * 12) / 12\r\n    //      - 3 * ((year + 4900 + (month - 14) / 12) / 100) / 4\r\n    //      - offset\r\n    // ------------------------------------------------------------------------\r\n    // function _daysFromDate(uint year, uint month, uint day) internal pure returns (uint _days) {\r\n    //     require(year >= 1970);\r\n    //     int _year = int(year);\r\n    //     int _month = int(month);\r\n    //     int _day = int(day);\r\n\r\n    //     int __days = _day\r\n    //       - 32075\r\n    //       + 1461 * (_year + 4800 + (_month - 14) / 12) / 4\r\n    //       + 367 * (_month - 2 - (_month - 14) / 12 * 12) / 12\r\n    //       - 3 * ((_year + 4900 + (_month - 14) / 12) / 100) / 4\r\n    //       - OFFSET19700101;\r\n\r\n    //     _days = uint(__days);\r\n    // }\r\n\r\n    // ------------------------------------------------------------------------\r\n    // Calculate year/month/day from the number of days since 1970/01/01 using\r\n    // the date conversion algorithm from\r\n    //   http://aa.usno.navy.mil/faq/docs/JD_Formula.php\r\n    // and adding the offset 2440588 so that 1970/01/01 is day 0\r\n    //\r\n    // int L = days + 68569 + offset\r\n    // int N = 4 * L / 146097\r\n    // L = L - (146097 * N + 3) / 4\r\n    // year = 4000 * (L + 1) / 1461001\r\n    // L = L - 1461 * year / 4 + 31\r\n    // month = 80 * L / 2447\r\n    // dd = L - 2447 * month / 80\r\n    // L = month / 11\r\n    // month = month + 2 - 12 * L\r\n    // year = 100 * (N - 49) + year + L\r\n    // ------------------------------------------------------------------------\r\n    function _daysToDate(uint _days) internal pure returns (uint year, uint month, uint day) {\r\n        int __days = int(_days);\r\n\r\n        int L = __days + 68569 + OFFSET19700101;\r\n        int N = 4 * L / 146097;\r\n        L = L - (146097 * N + 3) / 4;\r\n        int _year = 4000 * (L + 1) / 1461001;\r\n        L = L - 1461 * _year / 4 + 31;\r\n        int _month = 80 * L / 2447;\r\n        int _day = L - 2447 * _month / 80;\r\n        L = _month / 11;\r\n        _month = _month + 2 - 12 * L;\r\n        _year = 100 * (N - 49) + _year + L;\r\n\r\n        year = uint(_year);\r\n        month = uint(_month);\r\n        day = uint(_day);\r\n    }\r\n\r\n    // function timestampFromDate(uint year, uint month, uint day) internal pure returns (uint timestamp) {\r\n    //     timestamp = _daysFromDate(year, month, day) * SECONDS_PER_DAY;\r\n    // }\r\n    // function timestampFromDateTime(uint year, uint month, uint day, uint hour, uint minute, uint second) internal pure returns (uint timestamp) {\r\n    //     timestamp = _daysFromDate(year, month, day) * SECONDS_PER_DAY + hour * SECONDS_PER_HOUR + minute * SECONDS_PER_MINUTE + second;\r\n    // }\r\n    // function timestampToDate(uint timestamp) internal pure returns (uint year, uint month, uint day) {\r\n    //     (year, month, day) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    // }\r\n    function timestampToDateTime(uint timestamp) internal pure returns (uint year, uint month, uint day, uint hour, uint minute, uint second) {\r\n        (year, month, day) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n        uint secs = timestamp % SECONDS_PER_DAY;\r\n        hour = secs / SECONDS_PER_HOUR;\r\n        secs = secs % SECONDS_PER_HOUR;\r\n        minute = secs / SECONDS_PER_MINUTE;\r\n        second = secs % SECONDS_PER_MINUTE;\r\n    }\r\n\r\n    // function isValidDate(uint year, uint month, uint day) internal pure returns (bool valid) {\r\n    //     if (year >= 1970 && month > 0 && month <= 12) {\r\n    //         uint daysInMonth = _getDaysInMonth(year, month);\r\n    //         if (day > 0 && day <= daysInMonth) {\r\n    //             valid = true;\r\n    //         }\r\n    //     }\r\n    // }\r\n    // function isValidDateTime(uint year, uint month, uint day, uint hour, uint minute, uint second) internal pure returns (bool valid) {\r\n    //     if (isValidDate(year, month, day)) {\r\n    //         if (hour < 24 && minute < 60 && second < 60) {\r\n    //             valid = true;\r\n    //         }\r\n    //     }\r\n    // }\r\n    // function isLeapYear(uint timestamp) internal pure returns (bool leapYear) {\r\n    //     (uint year,,) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    //     leapYear = _isLeapYear(year);\r\n    // }\r\n    // function _isLeapYear(uint year) internal pure returns (bool leapYear) {\r\n    //     leapYear = ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\r\n    // }\r\n    // function isWeekDay(uint timestamp) internal pure returns (bool weekDay) {\r\n    //     weekDay = getDayOfWeek(timestamp) <= DOW_FRI;\r\n    // }\r\n    // function isWeekEnd(uint timestamp) internal pure returns (bool weekEnd) {\r\n    //     weekEnd = getDayOfWeek(timestamp) >= DOW_SAT;\r\n    // }\r\n    // function getDaysInMonth(uint timestamp) internal pure returns (uint daysInMonth) {\r\n    //     (uint year, uint month,) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    //     daysInMonth = _getDaysInMonth(year, month);\r\n    // }\r\n    // function _getDaysInMonth(uint year, uint month) internal pure returns (uint daysInMonth) {\r\n    //     if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {\r\n    //         daysInMonth = 31;\r\n    //     } else if (month != 2) {\r\n    //         daysInMonth = 30;\r\n    //     } else {\r\n    //         daysInMonth = _isLeapYear(year) ? 29 : 28;\r\n    //     }\r\n    // }\r\n    // // 1 = Monday, 7 = Sunday\r\n    // function getDayOfWeek(uint timestamp) internal pure returns (uint dayOfWeek) {\r\n    //     uint _days = timestamp / SECONDS_PER_DAY;\r\n    //     dayOfWeek = (_days + 3) % 7 + 1;\r\n    // }\r\n\r\n    // function getYear(uint timestamp) internal pure returns (uint year) {\r\n    //     (year,,) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    // }\r\n    // function getMonth(uint timestamp) internal pure returns (uint month) {\r\n    //     (,month,) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    // }\r\n    // function getDay(uint timestamp) internal pure returns (uint day) {\r\n    //     (,,day) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    // }\r\n    // function getHour(uint timestamp) internal pure returns (uint hour) {\r\n    //     uint secs = timestamp % SECONDS_PER_DAY;\r\n    //     hour = secs / SECONDS_PER_HOUR;\r\n    // }\r\n    // function getMinute(uint timestamp) internal pure returns (uint minute) {\r\n    //     uint secs = timestamp % SECONDS_PER_HOUR;\r\n    //     minute = secs / SECONDS_PER_MINUTE;\r\n    // }\r\n    // function getSecond(uint timestamp) internal pure returns (uint second) {\r\n    //     second = timestamp % SECONDS_PER_MINUTE;\r\n    // }\r\n\r\n    // function addYears(uint timestamp, uint _years) internal pure returns (uint newTimestamp) {\r\n    //     (uint year, uint month, uint day) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    //     year += _years;\r\n    //     uint daysInMonth = _getDaysInMonth(year, month);\r\n    //     if (day > daysInMonth) {\r\n    //         day = daysInMonth;\r\n    //     }\r\n    //     newTimestamp = _daysFromDate(year, month, day) * SECONDS_PER_DAY + timestamp % SECONDS_PER_DAY;\r\n    //     require(newTimestamp >= timestamp);\r\n    // }\r\n    // function addMonths(uint timestamp, uint _months) internal pure returns (uint newTimestamp) {\r\n    //     (uint year, uint month, uint day) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    //     month += _months;\r\n    //     year += (month - 1) / 12;\r\n    //     month = (month - 1) % 12 + 1;\r\n    //     uint daysInMonth = _getDaysInMonth(year, month);\r\n    //     if (day > daysInMonth) {\r\n    //         day = daysInMonth;\r\n    //     }\r\n    //     newTimestamp = _daysFromDate(year, month, day) * SECONDS_PER_DAY + timestamp % SECONDS_PER_DAY;\r\n    //     require(newTimestamp >= timestamp);\r\n    // }\r\n    // function addDays(uint timestamp, uint _days) internal pure returns (uint newTimestamp) {\r\n    //     newTimestamp = timestamp + _days * SECONDS_PER_DAY;\r\n    //     require(newTimestamp >= timestamp);\r\n    // }\r\n    // function addHours(uint timestamp, uint _hours) internal pure returns (uint newTimestamp) {\r\n    //     newTimestamp = timestamp + _hours * SECONDS_PER_HOUR;\r\n    //     require(newTimestamp >= timestamp);\r\n    // }\r\n    // function addMinutes(uint timestamp, uint _minutes) internal pure returns (uint newTimestamp) {\r\n    //     newTimestamp = timestamp + _minutes * SECONDS_PER_MINUTE;\r\n    //     require(newTimestamp >= timestamp);\r\n    // }\r\n    // function addSeconds(uint timestamp, uint _seconds) internal pure returns (uint newTimestamp) {\r\n    //     newTimestamp = timestamp + _seconds;\r\n    //     require(newTimestamp >= timestamp);\r\n    // }\r\n\r\n    // function subYears(uint timestamp, uint _years) internal pure returns (uint newTimestamp) {\r\n    //     (uint year, uint month, uint day) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    //     year -= _years;\r\n    //     uint daysInMonth = _getDaysInMonth(year, month);\r\n    //     if (day > daysInMonth) {\r\n    //         day = daysInMonth;\r\n    //     }\r\n    //     newTimestamp = _daysFromDate(year, month, day) * SECONDS_PER_DAY + timestamp % SECONDS_PER_DAY;\r\n    //     require(newTimestamp <= timestamp);\r\n    // }\r\n    // function subMonths(uint timestamp, uint _months) internal pure returns (uint newTimestamp) {\r\n    //     (uint year, uint month, uint day) = _daysToDate(timestamp / SECONDS_PER_DAY);\r\n    //     uint yearMonth = year * 12 + (month - 1) - _months;\r\n    //     year = yearMonth / 12;\r\n    //     month = yearMonth % 12 + 1;\r\n    //     uint daysInMonth = _getDaysInMonth(year, month);\r\n    //     if (day > daysInMonth) {\r\n    //         day = daysInMonth;\r\n    //     }\r\n    //     newTimestamp = _daysFromDate(year, month, day) * SECONDS_PER_DAY + timestamp % SECONDS_PER_DAY;\r\n    //     require(newTimestamp <= timestamp);\r\n    // }\r\n    // function subDays(uint timestamp, uint _days) internal pure returns (uint newTimestamp) {\r\n    //     newTimestamp = timestamp - _days * SECONDS_PER_DAY;\r\n    //     require(newTimestamp <= timestamp);\r\n    // }\r\n    // function subHours(uint timestamp, uint _hours) internal pure returns (uint newTimestamp) {\r\n    //     newTimestamp = timestamp - _hours * SECONDS_PER_HOUR;\r\n    //     require(newTimestamp <= timestamp);\r\n    // }\r\n    // function subMinutes(uint timestamp, uint _minutes) internal pure returns (uint newTimestamp) {\r\n    //     newTimestamp = timestamp - _minutes * SECONDS_PER_MINUTE;\r\n    //     require(newTimestamp <= timestamp);\r\n    // }\r\n    // function subSeconds(uint timestamp, uint _seconds) internal pure returns (uint newTimestamp) {\r\n    //     newTimestamp = timestamp - _seconds;\r\n    //     require(newTimestamp <= timestamp);\r\n    // }\r\n\r\n    // function diffYears(uint fromTimestamp, uint toTimestamp) internal pure returns (uint _years) {\r\n    //     require(fromTimestamp <= toTimestamp);\r\n    //     (uint fromYear,,) = _daysToDate(fromTimestamp / SECONDS_PER_DAY);\r\n    //     (uint toYear,,) = _daysToDate(toTimestamp / SECONDS_PER_DAY);\r\n    //     _years = toYear - fromYear;\r\n    // }\r\n    // function diffMonths(uint fromTimestamp, uint toTimestamp) internal pure returns (uint _months) {\r\n    //     require(fromTimestamp <= toTimestamp);\r\n    //     (uint fromYear, uint fromMonth,) = _daysToDate(fromTimestamp / SECONDS_PER_DAY);\r\n    //     (uint toYear, uint toMonth,) = _daysToDate(toTimestamp / SECONDS_PER_DAY);\r\n    //     _months = toYear * 12 + toMonth - fromYear * 12 - fromMonth;\r\n    // }\r\n    // function diffDays(uint fromTimestamp, uint toTimestamp) internal pure returns (uint _days) {\r\n    //     require(fromTimestamp <= toTimestamp);\r\n    //     _days = (toTimestamp - fromTimestamp) / SECONDS_PER_DAY;\r\n    // }\r\n    // function diffHours(uint fromTimestamp, uint toTimestamp) internal pure returns (uint _hours) {\r\n    //     require(fromTimestamp <= toTimestamp);\r\n    //     _hours = (toTimestamp - fromTimestamp) / SECONDS_PER_HOUR;\r\n    // }\r\n    // function diffMinutes(uint fromTimestamp, uint toTimestamp) internal pure returns (uint _minutes) {\r\n    //     require(fromTimestamp <= toTimestamp);\r\n    //     _minutes = (toTimestamp - fromTimestamp) / SECONDS_PER_MINUTE;\r\n    // }\r\n    // function diffSeconds(uint fromTimestamp, uint toTimestamp) internal pure returns (uint _seconds) {\r\n    //     require(fromTimestamp <= toTimestamp);\r\n    //     _seconds = toTimestamp - fromTimestamp;\r\n    // }\r\n}"
			},
			"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../StringsUpgradeable.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSAUpgradeable {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV // Deprecated in v4.8\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", StringsUpgradeable.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"
			},
			"lib/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"lib/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"lib/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\n        require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"lib/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"
			},
			"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.9._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MMEXT.sol": {
				"ACCONFIG": {
					"abi": [
						{
							"inputs": [],
							"name": "acb",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "acbPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buylocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "machineExpireTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minePool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mv",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mvCollectionAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "techAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acb()": "5bff9787",
							"acbPair()": "5250c9b5",
							"buylocked()": "a03cc2a6",
							"claimInterval()": "0b433a12",
							"machineExpireTime()": "2d8852ee",
							"marketAddress()": "95623641",
							"minePool()": "602e6623",
							"mv()": "8f05cdf5",
							"mvCollectionAddress()": "e9d610e5",
							"operator()": "570ca735",
							"platformAddress()": "dbe55e56",
							"swapRate()": "698518e5",
							"techAddress()": "1e56cfab",
							"usdt()": "2f48ab7d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acb\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acbPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buylocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"machineExpireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mv\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mvCollectionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"techAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MMEXT.sol\":\"ACCONFIG\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/MMEXT.sol\":{\"keccak256\":\"0x425879a64e1df4d4745a4c4589e466611c68f2f25770b206eba2593dd2de66de\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5b06406cdcf7650819bca64184b1d9d9317b27e03999daeae65ec7f210d9400\",\"dweb:/ipfs/QmPBZDwdzacdZMCuvuCXoCWwZ3SCTGtWtZbKG4PgdacNDo\"]},\"contracts/interface/IMMStore.sol\":{\"keccak256\":\"0x8d5805c70715326d915737d535921bc2dab8bcfee4b9f87e871ccce48374e53f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://63a38eb391b16a55bb9e2f20d8ece72c84791f8fead9e27fecdd06248c8c21aa\",\"dweb:/ipfs/QmXLCb7YyfPSScc47jejMP5uteCYqfSoEZe79ZykM3emK2\"]},\"lib/BokkyPooBahsDateTimeLibrary.sol\":{\"keccak256\":\"0x6148dd7163d9f93f851984b90cd9262d75a36406680c01a5d4e1f75ea48ba44e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc10a9f17a39a09b3e85d044cdecbec71557192be815d0c69ac6e1c3507bc51\",\"dweb:/ipfs/QmSHDAmmP78m7rVtr3aQiKPMiDNbYb3FetFaGtuXnHsB2u\"]},\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IACBPair_": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "_reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "_reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "_blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "remove",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "simpleSwap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getReserves()": "0902f1ac",
							"mint(address)": "6a627842",
							"remove(uint256,uint256,address)": "e840427d",
							"simpleSwap(address,address,uint256)": "a1e15411",
							"token0()": "0dfe1681"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"_reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"_reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"_blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"simpleSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MMEXT.sol\":\"IACBPair_\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/MMEXT.sol\":{\"keccak256\":\"0x425879a64e1df4d4745a4c4589e466611c68f2f25770b206eba2593dd2de66de\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5b06406cdcf7650819bca64184b1d9d9317b27e03999daeae65ec7f210d9400\",\"dweb:/ipfs/QmPBZDwdzacdZMCuvuCXoCWwZ3SCTGtWtZbKG4PgdacNDo\"]},\"contracts/interface/IMMStore.sol\":{\"keccak256\":\"0x8d5805c70715326d915737d535921bc2dab8bcfee4b9f87e871ccce48374e53f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://63a38eb391b16a55bb9e2f20d8ece72c84791f8fead9e27fecdd06248c8c21aa\",\"dweb:/ipfs/QmXLCb7YyfPSScc47jejMP5uteCYqfSoEZe79ZykM3emK2\"]},\"lib/BokkyPooBahsDateTimeLibrary.sol\":{\"keccak256\":\"0x6148dd7163d9f93f851984b90cd9262d75a36406680c01a5d4e1f75ea48ba44e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc10a9f17a39a09b3e85d044cdecbec71557192be815d0c69ac6e1c3507bc51\",\"dweb:/ipfs/QmSHDAmmP78m7rVtr3aQiKPMiDNbYb3FetFaGtuXnHsB2u\"]},\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMinePool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"withdraw(address,uint256)": "f3fef3a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MMEXT.sol\":\"IMinePool\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/MMEXT.sol\":{\"keccak256\":\"0x425879a64e1df4d4745a4c4589e466611c68f2f25770b206eba2593dd2de66de\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5b06406cdcf7650819bca64184b1d9d9317b27e03999daeae65ec7f210d9400\",\"dweb:/ipfs/QmPBZDwdzacdZMCuvuCXoCWwZ3SCTGtWtZbKG4PgdacNDo\"]},\"contracts/interface/IMMStore.sol\":{\"keccak256\":\"0x8d5805c70715326d915737d535921bc2dab8bcfee4b9f87e871ccce48374e53f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://63a38eb391b16a55bb9e2f20d8ece72c84791f8fead9e27fecdd06248c8c21aa\",\"dweb:/ipfs/QmXLCb7YyfPSScc47jejMP5uteCYqfSoEZe79ZykM3emK2\"]},\"lib/BokkyPooBahsDateTimeLibrary.sol\":{\"keccak256\":\"0x6148dd7163d9f93f851984b90cd9262d75a36406680c01a5d4e1f75ea48ba44e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc10a9f17a39a09b3e85d044cdecbec71557192be815d0c69ac6e1c3507bc51\",\"dweb:/ipfs/QmSHDAmmP78m7rVtr3aQiKPMiDNbYb3FetFaGtuXnHsB2u\"]},\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MMEXT": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MMstore",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "NoOrder",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_store",
									"type": "address"
								}
							],
							"name": "changeMmstore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "claimOrderArr",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "orderType",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "createTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNoOrderRewardBy",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "number",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct IMMStore.TransferOrder[]",
									"name": "NoOrderReward",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "end",
									"type": "uint256"
								}
							],
							"name": "getNoOrderRewardByIndex",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "number",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct IMMStore.TransferOrder[]",
									"name": "NoOrderReward",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_store",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "machineArr",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "computingPower",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "createTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferMaxOrder",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "number",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MMEXT.sol\":2517:3782  contract MMEXT is IMMStore,OwnableUpgradeable,UUPSUpgradeable{... */\n  mstore(0x40, 0xa0)\n    /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1332:1336  this */\n  address\n    /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1289:1337  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"contracts/MMEXT.sol\":2517:3782  contract MMEXT is IMMStore,OwnableUpgradeable,UUPSUpgradeable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/MMEXT.sol\":2517:3782  contract MMEXT is IMMStore,OwnableUpgradeable,UUPSUpgradeable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x08e277c1\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4469ed13\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x661a5614\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8a1e0a17\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xcb82ab19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd05a38d7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2782d6d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf64387a7\n      eq\n      tag_16\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MMEXT.sol\":2712:2742  TransferOrder[] public NoOrder */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":448:480   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":430:481   */\n      dup6\n      mstore\n        /* \"#utility.yul\":512:514   */\n      0x20\n        /* \"#utility.yul\":497:515   */\n      dup6\n      add\n        /* \"#utility.yul\":490:524   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":540:558   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":533:567   */\n      mstore\n        /* \"#utility.yul\":598:600   */\n      0x60\n        /* \"#utility.yul\":583:601   */\n      dup3\n      add\n        /* \"#utility.yul\":576:610   */\n      mstore\n        /* \"#utility.yul\":417:420   */\n      0x80\n        /* \"#utility.yul\":402:421   */\n      add\n        /* \"contracts/MMEXT.sol\":2712:2742  TransferOrder[] public NoOrder */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3317:3514  function upgradeTo(address newImplementation) external virtual onlyProxy {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      stop\n        /* \"contracts/MMEXT.sol\":2749:2788  TransferOrder[] public transferMaxOrder */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_18\n      tag_31\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3763:3985  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {... */\n    tag_5:\n      tag_25\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":2728:2753   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2716:2718   */\n      0x20\n        /* \"#utility.yul\":2701:2719   */\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      tag_22\n        /* \"#utility.yul\":2582:2759   */\n      jump\n        /* \"contracts/MMEXT.sol\":3056:3147  function changeMmstore(address _store)external onlyOwner{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_25\n      tag_45\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_25\n      tag_49\n      jump\t// in\n        /* \"contracts/MMEXT.sol\":2594:2616  address public MMstore */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sload(0xc9)\n      tag_51\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_51:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2928:2960   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2910:2961   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2898:2900   */\n      0x20\n        /* \"#utility.yul\":2883:2901   */\n      add\n        /* \"contracts/MMEXT.sol\":2594:2616  address public MMstore */\n      tag_22\n        /* \"#utility.yul\":2764:2967   */\n      jump\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_51\n      tag_57\n      jump\t// in\n        /* \"contracts/MMEXT.sol\":2820:2956  function initialize( address _store)external initializer{... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_25\n      tag_61\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"contracts/MMEXT.sol\":2672:2705  ClaimOrder[] public claimOrderArr */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_18\n      tag_65\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"contracts/MMEXT.sol\":3161:3579  function getNoOrderRewardByIndex(uint256 start,uint256 end) external view returns(TransferOrder[] memory NoOrderReward) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n        /* \"contracts/MMEXT.sol\":2632:2665  MiningMachine[] public machineArr */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_18\n      tag_77\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_25\n      tag_82\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/MMEXT.sol\":3589:3762  function getNoOrderRewardBy( ) external view returns(TransferOrder[] memory NoOrderReward) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_69\n      tag_86\n      jump\t// in\n        /* \"contracts/MMEXT.sol\":2712:2742  TransferOrder[] public NoOrder */\n    tag_21:\n      0xcc\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x04\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap4\n      pop\n      swap2\n      swap1\n      dup5\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3317:3514  function upgradeTo(address newImplementation) external virtual onlyProxy {... */\n    tag_28:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_94\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1989  _getImplementation */\n      tag_95\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      jump\t// in\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_98\n      jump\t// in\n    tag_96:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3400:3436  _authorizeUpgrade(newImplementation) */\n      tag_100\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3418:3435  newImplementation */\n      dup2\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3400:3417  _authorizeUpgrade */\n      tag_101\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3400:3436  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_100:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3487:3499  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3497:3498  0 */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3487:3499  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3446:3507  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_102\n      swap2\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3468:3485  newImplementation */\n      dup4\n      swap2\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3487:3499  new bytes(0) */\n      swap1\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3446:3467  _upgradeToAndCallUUPS */\n      tag_107\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3446:3507  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_102:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3317:3514  function upgradeTo(address newImplementation) external virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"contracts/MMEXT.sol\":2749:2788  TransferOrder[] public transferMaxOrder */\n    tag_32:\n      0xcd\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3763:3985  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {... */\n    tag_37:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_111:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_113\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1989  _getImplementation */\n      tag_95\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      jump\t// in\n    tag_113:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_98\n      jump\t// in\n    tag_114:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3880:3916  _authorizeUpgrade(newImplementation) */\n      tag_117\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3898:3915  newImplementation */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3880:3897  _authorizeUpgrade */\n      tag_101\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3880:3916  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_117:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3926:3978  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_118\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3948:3965  newImplementation */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3967:3971  data */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3973:3977  true */\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3926:3947  _upgradeToAndCallUUPS */\n      tag_107\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3926:3978  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_118:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3763:3985  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_40:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3084:3091  bytes32 */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2324:2328  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2333:2339  __self */\n      immutable(\"0x135d24c3045eb2fc378507486529b206ce031bd4e306ff07b2abc1c06a63b749\")\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2316:2339  address(this) == __self */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5217:5219   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5199:5220   */\n      mstore\n        /* \"#utility.yul\":5256:5258   */\n      0x38\n        /* \"#utility.yul\":5236:5254   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5229:5259   */\n      mstore\n        /* \"#utility.yul\":5295:5329   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":5275:5293   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5268:5330   */\n      mstore\n      shl(0x42, 0x1b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":5346:5364   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5339:5393   */\n      mstore\n        /* \"#utility.yul\":5410:5429   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_92\n        /* \"#utility.yul\":5015:5435   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_120:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MMEXT.sol\":3056:3147  function changeMmstore(address _store)external onlyOwner{... */\n    tag_46:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_125\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_126\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/MMEXT.sol\":3123:3130  MMstore */\n      0xc9\n        /* \"contracts/MMEXT.sol\":3123:3139  MMstore = _store */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/MMEXT.sol\":3056:3147  function changeMmstore(address _store)external onlyOwner{... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_49:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_129\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_126\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_129:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_131\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_132\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_131:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_57:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"contracts/MMEXT.sol\":2820:2956  function initialize( address _store)external initializer{... */\n    tag_62:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3287  bool isTopLevelCall */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3291:3304  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3290:3304  !_initializing */\n      iszero\n      dup1\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_135\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3366  _initialized */\n      sload(0x00)\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3369:3370  1 */\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3366  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3370  _initialized < 1 */\n      lt\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n    tag_135:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3335:3443  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_139\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3421  AddressUpgradeable.isContract(address(this)) */\n      tag_137\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3415:3419  this */\n      address\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3406  AddressUpgradeable.isContract */\n      tag_138\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3421  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_137:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3421  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_139\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3425:3437  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3425:3442  _initialized == 1 */\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_139:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5642:5644   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5624:5645   */\n      mstore\n        /* \"#utility.yul\":5681:5683   */\n      0x2e\n        /* \"#utility.yul\":5661:5679   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5654:5684   */\n      mstore\n        /* \"#utility.yul\":5720:5754   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":5700:5718   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5693:5755   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":5771:5789   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5764:5808   */\n      mstore\n        /* \"#utility.yul\":5825:5844   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      tag_92\n        /* \"#utility.yul\":5440:5850   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n    tag_140:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3537  _initialized */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3541  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3540:3541  1 */\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3541  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3616  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_143\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3585:3598  _initializing */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3585:3605  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3616  if (isTopLevelCall) {... */\n    tag_143:\n        /* \"contracts/MMEXT.sol\":2887:2903  __Ownable_init() */\n      tag_145\n        /* \"contracts/MMEXT.sol\":2887:2901  __Ownable_init */\n      tag_146\n        /* \"contracts/MMEXT.sol\":2887:2903  __Ownable_init() */\n      jump\t// in\n    tag_145:\n        /* \"contracts/MMEXT.sol\":2925:2932  MMstore */\n      0xc9\n        /* \"contracts/MMEXT.sol\":2925:2941  MMstore = _store */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3636:3735  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_118\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3686:3691  false */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3670:3691  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":6007:6043   */\n      dup2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":5995:5997   */\n      0x20\n        /* \"#utility.yul\":5980:5998   */\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3741  {... */\n      pop\n        /* \"contracts/MMEXT.sol\":2820:2956  function initialize( address _store)external initializer{... */\n      pop\n      jump\t// out\n        /* \"contracts/MMEXT.sol\":2672:2705  ClaimOrder[] public claimOrderArr */\n    tag_66:\n      0xcb\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/MMEXT.sol\":3161:3579  function getNoOrderRewardByIndex(uint256 start,uint256 end) external view returns(TransferOrder[] memory NoOrderReward) {... */\n    tag_72:\n        /* \"contracts/MMEXT.sol\":3243:3279  TransferOrder[] memory NoOrderReward */\n      0x60\n        /* \"contracts/MMEXT.sol\":3292:3323  TransferOrder[] memory NoOrderr */\n      0x00\n        /* \"contracts/MMEXT.sol\":3334:3341  MMstore */\n      0xc9\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MMEXT.sol\":3326:3362  MMSTORE(MMstore).getNoOrderRewardArr */\n      and\n      0x18d36b15\n        /* \"contracts/MMEXT.sol\":3326:3364  MMSTORE(MMstore).getNoOrderRewardArr() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_155\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/MMEXT.sol\":3292:3364  TransferOrder[] memory NoOrderr = MMSTORE(MMstore).getNoOrderRewardArr() */\n      swap1\n      pop\n        /* \"contracts/MMEXT.sol\":3375:3389  uint256 length */\n      0x00\n        /* \"contracts/MMEXT.sol\":3392:3403  end - start */\n      tag_157\n        /* \"contracts/MMEXT.sol\":3398:3403  start */\n      dup6\n        /* \"contracts/MMEXT.sol\":3392:3395  end */\n      dup6\n        /* \"contracts/MMEXT.sol\":3392:3403  end - start */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/MMEXT.sol\":3392:3407  end - start + 1 */\n      tag_159\n      swap1\n        /* \"contracts/MMEXT.sol\":3406:3407  1 */\n      0x01\n        /* \"contracts/MMEXT.sol\":3392:3407  end - start + 1 */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"contracts/MMEXT.sol\":3375:3407  uint256 length = end - start + 1 */\n      swap1\n      pop\n        /* \"contracts/MMEXT.sol\":3454:3460  length */\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/MMEXT.sol\":3434:3461  new TransferOrder[](length) */\n      dup2\n      gt\n      iszero\n      tag_162\n      jumpi\n      tag_162\n      tag_105\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_163\n      jumpi\n      dup2\n      0x20\n      add\n    tag_164:\n      tag_165\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_165:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_164\n      jumpi\n      swap1\n      pop\n    tag_163:\n      pop\n        /* \"contracts/MMEXT.sol\":3418:3461  NoOrderReward = new TransferOrder[](length) */\n      swap3\n      pop\n        /* \"contracts/MMEXT.sol\":3476:3485  uint256 i */\n      0x00\n        /* \"contracts/MMEXT.sol\":3472:3572  for(uint256 i = 0; i < length; i++){... */\n    tag_167:\n        /* \"contracts/MMEXT.sol\":3495:3501  length */\n      dup2\n        /* \"contracts/MMEXT.sol\":3491:3492  i */\n      dup2\n        /* \"contracts/MMEXT.sol\":3491:3501  i < length */\n      lt\n        /* \"contracts/MMEXT.sol\":3472:3572  for(uint256 i = 0; i < length; i++){... */\n      iszero\n      tag_168\n      jumpi\n        /* \"contracts/MMEXT.sol\":3541:3549  NoOrderr */\n      dup3\n        /* \"contracts/MMEXT.sol\":3550:3559  start + i */\n      tag_170\n        /* \"contracts/MMEXT.sol\":3558:3559  i */\n      dup3\n        /* \"contracts/MMEXT.sol\":3550:3555  start */\n      dup9\n        /* \"contracts/MMEXT.sol\":3550:3559  start + i */\n      tag_160\n      jump\t// in\n    tag_170:\n        /* \"contracts/MMEXT.sol\":3541:3560  NoOrderr[start + i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_172\n      jumpi\n      tag_172\n      tag_173\n      jump\t// in\n    tag_172:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/MMEXT.sol\":3522:3535  NoOrderReward */\n      dup5\n        /* \"contracts/MMEXT.sol\":3536:3537  i */\n      dup3\n        /* \"contracts/MMEXT.sol\":3522:3538  NoOrderReward[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_175\n      tag_173\n      jump\t// in\n    tag_175:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/MMEXT.sol\":3522:3560  NoOrderReward[i] = NoOrderr[start + i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/MMEXT.sol\":3503:3506  i++ */\n      dup1\n      dup1\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      swap2\n      pop\n      pop\n        /* \"contracts/MMEXT.sol\":3472:3572  for(uint256 i = 0; i < length; i++){... */\n      jump(tag_167)\n    tag_168:\n      pop\n        /* \"contracts/MMEXT.sol\":3281:3579  {... */\n      pop\n      pop\n        /* \"contracts/MMEXT.sol\":3161:3579  function getNoOrderRewardByIndex(uint256 start,uint256 end) external view returns(TransferOrder[] memory NoOrderReward) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MMEXT.sol\":2632:2665  MiningMachine[] public machineArr */\n    tag_78:\n      0xca\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_83:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_181\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_126\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      dup2\n      and\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8394:8396   */\n      0x20\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8376:8397   */\n      mstore\n        /* \"#utility.yul\":8433:8435   */\n      0x26\n        /* \"#utility.yul\":8413:8431   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8406:8436   */\n      mstore\n        /* \"#utility.yul\":8472:8506   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8452:8470   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8445:8507   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8523:8541   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8516:8552   */\n      mstore\n        /* \"#utility.yul\":8569:8588   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_92\n        /* \"#utility.yul\":8192:8594   */\n      jump\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_183:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_102\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_132\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/MMEXT.sol\":3589:3762  function getNoOrderRewardBy( ) external view returns(TransferOrder[] memory NoOrderReward) {... */\n    tag_86:\n        /* \"contracts/MMEXT.sol\":3715:3722  MMstore */\n      sload(0xc9)\n        /* \"contracts/MMEXT.sol\":3707:3745  MMSTORE(MMstore).getNoOrderRewardArr() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18d36b15)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/MMEXT.sol\":3642:3678  TransferOrder[] memory NoOrderReward */\n      0x60\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/MMEXT.sol\":3715:3722  MMstore */\n      and\n      swap2\n        /* \"contracts/MMEXT.sol\":3707:3743  MMSTORE(MMstore).getNoOrderRewardArr */\n      0x18d36b15\n      swap2\n        /* \"contracts/MMEXT.sol\":3707:3745  MMSTORE(MMstore).getNoOrderRewardArr() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n        /* \"contracts/MMEXT.sol\":3715:3722  MMstore */\n      0x00\n      swap3\n        /* \"contracts/MMEXT.sol\":3707:3745  MMSTORE(MMstore).getNoOrderRewardArr() */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/MMEXT.sol\":3715:3722  MMstore */\n      dup7\n        /* \"contracts/MMEXT.sol\":3707:3745  MMSTORE(MMstore).getNoOrderRewardArr() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_190\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_156\n      jump\t// in\n    tag_190:\n        /* \"contracts/MMEXT.sol\":3691:3745  NoOrderReward = MMSTORE(MMstore).getNoOrderRewardArr() */\n      swap1\n      pop\n        /* \"contracts/MMEXT.sol\":3589:3762  function getNoOrderRewardBy( ) external view returns(TransferOrder[] memory NoOrderReward) {... */\n      swap1\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1509:1660  function _getImplementation() internal view returns (address) {... */\n    tag_95:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1588:1653  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1509:1660  function _getImplementation() internal view returns (address) {... */\n      jump\t// out\n        /* \"contracts/MMEXT.sol\":2970:3036  function _authorizeUpgrade(address) internal override onlyOwner {} */\n    tag_101:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_102\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_126\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2884:3858  function _upgradeToAndCallUUPS(... */\n    tag_107:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1023:1089  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3330:3389  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value */\n      sload\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3326:3852  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3405:3442  _setImplementation(newImplementation) */\n      tag_201\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3424:3441  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3405:3423  _setImplementation */\n      tag_202\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3405:3442  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_201:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2884:3858  function _upgradeToAndCallUUPS(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3326:3852  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_200:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3506:3523  newImplementation */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3477:3538  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3477:3540  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_204\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_205\n      swap2\n      dup2\n      add\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      0x01\n    tag_204:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3473:3775  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_207\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3704:3760  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8990:8992   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3704:3760  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8972:8993   */\n      mstore\n        /* \"#utility.yul\":9029:9031   */\n      0x2e\n        /* \"#utility.yul\":9009:9027   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9002:9032   */\n      mstore\n        /* \"#utility.yul\":9068:9102   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":9048:9066   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9041:9103   */\n      mstore\n      shl(0x90, 0x6f6e206973206e6f742055555053)\n        /* \"#utility.yul\":9119:9137   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9112:9156   */\n      mstore\n        /* \"#utility.yul\":9173:9192   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3704:3760  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      tag_92\n        /* \"#utility.yul\":8788:9198   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3473:3775  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_207:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3590:3618  slot == _IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9405:9407   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9387:9408   */\n      mstore\n        /* \"#utility.yul\":9444:9446   */\n      0x29\n        /* \"#utility.yul\":9424:9442   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9417:9447   */\n      mstore\n        /* \"#utility.yul\":9483:9517   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":9463:9481   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9456:9518   */\n      mstore\n      shl(0xba, 0x1a58589b1955555251)\n        /* \"#utility.yul\":9534:9552   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9527:9566   */\n      mstore\n        /* \"#utility.yul\":9583:9602   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_92\n        /* \"#utility.yul\":9203:9608   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n    tag_214:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3541:3679  returns (bytes32 slot) {... */\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3788:3841  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_201\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3806:3823  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3825:3829  data */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3831:3840  forceCall */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3788:3805  _upgradeToAndCall */\n      tag_218\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3788:3841  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_126:\n        /* \"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      tag_222\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1667  owner */\n      tag_57\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      jump\t// in\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9815:9817   */\n      0x20\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9797:9818   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9834:9852   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9827:9857   */\n      mstore\n        /* \"#utility.yul\":9893:9927   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9873:9891   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9866:9928   */\n      mstore\n        /* \"#utility.yul\":9945:9963   */\n      0x64\n      add\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_92\n        /* \"#utility.yul\":9613:9969   */\n      jump\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_132:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      swap2\n      and\n      swap2\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      dup3\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n    tag_138:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      and\n      extcodesize\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_146:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5363:5376  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5355:5424  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_231\n      jump\t// in\n    tag_229:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_131\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_234\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1751:2032  function _setImplementation(address newImplementation) private {... */\n    tag_202:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1832:1880  AddressUpgradeable.isContract(newImplementation) */\n      tag_238\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1862:1879  newImplementation */\n      dup2\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1832:1861  AddressUpgradeable.isContract */\n      tag_138\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1832:1880  AddressUpgradeable.isContract(newImplementation) */\n      jump\t// in\n    tag_238:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10588:10590   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10570:10591   */\n      mstore\n        /* \"#utility.yul\":10627:10629   */\n      0x2d\n        /* \"#utility.yul\":10607:10625   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10600:10630   */\n      mstore\n        /* \"#utility.yul\":10666:10700   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":10646:10664   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10639:10701   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":10717:10735   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10710:10753   */\n      mstore\n        /* \"#utility.yul\":10770:10789   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_92\n        /* \"#utility.yul\":10386:10795   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_239:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1940:2025  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1751:2032  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2424:2712  function _upgradeToAndCall(... */\n    tag_218:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2562:2591  _upgradeTo(newImplementation) */\n      tag_244\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2573:2590  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2562:2572  _upgradeTo */\n      tag_245\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2562:2591  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_244:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2619:2620  0 */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2609  data */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2616  data.length */\n      mload\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2620  data.length > 0 */\n      gt\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2633  data.length > 0 || forceCall */\n      dup1\n      tag_246\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2624:2633  forceCall */\n      dup1\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2633  data.length > 0 || forceCall */\n    tag_246:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2601:2706  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2649:2695  _functionDelegateCall(newImplementation, data) */\n      tag_248\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2671:2688  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2690:2694  data */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2649:2670  _functionDelegateCall */\n      tag_249\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2649:2695  _functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_248:\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2424:2712  function _upgradeToAndCall(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_234:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5363:5376  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5355:5424  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_231\n      jump\t// in\n    tag_252:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_131\n        /* \"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_132\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2138:2290  function _upgradeTo(address newImplementation) internal {... */\n    tag_245:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2241  _setImplementation(newImplementation) */\n      tag_258\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2223:2240  newImplementation */\n      dup2\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2222  _setImplementation */\n      tag_202\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2241  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_258:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2256:2283  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2138:2290  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6780:7235  function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {... */\n    tag_249:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6863:6875  bytes memory */\n      0x60\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6895:6932  AddressUpgradeable.isContract(target) */\n      tag_260\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6925:6931  target */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6895:6924  AddressUpgradeable.isContract */\n      tag_138\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6895:6932  AddressUpgradeable.isContract(target) */\n      jump\t// in\n    tag_260:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11002:11004   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10984:11005   */\n      mstore\n        /* \"#utility.yul\":11041:11043   */\n      0x26\n        /* \"#utility.yul\":11021:11039   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11014:11044   */\n      mstore\n        /* \"#utility.yul\":11080:11114   */\n      0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n        /* \"#utility.yul\":11060:11078   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11053:11115   */\n      mstore\n      shl(0xd2, 0x1b9d1c9858dd)\n        /* \"#utility.yul\":11131:11149   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11124:11160   */\n      mstore\n        /* \"#utility.yul\":11177:11196   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n      tag_92\n        /* \"#utility.yul\":10800:11202   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n    tag_261:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7046:7058  bool success */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7060:7083  bytes memory returndata */\n      dup1\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7087:7093  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7087:7106  target.delegatecall */\n      and\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7107:7111  data */\n      dup5\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7087:7112  target.delegatecall(data) */\n      mload(0x40)\n      tag_264\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_268\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_267)\n    tag_268:\n      0x60\n      swap2\n      pop\n    tag_267:\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7045:7112  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7228  AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      tag_269\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7165:7172  success */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7174:7184  returndata */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7228  AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7164  AddressUpgradeable.verifyCallResult */\n      tag_270\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7228  AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_269:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7122:7228  return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      swap3\n      pop\n      pop\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6780:7235  function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {... */\n    tag_259:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7438:7733  function verifyCallResult(... */\n    tag_270:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7584:7596  bytes memory */\n      0x60\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7612:7619  success */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7608:7727  if (success) {... */\n      iszero\n      tag_272\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7642:7652  returndata */\n      dup2\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7635:7652  return returndata */\n      jump(tag_274)\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7608:7727  if (success) {... */\n    tag_272:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7683:7716  _revert(returndata, errorMessage) */\n      tag_274\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7691:7701  returndata */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7703:7715  errorMessage */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7683:7690  _revert */\n      tag_275\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7683:7716  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_274:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7438:7733  function verifyCallResult(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7739:8279  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_275:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7898:7915  returndata.length */\n      dup2\n      mload\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7898:7919  returndata.length > 0 */\n      iszero\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7894:8273  if (returndata.length > 0) {... */\n      tag_277\n      jumpi\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8126:8136  returndata */\n      dup2\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8120:8137  mload(returndata) */\n      mload\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8182:8197  returndata_size */\n      dup1\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8169:8179  returndata */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8165:8167  32 */\n      0x20\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8161:8180  add(32, returndata) */\n      add\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8154:8198  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7894:8273  if (returndata.length > 0) {... */\n    tag_277:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8249:8261  errorMessage */\n      dup1\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8242:8262  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_20:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_288:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":621:752   */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":696:727   */\n      dup2\n      and\n        /* \"#utility.yul\":686:728   */\n      dup2\n      eq\n        /* \"#utility.yul\":676:746   */\n      tag_102\n      jumpi\n        /* \"#utility.yul\":742:743   */\n      0x00\n        /* \"#utility.yul\":739:740   */\n      dup1\n        /* \"#utility.yul\":732:744   */\n      revert\n        /* \"#utility.yul\":757:1004   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":869:871   */\n      0x20\n        /* \"#utility.yul\":857:866   */\n      dup3\n        /* \"#utility.yul\":848:855   */\n      dup5\n        /* \"#utility.yul\":844:867   */\n      sub\n        /* \"#utility.yul\":840:872   */\n      slt\n        /* \"#utility.yul\":837:889   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":885:886   */\n      0x00\n        /* \"#utility.yul\":882:883   */\n      dup1\n        /* \"#utility.yul\":875:887   */\n      revert\n        /* \"#utility.yul\":837:889   */\n    tag_293:\n        /* \"#utility.yul\":924:933   */\n      dup2\n        /* \"#utility.yul\":911:934   */\n      calldataload\n        /* \"#utility.yul\":943:974   */\n      tag_274\n        /* \"#utility.yul\":968:973   */\n      dup2\n        /* \"#utility.yul\":943:974   */\n      tag_281\n      jump\t// in\n        /* \"#utility.yul\":1009:1136   */\n    tag_105:\n        /* \"#utility.yul\":1070:1080   */\n      0x4e487b71\n        /* \"#utility.yul\":1065:1068   */\n      0xe0\n        /* \"#utility.yul\":1061:1081   */\n      shl\n        /* \"#utility.yul\":1058:1059   */\n      0x00\n        /* \"#utility.yul\":1051:1082   */\n      mstore\n        /* \"#utility.yul\":1101:1105   */\n      0x41\n        /* \"#utility.yul\":1098:1099   */\n      0x04\n        /* \"#utility.yul\":1091:1106   */\n      mstore\n        /* \"#utility.yul\":1125:1129   */\n      0x24\n        /* \"#utility.yul\":1122:1123   */\n      0x00\n        /* \"#utility.yul\":1115:1130   */\n      revert\n        /* \"#utility.yul\":1141:1394   */\n    tag_282:\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1207:1216   */\n      mload\n        /* \"#utility.yul\":1255:1259   */\n      0x80\n        /* \"#utility.yul\":1243:1260   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1275:1309   */\n      dup2\n      gt\n        /* \"#utility.yul\":1311:1333   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1272:1334   */\n      or\n        /* \"#utility.yul\":1269:1357   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1337:1355   */\n      tag_298\n      tag_105\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":1373:1375   */\n      0x40\n        /* \"#utility.yul\":1366:1388   */\n      mstore\n        /* \"#utility.yul\":1141:1394   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1399:1674   */\n    tag_283:\n        /* \"#utility.yul\":1470:1472   */\n      0x40\n        /* \"#utility.yul\":1464:1473   */\n      mload\n        /* \"#utility.yul\":1535:1537   */\n      0x1f\n        /* \"#utility.yul\":1516:1529   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1512:1539   */\n      and\n        /* \"#utility.yul\":1500:1540   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1555:1589   */\n      dup2\n      gt\n        /* \"#utility.yul\":1591:1613   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1552:1614   */\n      or\n        /* \"#utility.yul\":1549:1637   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":1617:1635   */\n      tag_301\n      tag_105\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":1653:1655   */\n      0x40\n        /* \"#utility.yul\":1646:1668   */\n      mstore\n        /* \"#utility.yul\":1399:1674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1679:2577   */\n    tag_36:\n        /* \"#utility.yul\":1756:1762   */\n      0x00\n        /* \"#utility.yul\":1764:1770   */\n      dup1\n        /* \"#utility.yul\":1817:1819   */\n      0x40\n        /* \"#utility.yul\":1805:1814   */\n      dup4\n        /* \"#utility.yul\":1796:1803   */\n      dup6\n        /* \"#utility.yul\":1792:1815   */\n      sub\n        /* \"#utility.yul\":1788:1820   */\n      slt\n        /* \"#utility.yul\":1785:1837   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":1833:1834   */\n      0x00\n        /* \"#utility.yul\":1830:1831   */\n      dup1\n        /* \"#utility.yul\":1823:1835   */\n      revert\n        /* \"#utility.yul\":1785:1837   */\n    tag_303:\n        /* \"#utility.yul\":1872:1881   */\n      dup3\n        /* \"#utility.yul\":1859:1882   */\n      calldataload\n        /* \"#utility.yul\":1891:1922   */\n      tag_304\n        /* \"#utility.yul\":1916:1921   */\n      dup2\n        /* \"#utility.yul\":1891:1922   */\n      tag_281\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1941:1946   */\n      swap2\n      pop\n        /* \"#utility.yul\":1965:1967   */\n      0x20\n        /* \"#utility.yul\":2003:2021   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":1990:2022   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2071:2085   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2068:2102   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2095:2096   */\n      dup1\n        /* \"#utility.yul\":2088:2100   */\n      revert\n        /* \"#utility.yul\":2068:2102   */\n    tag_305:\n        /* \"#utility.yul\":2136:2142   */\n      dup2\n        /* \"#utility.yul\":2125:2134   */\n      dup7\n        /* \"#utility.yul\":2121:2143   */\n      add\n        /* \"#utility.yul\":2111:2143   */\n      swap2\n      pop\n        /* \"#utility.yul\":2181:2188   */\n      dup7\n        /* \"#utility.yul\":2174:2178   */\n      0x1f\n        /* \"#utility.yul\":2170:2172   */\n      dup4\n        /* \"#utility.yul\":2166:2179   */\n      add\n        /* \"#utility.yul\":2162:2189   */\n      slt\n        /* \"#utility.yul\":2152:2207   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2203:2204   */\n      0x00\n        /* \"#utility.yul\":2200:2201   */\n      dup1\n        /* \"#utility.yul\":2193:2205   */\n      revert\n        /* \"#utility.yul\":2152:2207   */\n    tag_306:\n        /* \"#utility.yul\":2239:2241   */\n      dup2\n        /* \"#utility.yul\":2226:2242   */\n      calldataload\n        /* \"#utility.yul\":2261:2263   */\n      dup2\n        /* \"#utility.yul\":2257:2259   */\n      dup2\n        /* \"#utility.yul\":2254:2264   */\n      gt\n        /* \"#utility.yul\":2251:2287   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":2267:2285   */\n      tag_308\n      tag_105\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2309:2362   */\n      tag_309\n        /* \"#utility.yul\":2352:2354   */\n      0x1f\n        /* \"#utility.yul\":2333:2346   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2329:2356   */\n      and\n        /* \"#utility.yul\":2325:2361   */\n      dup6\n      add\n        /* \"#utility.yul\":2309:2362   */\n      tag_283\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2296:2362   */\n      swap2\n      pop\n        /* \"#utility.yul\":2385:2387   */\n      dup1\n        /* \"#utility.yul\":2378:2383   */\n      dup3\n        /* \"#utility.yul\":2371:2388   */\n      mstore\n        /* \"#utility.yul\":2425:2432   */\n      dup8\n        /* \"#utility.yul\":2420:2422   */\n      dup5\n        /* \"#utility.yul\":2415:2417   */\n      dup3\n        /* \"#utility.yul\":2411:2413   */\n      dup6\n        /* \"#utility.yul\":2407:2418   */\n      add\n        /* \"#utility.yul\":2403:2423   */\n      add\n        /* \"#utility.yul\":2400:2433   */\n      gt\n        /* \"#utility.yul\":2397:2450   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":2446:2447   */\n      0x00\n        /* \"#utility.yul\":2443:2444   */\n      dup1\n        /* \"#utility.yul\":2436:2448   */\n      revert\n        /* \"#utility.yul\":2397:2450   */\n    tag_310:\n        /* \"#utility.yul\":2501:2503   */\n      dup1\n        /* \"#utility.yul\":2496:2498   */\n      dup5\n        /* \"#utility.yul\":2492:2494   */\n      dup5\n        /* \"#utility.yul\":2488:2499   */\n      add\n        /* \"#utility.yul\":2483:2485   */\n      dup6\n        /* \"#utility.yul\":2476:2481   */\n      dup5\n        /* \"#utility.yul\":2472:2486   */\n      add\n        /* \"#utility.yul\":2459:2504   */\n      calldatacopy\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2540:2542   */\n      dup5\n        /* \"#utility.yul\":2535:2537   */\n      dup3\n        /* \"#utility.yul\":2528:2533   */\n      dup5\n        /* \"#utility.yul\":2524:2538   */\n      add\n        /* \"#utility.yul\":2520:2543   */\n      add\n        /* \"#utility.yul\":2513:2547   */\n      mstore\n      pop\n        /* \"#utility.yul\":2566:2571   */\n      dup1\n        /* \"#utility.yul\":2556:2571   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1679:2577   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2972:3220   */\n    tag_71:\n        /* \"#utility.yul\":3040:3046   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup1\n        /* \"#utility.yul\":3101:3103   */\n      0x40\n        /* \"#utility.yul\":3089:3098   */\n      dup4\n        /* \"#utility.yul\":3080:3087   */\n      dup6\n        /* \"#utility.yul\":3076:3099   */\n      sub\n        /* \"#utility.yul\":3072:3104   */\n      slt\n        /* \"#utility.yul\":3069:3121   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":3117:3118   */\n      0x00\n        /* \"#utility.yul\":3114:3115   */\n      dup1\n        /* \"#utility.yul\":3107:3119   */\n      revert\n        /* \"#utility.yul\":3069:3121   */\n    tag_314:\n      pop\n      pop\n        /* \"#utility.yul\":3140:3163   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3210:3212   */\n      0x20\n        /* \"#utility.yul\":3195:3213   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3182:3214   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2972:3220   */\n      jump\t// out\n        /* \"#utility.yul\":3225:4184   */\n    tag_74:\n        /* \"#utility.yul\":3456:3458   */\n      0x20\n        /* \"#utility.yul\":3508:3529   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3578:3591   */\n      dup3\n      mload\n        /* \"#utility.yul\":3481:3499   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3600:3622   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3427:3431   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3456:3458   */\n      swap1\n        /* \"#utility.yul\":3641:3643   */\n      0x40\n      swap1\n        /* \"#utility.yul\":3659:3677   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3700:3715   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":3427:3431   */\n      dup6\n        /* \"#utility.yul\":3743:4158   */\n    tag_316:\n        /* \"#utility.yul\":3757:3763   */\n      dup3\n        /* \"#utility.yul\":3754:3755   */\n      dup2\n        /* \"#utility.yul\":3751:3764   */\n      lt\n        /* \"#utility.yul\":3743:4158   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":3816:3829   */\n      dup2\n      mload\n        /* \"#utility.yul\":3858:3867   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3854:3889   */\n      and\n        /* \"#utility.yul\":3842:3890   */\n      dup6\n      mstore\n        /* \"#utility.yul\":3930:3941   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":3924:3942   */\n      mload\n        /* \"#utility.yul\":3910:3922   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":3903:3943   */\n      mstore\n        /* \"#utility.yul\":3983:3994   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":3977:3995   */\n      mload\n        /* \"#utility.yul\":3963:3975   */\n      dup7\n      dup7\n      add\n        /* \"#utility.yul\":3956:3996   */\n      mstore\n        /* \"#utility.yul\":4019:4023   */\n      0x60\n        /* \"#utility.yul\":4063:4074   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":4057:4075   */\n      mload\n        /* \"#utility.yul\":4043:4055   */\n      swap1\n      dup6\n      add\n        /* \"#utility.yul\":4036:4076   */\n      mstore\n        /* \"#utility.yul\":4105:4109   */\n      0x80\n        /* \"#utility.yul\":4096:4110   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":4133:4148   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3886:3887   */\n      0x01\n        /* \"#utility.yul\":3772:3781   */\n      add\n        /* \"#utility.yul\":3743:4158   */\n      jump(tag_316)\n    tag_318:\n      pop\n        /* \"#utility.yul\":4175:4178   */\n      swap2\n      swap8\n        /* \"#utility.yul\":3225:4184   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4189:4597   */\n    tag_93:\n        /* \"#utility.yul\":4391:4393   */\n      0x20\n        /* \"#utility.yul\":4373:4394   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4430:4432   */\n      0x2c\n        /* \"#utility.yul\":4410:4428   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4403:4433   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_662a7ba1d8fb60beff3d02117181416eb800676fa4d6f1ebc4c3fea5cd79ec88\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":4464:4466   */\n      0x40\n        /* \"#utility.yul\":4449:4467   */\n      dup3\n      add\n        /* \"#utility.yul\":4442:4504   */\n      mstore\n      shl(0xa2, 0x19195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":4535:4537   */\n      0x60\n        /* \"#utility.yul\":4520:4538   */\n      dup3\n      add\n        /* \"#utility.yul\":4513:4555   */\n      mstore\n        /* \"#utility.yul\":4587:4590   */\n      0x80\n        /* \"#utility.yul\":4572:4591   */\n      add\n      swap1\n        /* \"#utility.yul\":4189:4597   */\n      jump\t// out\n        /* \"#utility.yul\":4602:5010   */\n    tag_98:\n        /* \"#utility.yul\":4804:4806   */\n      0x20\n        /* \"#utility.yul\":4786:4807   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4843:4845   */\n      0x2c\n        /* \"#utility.yul\":4823:4841   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4816:4846   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_662a7ba1d8fb60beff3d02117181416eb800676fa4d6f1ebc4c3fea5cd79ec88\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":4877:4879   */\n      0x40\n        /* \"#utility.yul\":4862:4880   */\n      dup3\n      add\n        /* \"#utility.yul\":4855:4917   */\n      mstore\n      shl(0xa0, 0x6163746976652070726f7879)\n        /* \"#utility.yul\":4948:4950   */\n      0x60\n        /* \"#utility.yul\":4933:4951   */\n      dup3\n      add\n        /* \"#utility.yul\":4926:4968   */\n      mstore\n        /* \"#utility.yul\":5000:5003   */\n      0x80\n        /* \"#utility.yul\":4985:5004   */\n      add\n      swap1\n        /* \"#utility.yul\":4602:5010   */\n      jump\t// out\n        /* \"#utility.yul\":6054:7520   */\n    tag_156:\n        /* \"#utility.yul\":6179:6185   */\n      0x00\n        /* \"#utility.yul\":6210:6212   */\n      0x20\n        /* \"#utility.yul\":6253:6255   */\n      dup1\n        /* \"#utility.yul\":6241:6250   */\n      dup4\n        /* \"#utility.yul\":6232:6239   */\n      dup6\n        /* \"#utility.yul\":6228:6251   */\n      sub\n        /* \"#utility.yul\":6224:6256   */\n      slt\n        /* \"#utility.yul\":6221:6273   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":6269:6270   */\n      0x00\n        /* \"#utility.yul\":6266:6267   */\n      dup1\n        /* \"#utility.yul\":6259:6271   */\n      revert\n        /* \"#utility.yul\":6221:6273   */\n    tag_325:\n        /* \"#utility.yul\":6296:6312   */\n      dup3\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6361:6375   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6358:6392   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":6388:6389   */\n      0x00\n        /* \"#utility.yul\":6385:6386   */\n      dup1\n        /* \"#utility.yul\":6378:6390   */\n      revert\n        /* \"#utility.yul\":6358:6392   */\n    tag_326:\n        /* \"#utility.yul\":6426:6432   */\n      dup2\n        /* \"#utility.yul\":6415:6424   */\n      dup6\n        /* \"#utility.yul\":6411:6433   */\n      add\n        /* \"#utility.yul\":6401:6433   */\n      swap2\n      pop\n        /* \"#utility.yul\":6471:6478   */\n      dup6\n        /* \"#utility.yul\":6464:6468   */\n      0x1f\n        /* \"#utility.yul\":6460:6462   */\n      dup4\n        /* \"#utility.yul\":6456:6469   */\n      add\n        /* \"#utility.yul\":6452:6479   */\n      slt\n        /* \"#utility.yul\":6442:6497   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":6493:6494   */\n      0x00\n        /* \"#utility.yul\":6490:6491   */\n      dup1\n        /* \"#utility.yul\":6483:6495   */\n      revert\n        /* \"#utility.yul\":6442:6497   */\n    tag_327:\n        /* \"#utility.yul\":6522:6524   */\n      dup2\n        /* \"#utility.yul\":6516:6525   */\n      mload\n        /* \"#utility.yul\":6544:6546   */\n      dup2\n        /* \"#utility.yul\":6540:6542   */\n      dup2\n        /* \"#utility.yul\":6537:6547   */\n      gt\n        /* \"#utility.yul\":6534:6570   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":6550:6568   */\n      tag_329\n      tag_105\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6590:6626   */\n      tag_330\n        /* \"#utility.yul\":6622:6624   */\n      dup5\n        /* \"#utility.yul\":6617:6619   */\n      dup3\n        /* \"#utility.yul\":6614:6615   */\n      0x05\n        /* \"#utility.yul\":6610:6620   */\n      shl\n        /* \"#utility.yul\":6606:6625   */\n      add\n        /* \"#utility.yul\":6590:6626   */\n      tag_283\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":6660:6675   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":6691:6703   */\n      dup5\n      dup2\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":6742:6743   */\n      0x07\n        /* \"#utility.yul\":6738:6748   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":6730:6749   */\n      dup4\n      add\n        /* \"#utility.yul\":6726:6754   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6766:6785   */\n      dup8\n      dup3\n      gt\n        /* \"#utility.yul\":6763:6802   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":6798:6799   */\n      0x00\n        /* \"#utility.yul\":6795:6796   */\n      dup1\n        /* \"#utility.yul\":6788:6800   */\n      revert\n        /* \"#utility.yul\":6763:6802   */\n    tag_331:\n        /* \"#utility.yul\":6822:6833   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6842:7490   */\n    tag_332:\n        /* \"#utility.yul\":6858:6864   */\n      dup2\n        /* \"#utility.yul\":6853:6856   */\n      dup5\n        /* \"#utility.yul\":6850:6865   */\n      lt\n        /* \"#utility.yul\":6842:7490   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":6940:6944   */\n      0x80\n        /* \"#utility.yul\":6934:6937   */\n      dup5\n        /* \"#utility.yul\":6925:6932   */\n      dup10\n        /* \"#utility.yul\":6921:6938   */\n      sub\n        /* \"#utility.yul\":6917:6945   */\n      slt\n        /* \"#utility.yul\":6914:7032   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":6986:6987   */\n      0x00\n        /* \"#utility.yul\":7015:7017   */\n      dup1\n        /* \"#utility.yul\":7011:7013   */\n      dup2\n        /* \"#utility.yul\":7004:7018   */\n      revert\n        /* \"#utility.yul\":6914:7032   */\n    tag_335:\n        /* \"#utility.yul\":7058:7080   */\n      tag_336\n      tag_282\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7114:7117   */\n      dup5\n        /* \"#utility.yul\":7108:7118   */\n      mload\n        /* \"#utility.yul\":7131:7164   */\n      tag_337\n        /* \"#utility.yul\":7156:7163   */\n      dup2\n        /* \"#utility.yul\":7131:7164   */\n      tag_281\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7177:7199   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7241:7253   */\n      dup5\n      dup7\n      add\n        /* \"#utility.yul\":7235:7254   */\n      mload\n        /* \"#utility.yul\":7219:7233   */\n      dup7\n      dup3\n      add\n        /* \"#utility.yul\":7212:7255   */\n      mstore\n        /* \"#utility.yul\":7278:7280   */\n      0x40\n        /* \"#utility.yul\":7322:7334   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":7316:7335   */\n      mload\n        /* \"#utility.yul\":7300:7314   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7293:7336   */\n      mstore\n        /* \"#utility.yul\":7359:7361   */\n      0x60\n        /* \"#utility.yul\":7403:7415   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":7397:7416   */\n      mload\n        /* \"#utility.yul\":7381:7395   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7374:7417   */\n      mstore\n        /* \"#utility.yul\":7430:7448   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6884:6888   */\n      0x80\n        /* \"#utility.yul\":6875:6889   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":7468:7480   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":6842:7490   */\n      jump(tag_332)\n    tag_334:\n        /* \"#utility.yul\":7509:7514   */\n      swap8\n        /* \"#utility.yul\":6054:7520   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7525:7652   */\n    tag_284:\n        /* \"#utility.yul\":7586:7596   */\n      0x4e487b71\n        /* \"#utility.yul\":7581:7584   */\n      0xe0\n        /* \"#utility.yul\":7577:7597   */\n      shl\n        /* \"#utility.yul\":7574:7575   */\n      0x00\n        /* \"#utility.yul\":7567:7598   */\n      mstore\n        /* \"#utility.yul\":7617:7621   */\n      0x11\n        /* \"#utility.yul\":7614:7615   */\n      0x04\n        /* \"#utility.yul\":7607:7622   */\n      mstore\n        /* \"#utility.yul\":7641:7645   */\n      0x24\n        /* \"#utility.yul\":7638:7639   */\n      0x00\n        /* \"#utility.yul\":7631:7646   */\n      revert\n        /* \"#utility.yul\":7657:7785   */\n    tag_158:\n        /* \"#utility.yul\":7724:7733   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7745:7756   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7742:7779   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":7759:7777   */\n      tag_259\n      tag_284\n      jump\t// in\n        /* \"#utility.yul\":7790:7915   */\n    tag_160:\n        /* \"#utility.yul\":7855:7864   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7876:7886   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7873:7909   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":7889:7907   */\n      tag_259\n      tag_284\n      jump\t// in\n        /* \"#utility.yul\":7920:8047   */\n    tag_173:\n        /* \"#utility.yul\":7981:7991   */\n      0x4e487b71\n        /* \"#utility.yul\":7976:7979   */\n      0xe0\n        /* \"#utility.yul\":7972:7992   */\n      shl\n        /* \"#utility.yul\":7969:7970   */\n      0x00\n        /* \"#utility.yul\":7962:7993   */\n      mstore\n        /* \"#utility.yul\":8012:8016   */\n      0x32\n        /* \"#utility.yul\":8009:8010   */\n      0x04\n        /* \"#utility.yul\":8002:8017   */\n      mstore\n        /* \"#utility.yul\":8036:8040   */\n      0x24\n        /* \"#utility.yul\":8033:8034   */\n      0x00\n        /* \"#utility.yul\":8026:8041   */\n      revert\n        /* \"#utility.yul\":8052:8187   */\n    tag_177:\n        /* \"#utility.yul\":8091:8094   */\n      0x00\n        /* \"#utility.yul\":8112:8129   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":8109:8152   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":8132:8150   */\n      tag_348\n      tag_284\n      jump\t// in\n    tag_348:\n      pop\n        /* \"#utility.yul\":8179:8180   */\n      0x01\n        /* \"#utility.yul\":8168:8181   */\n      add\n      swap1\n        /* \"#utility.yul\":8052:8187   */\n      jump\t// out\n        /* \"#utility.yul\":8599:8783   */\n    tag_206:\n        /* \"#utility.yul\":8669:8675   */\n      0x00\n        /* \"#utility.yul\":8722:8724   */\n      0x20\n        /* \"#utility.yul\":8710:8719   */\n      dup3\n        /* \"#utility.yul\":8701:8708   */\n      dup5\n        /* \"#utility.yul\":8697:8720   */\n      sub\n        /* \"#utility.yul\":8693:8725   */\n      slt\n        /* \"#utility.yul\":8690:8742   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":8738:8739   */\n      0x00\n        /* \"#utility.yul\":8735:8736   */\n      dup1\n        /* \"#utility.yul\":8728:8740   */\n      revert\n        /* \"#utility.yul\":8690:8742   */\n    tag_351:\n      pop\n        /* \"#utility.yul\":8761:8777   */\n      mload\n      swap2\n        /* \"#utility.yul\":8599:8783   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9974:10381   */\n    tag_231:\n        /* \"#utility.yul\":10176:10178   */\n      0x20\n        /* \"#utility.yul\":10158:10179   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10215:10217   */\n      0x2b\n        /* \"#utility.yul\":10195:10213   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10188:10218   */\n      mstore\n        /* \"#utility.yul\":10254:10288   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":10249:10251   */\n      0x40\n        /* \"#utility.yul\":10234:10252   */\n      dup3\n      add\n        /* \"#utility.yul\":10227:10289   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":10320:10322   */\n      0x60\n        /* \"#utility.yul\":10305:10323   */\n      dup3\n      add\n        /* \"#utility.yul\":10298:10339   */\n      mstore\n        /* \"#utility.yul\":10371:10374   */\n      0x80\n        /* \"#utility.yul\":10356:10375   */\n      add\n      swap1\n        /* \"#utility.yul\":9974:10381   */\n      jump\t// out\n        /* \"#utility.yul\":11207:11457   */\n    tag_285:\n        /* \"#utility.yul\":11292:11293   */\n      0x00\n        /* \"#utility.yul\":11302:11415   */\n    tag_359:\n        /* \"#utility.yul\":11316:11322   */\n      dup4\n        /* \"#utility.yul\":11313:11314   */\n      dup2\n        /* \"#utility.yul\":11310:11323   */\n      lt\n        /* \"#utility.yul\":11302:11415   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":11392:11403   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":11386:11404   */\n      mload\n        /* \"#utility.yul\":11373:11384   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":11366:11405   */\n      mstore\n        /* \"#utility.yul\":11338:11340   */\n      0x20\n        /* \"#utility.yul\":11331:11341   */\n      add\n        /* \"#utility.yul\":11302:11415   */\n      jump(tag_359)\n    tag_361:\n      pop\n      pop\n        /* \"#utility.yul\":11449:11450   */\n      0x00\n        /* \"#utility.yul\":11431:11447   */\n      swap2\n      add\n        /* \"#utility.yul\":11424:11451   */\n      mstore\n        /* \"#utility.yul\":11207:11457   */\n      jump\t// out\n        /* \"#utility.yul\":11462:11749   */\n    tag_265:\n        /* \"#utility.yul\":11591:11594   */\n      0x00\n        /* \"#utility.yul\":11629:11635   */\n      dup3\n        /* \"#utility.yul\":11623:11636   */\n      mload\n        /* \"#utility.yul\":11645:11711   */\n      tag_363\n        /* \"#utility.yul\":11704:11710   */\n      dup2\n        /* \"#utility.yul\":11699:11702   */\n      dup5\n        /* \"#utility.yul\":11692:11696   */\n      0x20\n        /* \"#utility.yul\":11684:11690   */\n      dup8\n        /* \"#utility.yul\":11680:11697   */\n      add\n        /* \"#utility.yul\":11645:11711   */\n      tag_285\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":11727:11743   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":11462:11749   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11754:12150   */\n    tag_280:\n        /* \"#utility.yul\":11903:11905   */\n      0x20\n        /* \"#utility.yul\":11892:11901   */\n      dup2\n        /* \"#utility.yul\":11885:11906   */\n      mstore\n        /* \"#utility.yul\":11866:11870   */\n      0x00\n        /* \"#utility.yul\":11935:11941   */\n      dup3\n        /* \"#utility.yul\":11929:11942   */\n      mload\n        /* \"#utility.yul\":11978:11984   */\n      dup1\n        /* \"#utility.yul\":11973:11975   */\n      0x20\n        /* \"#utility.yul\":11962:11971   */\n      dup5\n        /* \"#utility.yul\":11958:11976   */\n      add\n        /* \"#utility.yul\":11951:11985   */\n      mstore\n        /* \"#utility.yul\":11994:12073   */\n      tag_365\n        /* \"#utility.yul\":12066:12072   */\n      dup2\n        /* \"#utility.yul\":12061:12063   */\n      0x40\n        /* \"#utility.yul\":12050:12059   */\n      dup6\n        /* \"#utility.yul\":12046:12064   */\n      add\n        /* \"#utility.yul\":12041:12043   */\n      0x20\n        /* \"#utility.yul\":12033:12039   */\n      dup8\n        /* \"#utility.yul\":12029:12044   */\n      add\n        /* \"#utility.yul\":11994:12073   */\n      tag_285\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":12134:12136   */\n      0x1f\n        /* \"#utility.yul\":12113:12128   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":12109:12138   */\n      and\n        /* \"#utility.yul\":12094:12139   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":12141:12143   */\n      0x40\n        /* \"#utility.yul\":12090:12144   */\n      add\n      swap3\n        /* \"#utility.yul\":11754:12150   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_662a7ba1d8fb60beff3d02117181416eb800676fa4d6f1ebc4c3fea5cd79ec88 46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220028a6ac9394f654610242098198cd8f1fbd5c8284d0e1d452ac86b5add9da8fc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x1325 PUSH2 0x48 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x304 ADD MSTORE DUP2 DUP2 PUSH2 0x34D ADD MSTORE DUP2 DUP2 PUSH2 0x3E3 ADD MSTORE DUP2 DUP2 PUSH2 0x423 ADD MSTORE PUSH2 0x49E ADD MSTORE PUSH2 0x1325 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E277C1 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x4469ED13 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x661A5614 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x8A1E0A17 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xCB82AB19 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xD05A38D7 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF2782D6D EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF64387A7 EQ PUSH2 0x2A4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0xD5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x128 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xECF JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x568 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x1D0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x57B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0xCC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37D PUSH2 0x933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3C7 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xCD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x453 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x482 DUP3 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x48E DUP3 DUP3 PUSH1 0x1 PUSH2 0x956 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x546 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x570 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x579 PUSH0 PUSH2 0xB24 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x5A8 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x5C8 JUMPI POP PUSH2 0x5B7 ADDRESS PUSH2 0xB75 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x5C8 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x64C JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x654 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xCB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xC9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18D36B15 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x73F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x106E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x74C DUP6 DUP6 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x757 SWAP1 PUSH1 0x1 PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x771 JUMPI PUSH2 0x771 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x7BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x78F JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x832 JUMPI DUP3 PUSH2 0x7EA DUP3 DUP9 PUSH2 0x1178 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x7FA JUMPI PUSH2 0x7FA PUSH2 0x118B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x814 JUMPI PUSH2 0x814 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x82A SWAP1 PUSH2 0x119F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7D7 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xCA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH2 0x3C7 DUP2 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18D36B15 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18D36B15 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x907 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x92E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x106E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0xAC5 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x98E JUMPI PUSH2 0x989 DUP4 PUSH2 0xBB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9E8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9E5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST POP PUSH2 0x989 DUP4 DUP4 DUP4 PUSH2 0xC4B JUMP JUMPDEST CALLER PUSH2 0xACE PUSH2 0x57B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x579 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0xBBB DUP2 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC54 DUP4 PUSH2 0xCA4 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0xC60 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x989 JUMPI PUSH2 0xC6F DUP4 DUP4 PUSH2 0xCE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x579 CALLER PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xCAD DUP2 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCEE DUP4 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD9B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xDC8 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xDE2 JUMPI POP DUP2 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xDEC DUP4 DUP4 PUSH2 0xDF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xE03 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDEC DUP2 PUSH2 0xE34 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE99 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC7 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEEB DUP2 PUSH2 0xE34 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xF07 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF1A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2C PUSH2 0xE63 JUMP JUMPDEST PUSH2 0xF3E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xF53 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xFEF JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFAC JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1289 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1289 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1095 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10BA PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x10C8 DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xE9F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0x10E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x1146 JUMPI PUSH1 0x80 DUP5 DUP10 SUB SLT ISZERO PUSH2 0x1104 JUMPI PUSH0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x110C PUSH2 0xE77 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x1117 DUP2 PUSH2 0xE34 JUMP JUMPDEST DUP2 MSTORE DUP5 DUP7 ADD MLOAD DUP7 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x10EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0x1151 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0x1151 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x11B0 JUMPI PUSH2 0x11B0 PUSH2 0x1151 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1233 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121B JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x124C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1274 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CHAINID PUSH22 0x6E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122002 DUP11 PUSH11 0xC9394F654610242098198C 0xD8 CALL 0xFB 0xD5 0xC8 0x28 0x4D 0xE SAR GASLIMIT 0x2A 0xC8 PUSH12 0x5ADD9DA8FC64736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "2517:1265:0:-:0;;;1332:4:9;1289:48;;2517:1265:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MMstore_172": {
									"entryPoint": null,
									"id": 172,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NoOrder_184": {
									"entryPoint": 696,
									"id": 184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_637": {
									"entryPoint": 2948,
									"id": 637,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_648": {
									"entryPoint": 3189,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_212": {
									"entryPoint": 2382,
									"id": 212,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_679": {
									"entryPoint": 2757,
									"id": 679,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_functionDelegateCall_1122": {
									"entryPoint": 3299,
									"id": 1122,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getImplementation_818": {
									"entryPoint": 2355,
									"id": 818,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1832": {
									"entryPoint": null,
									"id": 1832,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1804": {
									"entryPoint": 3571,
									"id": 1804,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_842": {
									"entryPoint": 2994,
									"id": 842,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_736": {
									"entryPoint": 2852,
									"id": 736,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_938": {
									"entryPoint": 2390,
									"id": 938,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_885": {
									"entryPoint": 3147,
									"id": 885,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_857": {
									"entryPoint": 3236,
									"id": 857,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMmstore_224": {
									"entryPoint": 1342,
									"id": 224,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimOrderArr_180": {
									"entryPoint": 1719,
									"id": 180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAddressSlot_1873": {
									"entryPoint": null,
									"id": 1873,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_1884": {
									"entryPoint": null,
									"id": 1884,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getNoOrderRewardByIndex_286": {
									"entryPoint": 1734,
									"id": 286,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getNoOrderRewardBy_302": {
									"entryPoint": 2240,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_203": {
									"entryPoint": 1418,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_1539": {
									"entryPoint": 2933,
									"id": 1539,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@machineArr_176": {
									"entryPoint": 2107,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_665": {
									"entryPoint": 1403,
									"id": 665,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_1388": {
									"entryPoint": 1170,
									"id": 1388,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_693": {
									"entryPoint": 1384,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferMaxOrder_188": {
									"entryPoint": 970,
									"id": 188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_716": {
									"entryPoint": 2122,
									"id": 716,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1431": {
									"entryPoint": 985,
									"id": 1431,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_1410": {
									"entryPoint": 762,
									"id": 1410,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResult_1784": {
									"entryPoint": 3539,
									"id": 1784,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 3791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 4206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 4535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_2160": {
									"entryPoint": 3703,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4633,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4491,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 3636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12152:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:17"
															},
															"nodeType": "YulIf",
															"src": "94:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:17",
														"type": ""
													}
												],
												"src": "14:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "384:232:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "394:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "406:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "417:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "402:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "402:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "394:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "437:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "452:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "468:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "473:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "464:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "464:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "477:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "460:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "460:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "448:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "448:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "430:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "430:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "430:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "512:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "517:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "490:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "490:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "544:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "555:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "540:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "540:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "560:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "533:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "533:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "533:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "587:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "598:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "583:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "583:18:17"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "603:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "576:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "576:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "329:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "340:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "348:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "356:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "364:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "375:4:17",
														"type": ""
													}
												],
												"src": "199:417:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "730:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "742:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "732:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "732:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "732:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "689:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "700:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "715:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "720:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "711:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "711:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "724:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "707:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "707:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "696:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "696:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "686:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "686:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "679:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "679:50:17"
															},
															"nodeType": "YulIf",
															"src": "676:70:17"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:17",
														"type": ""
													}
												],
												"src": "621:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "827:177:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "873:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "885:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "875:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "875:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "848:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "857:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "844:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "844:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "869:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "840:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "840:32:17"
															},
															"nodeType": "YulIf",
															"src": "837:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "898:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "924:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "911:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "911:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "902:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "968:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "943:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "943:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "943:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "983:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "993:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "983:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:17",
														"type": ""
													}
												],
												"src": "757:247:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1041:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1058:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1065:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1070:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1051:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1051:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1098:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1101:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1091:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1091:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1122:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1125:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1115:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1115:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1009:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1187:207:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1197:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1207:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1197:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1247:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1255:4:17",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1243:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1243:17:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1229:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1335:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1337:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1337:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1337:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1278:10:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1298:2:17",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1302:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1294:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1294:10:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1306:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1290:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1290:18:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1275:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1275:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1314:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1311:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1272:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:62:17"
															},
															"nodeType": "YulIf",
															"src": "1269:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1373:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1377:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1366:22:17"
														}
													]
												},
												"name": "allocate_memory_2160",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1176:6:17",
														"type": ""
													}
												],
												"src": "1141:253:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1444:230:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1454:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1470:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1464:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1464:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1454:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1482:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1504:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "1520:4:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1526:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1516:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1516:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1535:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1531:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1531:7:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1512:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1512:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1500:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1500:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1486:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1615:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1617:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1617:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1617:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1558:10:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1578:2:17",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1582:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1574:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1574:10:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1586:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1570:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1570:18:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1555:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1555:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1594:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1606:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1591:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1591:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1552:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:62:17"
															},
															"nodeType": "YulIf",
															"src": "1549:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1653:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1657:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:22:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1424:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1433:6:17",
														"type": ""
													}
												],
												"src": "1399:275:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1775:802:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1830:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1833:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1823:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1823:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1823:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1796:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1805:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1792:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1792:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1788:32:17"
															},
															"nodeType": "YulIf",
															"src": "1785:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1846:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1872:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1859:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1859:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1850:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1916:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1891:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1891:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1891:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1931:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1941:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1931:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1955:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1965:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1959:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1976:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2007:9:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2018:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1990:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1980:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2031:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2049:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2053:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2045:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2045:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2041:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2041:18:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2035:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2086:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2095:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2098:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2088:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2088:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2088:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2074:6:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2082:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2071:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2071:14:17"
															},
															"nodeType": "YulIf",
															"src": "2068:34:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2111:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2125:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2136:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2121:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:22:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2115:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2191:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2200:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2203:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2193:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2193:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2170:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2174:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2166:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2166:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2181:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2162:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2162:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:35:17"
															},
															"nodeType": "YulIf",
															"src": "2152:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2216:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2239:2:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2226:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:16:17"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "2220:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2265:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2267:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2267:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2267:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2257:2:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2261:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2254:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2254:10:17"
															},
															"nodeType": "YulIf",
															"src": "2251:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2296:66:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "2337:2:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2341:4:17",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2333:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2333:13:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2352:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2348:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2348:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2329:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2329:27:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2358:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2325:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2325:36:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2309:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2309:53:17"
															},
															"variables": [
																{
																	"name": "array",
																	"nodeType": "YulTypedName",
																	"src": "2300:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2378:5:17"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2385:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:17:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2371:17:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2434:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2443:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2446:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2436:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2436:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2436:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "2411:2:17"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "2415:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2407:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:11:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2420:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:20:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2425:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2400:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2400:33:17"
															},
															"nodeType": "YulIf",
															"src": "2397:53:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "2476:5:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2483:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2472:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2472:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2492:2:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2496:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2488:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2488:11:17"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2501:2:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2459:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:45:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2459:45:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nodeType": "YulIdentifier",
																						"src": "2528:5:17"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "2535:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2524:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2524:14:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2540:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2520:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2545:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2513:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2513:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2556:15:17",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "2566:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2556:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1733:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1744:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1756:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1764:6:17",
														"type": ""
													}
												],
												"src": "1679:898:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2683:76:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2693:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2705:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2716:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2701:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2701:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2693:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2735:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2746:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2728:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2728:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2728:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2652:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2663:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2674:4:17",
														"type": ""
													}
												],
												"src": "2582:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2865:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2875:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2887:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2898:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2875:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2917:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2948:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2953:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2944:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2944:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2957:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2940:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2940:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2928:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2928:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2910:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2834:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2845:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2856:4:17",
														"type": ""
													}
												],
												"src": "2764:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3059:161:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3105:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3114:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3117:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3107:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3107:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3107:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3080:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3089:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3076:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3076:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3101:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3072:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3072:32:17"
															},
															"nodeType": "YulIf",
															"src": "3069:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3130:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3153:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3140:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3172:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3210:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3195:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3182:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3017:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3028:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3040:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3048:6:17",
														"type": ""
													}
												],
												"src": "2972:248:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3436:748:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3446:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3456:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3450:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3467:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3485:9:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3496:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3481:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3481:18:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3471:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3515:9:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3526:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3508:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3508:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3508:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3538:17:17",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3549:6:17"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3542:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3564:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3584:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3578:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3568:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3607:6:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3615:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3600:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3600:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3600:22:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3631:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3641:2:17",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3635:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3652:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3663:9:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3674:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3659:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3659:18:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3652:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3686:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3704:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3712:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3700:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3700:15:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3690:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3724:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3733:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3728:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3792:366:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3806:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3822:6:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3816:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3816:13:17"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "3810:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3849:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "3864:2:17"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "3858:5:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3858:9:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3877:3:17",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3882:1:17",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3873:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3873:11:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3886:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "3869:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3869:19:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3854:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3854:35:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3842:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3842:48:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3842:48:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3914:3:17"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "3919:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3910:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3910:12:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "3934:2:17"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "3938:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3930:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3930:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3924:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3924:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3903:40:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3903:40:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "3967:3:17"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "3972:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3963:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3963:12:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "3987:2:17"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "3991:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3983:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3983:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3977:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3977:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3956:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3956:40:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3956:40:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4009:14:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4019:4:17",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "4013:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "4047:3:17"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "4052:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4043:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4043:12:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "4067:2:17"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "4071:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4063:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4063:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4057:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4057:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4036:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:40:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:40:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4089:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4100:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4105:4:17",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4096:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4096:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4089:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4123:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4137:6:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4145:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4133:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4133:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4123:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3754:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3757:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3751:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3751:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3765:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3767:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3776:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3779:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3772:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3772:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3767:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3747:3:17",
																"statements": []
															},
															"src": "3743:415:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4167:11:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4175:3:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4167:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3405:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3416:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3427:4:17",
														"type": ""
													}
												],
												"src": "3225:959:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4363:234:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4380:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4391:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4373:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4373:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4373:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4414:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4425:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4430:2:17",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4403:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4403:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4453:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4464:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4449:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4449:18:17"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4469:34:17",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4442:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4524:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4535:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4520:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4520:18:17"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4540:14:17",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4513:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4513:42:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4564:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4576:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4587:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4572:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4572:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4564:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4340:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4354:4:17",
														"type": ""
													}
												],
												"src": "4189:408:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4776:234:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4793:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4804:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4786:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4786:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4786:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4827:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4838:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4823:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4823:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:17",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4816:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4816:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4816:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4866:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4877:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4862:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:18:17"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4882:34:17",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4855:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4855:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4855:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4937:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4948:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4933:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4933:18:17"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4953:14:17",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4926:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4926:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4926:42:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4977:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4989:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5000:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4985:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4985:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4977:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4753:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4767:4:17",
														"type": ""
													}
												],
												"src": "4602:408:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5189:246:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5206:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5217:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5240:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5251:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5236:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5236:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5256:2:17",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5229:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5229:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5229:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5279:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5290:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5275:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5275:18:17"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5295:34:17",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5268:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5268:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5350:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5361:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5346:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5346:18:17"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5366:26:17",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5339:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5339:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5339:54:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5402:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5414:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5425:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5410:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5402:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5166:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5180:4:17",
														"type": ""
													}
												],
												"src": "5015:420:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5614:236:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5631:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5642:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5624:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5624:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5624:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5665:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5676:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5661:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5661:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5681:2:17",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5654:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5654:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5704:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5715:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:18:17"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5720:34:17",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5693:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5693:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5693:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5775:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5786:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5771:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5771:18:17"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5791:16:17",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5764:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5764:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5764:44:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5817:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5829:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5840:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5825:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5825:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5817:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5591:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5605:4:17",
														"type": ""
													}
												],
												"src": "5440:410:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5962:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5972:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5984:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5995:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5980:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5980:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5972:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6014:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6029:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6037:4:17",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6025:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6025:17:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6007:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6007:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6007:36:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5931:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5942:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5953:4:17",
														"type": ""
													}
												],
												"src": "5855:194:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6190:1330:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6200:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6210:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6204:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6257:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6266:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6269:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6259:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6259:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6259:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6232:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6241:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6228:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6228:23:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6253:2:17"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6224:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:32:17"
															},
															"nodeType": "YulIf",
															"src": "6221:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6282:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6302:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6296:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6296:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6286:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6321:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6339:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6343:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6335:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6335:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6347:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6331:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6331:18:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6325:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6376:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6385:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6388:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6378:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6378:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6378:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6364:6:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6372:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6361:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:14:17"
															},
															"nodeType": "YulIf",
															"src": "6358:34:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6401:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6415:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6426:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6411:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6411:22:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6405:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6481:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6490:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6493:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6483:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6483:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6483:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "6460:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6464:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6456:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6456:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6471:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6452:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6445:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6445:35:17"
															},
															"nodeType": "YulIf",
															"src": "6442:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6506:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6522:2:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6516:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:9:17"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "6510:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6548:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6550:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6550:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6550:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6540:2:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6544:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6537:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6537:10:17"
															},
															"nodeType": "YulIf",
															"src": "6534:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6579:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6614:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "6617:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6610:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6610:10:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6622:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6606:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6606:19:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6590:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:36:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6583:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6635:16:17",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "6648:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "6639:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6667:3:17"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6672:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6660:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6660:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6660:15:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6684:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6695:3:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6700:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6691:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6691:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6684:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6712:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "6734:2:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6742:1:17",
																						"type": "",
																						"value": "7"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "6745:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6738:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6738:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6730:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6730:19:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6751:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6726:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6726:28:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6716:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6786:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6795:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6798:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6788:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6788:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6788:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6769:6:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6777:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6766:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6766:19:17"
															},
															"nodeType": "YulIf",
															"src": "6763:39:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6811:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6826:2:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6830:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6822:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6822:11:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6815:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6900:590:17",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6958:74:17",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6976:11:17",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6986:1:17",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_5",
																							"nodeType": "YulTypedName",
																							"src": "6980:2:17",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "7011:2:17"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "7015:2:17"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7004:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7004:14:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7004:14:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dataEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6925:7:17"
																						},
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6934:3:17"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "6921:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6921:17:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6940:4:17",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nodeType": "YulIdentifier",
																				"src": "6917:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6917:28:17"
																		},
																		"nodeType": "YulIf",
																		"src": "6914:118:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7045:35:17",
																		"value": {
																			"arguments": [],
																			"functionName": {
																				"name": "allocate_memory_2160",
																				"nodeType": "YulIdentifier",
																				"src": "7058:20:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7058:22:17"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "7049:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7093:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7114:3:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7108:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7108:10:17"
																		},
																		"variables": [
																			{
																				"name": "value_1",
																				"nodeType": "YulTypedName",
																				"src": "7097:7:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value_1",
																					"nodeType": "YulIdentifier",
																					"src": "7156:7:17"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "7131:24:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7131:33:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:33:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "7184:5:17"
																				},
																				{
																					"name": "value_1",
																					"nodeType": "YulIdentifier",
																					"src": "7191:7:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7177:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7177:22:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7177:22:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "7223:5:17"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "7230:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7219:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7219:14:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7245:3:17"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "7250:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7241:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7241:12:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7235:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7235:19:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7212:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7212:43:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7212:43:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7268:12:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7278:2:17",
																			"type": "",
																			"value": "64"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "7272:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "7304:5:17"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "7311:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7300:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7300:14:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7326:3:17"
																								},
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "7331:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7322:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7322:12:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7316:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7316:19:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7293:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7293:43:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7293:43:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7349:12:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7359:2:17",
																			"type": "",
																			"value": "96"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "7353:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "7385:5:17"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "7392:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7381:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7381:14:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7407:3:17"
																								},
																								{
																									"name": "_7",
																									"nodeType": "YulIdentifier",
																									"src": "7412:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7403:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7403:12:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7397:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7397:19:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7374:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7374:43:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7374:43:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7437:3:17"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "7442:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7430:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7430:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7430:18:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7461:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7472:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7477:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7468:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7468:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7461:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6853:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6858:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6850:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6866:25:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6868:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6879:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6884:4:17",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6875:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6875:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6868:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6846:3:17",
																"statements": []
															},
															"src": "6842:648:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7499:15:17",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "7509:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7499:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6156:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6167:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6179:6:17",
														"type": ""
													}
												],
												"src": "6054:1466:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7557:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7574:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7581:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7586:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7577:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7577:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7567:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7567:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7567:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7614:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7617:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7607:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7607:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7607:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7638:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7641:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7631:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7631:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7631:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7525:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7706:79:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7716:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7728:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7731:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7724:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7724:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7716:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7757:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7759:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7759:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7759:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7748:4:17"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7754:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7745:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7745:11:17"
															},
															"nodeType": "YulIf",
															"src": "7742:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7688:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7691:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7697:4:17",
														"type": ""
													}
												],
												"src": "7657:128:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7838:77:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7848:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7859:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7862:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7855:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7855:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7848:3:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7887:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7889:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7889:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7889:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7879:1:17"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7882:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7876:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7876:10:17"
															},
															"nodeType": "YulIf",
															"src": "7873:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7821:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7824:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7830:3:17",
														"type": ""
													}
												],
												"src": "7790:125:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7952:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7969:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7976:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7981:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7972:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7972:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7962:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7962:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8009:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8012:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8002:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8002:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8033:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8036:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8026:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8026:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8026:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7920:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8099:88:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8130:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8132:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8132:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8132:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8115:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8126:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8122:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8122:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8112:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8112:17:17"
															},
															"nodeType": "YulIf",
															"src": "8109:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8161:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8172:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8179:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8168:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8168:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "8161:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8081:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "8091:3:17",
														"type": ""
													}
												],
												"src": "8052:135:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8366:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8383:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8394:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8376:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8376:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8376:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8417:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8428:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8413:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8433:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8406:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8406:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8456:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8467:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8452:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8452:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8472:34:17",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8445:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8445:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8445:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8527:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8538:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8523:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8523:18:17"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8543:8:17",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8516:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8516:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8516:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8561:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8573:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8584:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8569:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8569:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8343:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8357:4:17",
														"type": ""
													}
												],
												"src": "8192:402:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8680:103:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8726:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8735:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8738:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8728:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8728:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8728:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8701:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8710:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8697:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8697:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8722:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8693:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8693:32:17"
															},
															"nodeType": "YulIf",
															"src": "8690:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8751:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8767:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8761:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8761:16:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8751:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8646:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8657:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8669:6:17",
														"type": ""
													}
												],
												"src": "8599:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8962:236:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8979:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8990:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8972:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8972:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8972:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9013:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9024:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9009:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9009:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9029:2:17",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9002:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9002:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9002:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9052:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9063:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9048:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9048:18:17"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9068:34:17",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9041:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9041:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9041:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9123:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9134:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9119:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9119:18:17"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9139:16:17",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9112:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9112:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9112:44:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9165:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9177:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9188:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9173:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9173:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9165:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8939:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8953:4:17",
														"type": ""
													}
												],
												"src": "8788:410:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9377:231:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9394:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9405:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9387:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9387:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9387:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9428:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9439:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9424:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9424:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9444:2:17",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9417:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9417:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9467:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9478:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9463:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9463:18:17"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9483:34:17",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9538:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9549:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9534:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9534:18:17"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9554:11:17",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9527:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9527:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9527:39:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9575:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9587:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9598:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9583:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9583:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9575:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9354:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9368:4:17",
														"type": ""
													}
												],
												"src": "9203:405:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9787:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9804:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9815:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9797:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9797:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9797:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9838:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9849:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9834:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9834:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9854:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9827:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9827:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9827:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9877:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9888:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9873:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9873:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9893:34:17",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9866:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9866:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9866:62:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9937:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9949:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9960:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9945:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9945:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9937:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9764:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9778:4:17",
														"type": ""
													}
												],
												"src": "9613:356:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10148:233:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10165:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10176:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10158:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10158:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10158:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10199:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10210:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10195:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10195:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10215:2:17",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10188:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10188:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10188:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10238:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10249:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10234:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10234:18:17"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10254:34:17",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10227:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10227:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10309:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10320:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10305:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10305:18:17"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10325:13:17",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10298:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10298:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10298:41:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10348:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10360:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10371:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10356:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10356:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10348:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10125:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10139:4:17",
														"type": ""
													}
												],
												"src": "9974:407:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10560:235:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10577:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10588:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10570:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10570:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10570:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10611:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10622:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10607:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10607:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10627:2:17",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10600:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10600:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10600:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10650:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10661:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10646:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10646:18:17"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10666:34:17",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10639:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10639:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10639:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10721:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10732:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10717:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10717:18:17"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10737:15:17",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10710:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10762:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10774:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10770:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10770:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10762:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10537:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10551:4:17",
														"type": ""
													}
												],
												"src": "10386:409:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10974:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10991:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11002:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10984:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10984:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10984:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11025:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11036:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11021:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11021:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11041:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11014:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11014:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11014:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11064:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11075:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11060:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11060:18:17"
																	},
																	{
																		"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11080:34:17",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11053:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11053:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11053:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11135:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11146:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11131:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11131:18:17"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11151:8:17",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11124:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11124:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11124:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11169:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11181:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11192:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11177:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11177:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11169:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10951:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10965:4:17",
														"type": ""
													}
												],
												"src": "10800:402:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11273:184:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11283:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11292:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11287:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11352:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11377:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11382:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11373:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11373:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11396:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11401:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11392:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11392:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11386:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11386:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11366:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11366:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11366:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11313:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11316:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11310:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11310:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11324:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11326:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11335:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11338:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11331:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11331:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11326:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11306:3:17",
																"statements": []
															},
															"src": "11302:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11435:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11440:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11431:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11431:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11449:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11424:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11424:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11424:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11251:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11256:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11261:6:17",
														"type": ""
													}
												],
												"src": "11207:250:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11599:150:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11609:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11629:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11623:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11623:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11613:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11684:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11692:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11680:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11680:17:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11699:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11704:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11645:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11645:66:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11645:66:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11720:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11731:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11736:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11727:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11727:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11720:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11575:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11580:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11591:3:17",
														"type": ""
													}
												],
												"src": "11462:287:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11875:275:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11892:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11903:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11885:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11885:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11885:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11915:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11935:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11929:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11929:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11919:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11962:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11973:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11958:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11958:18:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11978:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11951:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11951:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11951:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12033:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12041:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12029:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12029:15:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12050:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12061:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12046:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12046:18:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12066:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11994:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11994:79:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11994:79:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12082:62:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12098:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "12117:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12125:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12113:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12113:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12134:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "12130:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12130:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12109:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12109:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12094:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12094:45:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12141:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12090:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12090:54:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12082:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11844:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11855:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11866:4:17",
														"type": ""
													}
												],
												"src": "11754:396:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_2160() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x80)\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            let _4 := 0x60\n            mstore(add(pos, _4), mload(add(_3, _4)))\n            pos := add(pos, 0x80)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let dst := allocate_memory(add(shl(5, _4), _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(7, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, 0x80) }\n        {\n            if slt(sub(dataEnd, src), 0x80)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            let value := allocate_memory_2160()\n            let value_1 := mload(src)\n            validator_revert_address(value_1)\n            mstore(value, value_1)\n            mstore(add(value, _1), mload(add(src, _1)))\n            let _6 := 64\n            mstore(add(value, _6), mload(add(src, _6)))\n            let _7 := 96\n            mstore(add(value, _7), mload(add(src, _7)))\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1338": [
									{
										"length": 32,
										"start": 772
									},
									{
										"length": 32,
										"start": 845
									},
									{
										"length": 32,
										"start": 995
									},
									{
										"length": 32,
										"start": 1059
									},
									{
										"length": 32,
										"start": 1182
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100b7575f3560e01c806308e277c1146100bb5780633659cfe6146101095780634469ed131461012a5780634f1ef2861461014957806352d1902d1461015c578063661a56141461017e578063715018a61461019d5780638a1e0a17146101b15780638da5cb5b146101e8578063c4d66de8146101fc578063cb82ab191461021b578063d05a38d71461023a578063f2782d6d14610266578063f2fde38b14610285578063f64387a7146102a4575b5f80fd5b3480156100c6575f80fd5b506100da6100d5366004610e1d565b6102b8565b604080516001600160a01b03909516855260208501939093529183015260608201526080015b60405180910390f35b348015610114575f80fd5b50610128610123366004610e48565b6102fa565b005b348015610135575f80fd5b506100da610144366004610e1d565b6103ca565b610128610157366004610ecf565b6103d9565b348015610167575f80fd5b50610170610492565b604051908152602001610100565b348015610189575f80fd5b50610128610198366004610e48565b61053e565b3480156101a8575f80fd5b50610128610568565b3480156101bc575f80fd5b5060c9546101d0906001600160a01b031681565b6040516001600160a01b039091168152602001610100565b3480156101f3575f80fd5b506101d061057b565b348015610207575f80fd5b50610128610216366004610e48565b61058a565b348015610226575f80fd5b506100da610235366004610e1d565b6106b7565b348015610245575f80fd5b50610259610254366004610f70565b6106c6565b6040516101009190610f90565b348015610271575f80fd5b506100da610280366004610e1d565b61083b565b348015610290575f80fd5b5061012861029f366004610e48565b61084a565b3480156102af575f80fd5b506102596108c0565b60cc81815481106102c7575f80fd5b5f91825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919084565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361034b5760405162461bcd60e51b815260040161034290610ffc565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661037d610933565b6001600160a01b0316146103a35760405162461bcd60e51b815260040161034290611035565b6103ac8161094e565b604080515f808252602082019092526103c791839190610956565b50565b60cd81815481106102c7575f80fd5b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104215760405162461bcd60e51b815260040161034290610ffc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610453610933565b6001600160a01b0316146104795760405162461bcd60e51b815260040161034290611035565b6104828261094e565b61048e82826001610956565b5050565b5f306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461052c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610342565b505f805160206112a983398151915290565b610546610ac5565b60c980546001600160a01b0319166001600160a01b0392909216919091179055565b610570610ac5565b6105795f610b24565b565b6033546001600160a01b031690565b5f54610100900460ff16158080156105a857505f54600160ff909116105b806105c857506105b730610b75565b1580156105c857505f5460ff166001145b61062b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610342565b5f805460ff19166001179055801561064c575f805461ff0019166101001790555b610654610b84565b60c980546001600160a01b0319166001600160a01b038416179055801561048e575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60cb81815481106102c7575f80fd5b60605f60c95f9054906101000a90046001600160a01b03166001600160a01b03166318d36b156040518163ffffffff1660e01b81526004015f60405180830381865afa158015610718573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261073f919081019061106e565b90505f61074c8585611165565b610757906001611178565b9050806001600160401b0381111561077157610771610e63565b6040519080825280602002602001820160405280156107d257816020015b6107bf60405180608001604052805f6001600160a01b031681526020015f81526020015f81526020015f81525090565b81526020019060019003908161078f5790505b5092505f5b8181101561083257826107ea8288611178565b815181106107fa576107fa61118b565b60200260200101518482815181106108145761081461118b565b6020026020010181905250808061082a9061119f565b9150506107d7565b50505092915050565b60ca81815481106102c7575f80fd5b610852610ac5565b6001600160a01b0381166108b75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610342565b6103c781610b24565b60c954604080516318d36b1560e01b815290516060926001600160a01b0316916318d36b15916004808301925f9291908290030181865afa158015610907573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f1916820160405261092e919081019061106e565b905090565b5f805160206112a9833981519152546001600160a01b031690565b6103c7610ac5565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561098e5761098983610bb2565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156109e8575060408051601f3d908101601f191682019092526109e5918101906111b7565b60015b610a4b5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610342565b5f805160206112a98339815191528114610ab95760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610342565b50610989838383610c4b565b33610ace61057b565b6001600160a01b0316146105795760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610342565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03163b151590565b5f54610100900460ff16610baa5760405162461bcd60e51b8152600401610342906111ce565b610579610c75565b610bbb81610b75565b610c1d5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610342565b5f805160206112a983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610c5483610ca4565b5f82511180610c605750805b1561098957610c6f8383610ce3565b50505050565b5f54610100900460ff16610c9b5760405162461bcd60e51b8152600401610342906111ce565b61057933610b24565b610cad81610bb2565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b6060610cee83610b75565b610d495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610342565b5f80846001600160a01b031684604051610d63919061123b565b5f60405180830381855af49150503d805f8114610d9b576040519150601f19603f3d011682016040523d82523d5f602084013e610da0565b606091505b5091509150610dc882826040518060600160405280602781526020016112c960279139610dd3565b925050505b92915050565b60608315610de2575081610dec565b610dec8383610df3565b9392505050565b815115610e035781518083602001fd5b8060405162461bcd60e51b81526004016103429190611256565b5f60208284031215610e2d575f80fd5b5035919050565b6001600160a01b03811681146103c7575f80fd5b5f60208284031215610e58575f80fd5b8135610dec81610e34565b634e487b7160e01b5f52604160045260245ffd5b604051608081016001600160401b0381118282101715610e9957610e99610e63565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610ec757610ec7610e63565b604052919050565b5f8060408385031215610ee0575f80fd5b8235610eeb81610e34565b91506020838101356001600160401b0380821115610f07575f80fd5b818601915086601f830112610f1a575f80fd5b813581811115610f2c57610f2c610e63565b610f3e601f8201601f19168501610e9f565b91508082528784828501011115610f53575f80fd5b80848401858401375f848284010152508093505050509250929050565b5f8060408385031215610f81575f80fd5b50508035926020909101359150565b602080825282518282018190525f919060409081850190868401855b82811015610fef57815180516001600160a01b03168552868101518786015285810151868601526060908101519085015260809093019290850190600101610fac565b5091979650505050505050565b6020808252602c908201525f8051602061128983398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201525f8051602061128983398151915260408201526b6163746976652070726f787960a01b606082015260800190565b5f602080838503121561107f575f80fd5b82516001600160401b0380821115611095575f80fd5b818501915085601f8301126110a8575f80fd5b8151818111156110ba576110ba610e63565b6110c8848260051b01610e9f565b818152848101925060079190911b8301840190878211156110e7575f80fd5b928401925b818410156111465760808489031215611104575f8081fd5b61110c610e77565b845161111781610e34565b8152848601518682015260408086015190820152606080860151908201528352608090930192918401916110ec565b979650505050505050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610dcd57610dcd611151565b80820180821115610dcd57610dcd611151565b634e487b7160e01b5f52603260045260245ffd5b5f600182016111b0576111b0611151565b5060010190565b5f602082840312156111c7575f80fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f5b8381101561123357818101518382015260200161121b565b50505f910152565b5f825161124c818460208701611219565b9190910192915050565b602081525f8251806020840152611274816040850160208701611219565b601f01601f1916919091016040019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220028a6ac9394f654610242098198cd8f1fbd5c8284d0e1d452ac86b5add9da8fc64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8E277C1 EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x4469ED13 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x661A5614 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x8A1E0A17 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xCB82AB19 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xD05A38D7 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF2782D6D EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF64387A7 EQ PUSH2 0x2A4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0xD5 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x2B8 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x2FA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3CA JUMP JUMPDEST PUSH2 0x128 PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xECF JUMP JUMPDEST PUSH2 0x3D9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x167 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x189 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x568 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x1D0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x100 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x57B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x254 CALLDATASIZE PUSH1 0x4 PUSH2 0xF70 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x100 SWAP2 SWAP1 PUSH2 0xF90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x271 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x280 CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x128 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0xE48 JUMP JUMPDEST PUSH2 0x84A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x259 PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0xCC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP4 POP SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x37D PUSH2 0x933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x3AC DUP2 PUSH2 0x94E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3C7 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xCD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x421 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0xFFC JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x453 PUSH2 0x933 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x479 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x1035 JUMP JUMPDEST PUSH2 0x482 DUP3 PUSH2 0x94E JUMP JUMPDEST PUSH2 0x48E DUP3 DUP3 PUSH1 0x1 PUSH2 0x956 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x546 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x570 PUSH2 0xAC5 JUMP JUMPDEST PUSH2 0x579 PUSH0 PUSH2 0xB24 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x5A8 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x5C8 JUMPI POP PUSH2 0x5B7 ADDRESS PUSH2 0xB75 JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x5C8 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x64C JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x654 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xCB DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0xC9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18D36B15 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x718 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x73F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x106E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x74C DUP6 DUP6 PUSH2 0x1165 JUMP JUMPDEST PUSH2 0x757 SWAP1 PUSH1 0x1 PUSH2 0x1178 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x771 JUMPI PUSH2 0x771 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x7BF PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x78F JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x832 JUMPI DUP3 PUSH2 0x7EA DUP3 DUP9 PUSH2 0x1178 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x7FA JUMPI PUSH2 0x7FA PUSH2 0x118B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x814 JUMPI PUSH2 0x814 PUSH2 0x118B JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x82A SWAP1 PUSH2 0x119F JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7D7 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xCA DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x852 PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x8B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH2 0x3C7 DUP2 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18D36B15 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x60 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18D36B15 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x907 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x92E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x106E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x3C7 PUSH2 0xAC5 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x98E JUMPI PUSH2 0x989 DUP4 PUSH2 0xBB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9E8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9E5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11B7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0xAB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST POP PUSH2 0x989 DUP4 DUP4 DUP4 PUSH2 0xC4B JUMP JUMPDEST CALLER PUSH2 0xACE PUSH2 0x57B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x579 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x342 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x579 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0xBBB DUP2 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0xC1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x12A9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC54 DUP4 PUSH2 0xCA4 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0xC60 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x989 JUMPI PUSH2 0xC6F DUP4 DUP4 PUSH2 0xCE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP1 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x579 CALLER PUSH2 0xB24 JUMP JUMPDEST PUSH2 0xCAD DUP2 PUSH2 0xBB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xCEE DUP4 PUSH2 0xB75 JUMP JUMPDEST PUSH2 0xD49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x342 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x123B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xD9B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDA0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xDC8 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12C9 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xDD3 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0xDE2 JUMPI POP DUP2 PUSH2 0xDEC JUMP JUMPDEST PUSH2 0xDEC DUP4 DUP4 PUSH2 0xDF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0xE03 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE2D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE58 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDEC DUP2 PUSH2 0xE34 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE99 JUMPI PUSH2 0xE99 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC7 PUSH2 0xE63 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xEEB DUP2 PUSH2 0xE34 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0xF07 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF1A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF2C JUMPI PUSH2 0xF2C PUSH2 0xE63 JUMP JUMPDEST PUSH2 0xF3E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0xE9F JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xF53 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xFEF JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 DUP2 ADD MLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x60 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xFAC JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1289 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1289 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x107F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1095 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x10A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x10BA JUMPI PUSH2 0x10BA PUSH2 0xE63 JUMP JUMPDEST PUSH2 0x10C8 DUP5 DUP3 PUSH1 0x5 SHL ADD PUSH2 0xE9F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP3 POP PUSH1 0x7 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP8 DUP3 GT ISZERO PUSH2 0x10E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP2 DUP5 LT ISZERO PUSH2 0x1146 JUMPI PUSH1 0x80 DUP5 DUP10 SUB SLT ISZERO PUSH2 0x1104 JUMPI PUSH0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x110C PUSH2 0xE77 JUMP JUMPDEST DUP5 MLOAD PUSH2 0x1117 DUP2 PUSH2 0xE34 JUMP JUMPDEST DUP2 MSTORE DUP5 DUP7 ADD MLOAD DUP7 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD SWAP1 DUP3 ADD MSTORE DUP4 MSTORE PUSH1 0x80 SWAP1 SWAP4 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH2 0x10EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0x1151 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0x1151 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x11B0 JUMPI PUSH2 0x11B0 PUSH2 0x1151 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1233 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121B JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x124C DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1219 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1274 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1219 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CHAINID PUSH22 0x6E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122002 DUP11 PUSH11 0xC9394F654610242098198C 0xD8 CALL 0xFB 0xD5 0xC8 0x28 0x4D 0xE SAR GASLIMIT 0x2A 0xC8 PUSH12 0x5ADD9DA8FC64736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "2517:1265:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:30;;;;;;;;;;-1:-1:-1;2712:30:0;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;448:32:17;;;430:51;;512:2;497:18;;490:34;;;;540:18;;;533:34;598:2;583:18;;576:34;417:3;402:19;2712:30:0;;;;;;;;3317:197:9;;;;;;;;;;-1:-1:-1;3317:197:9;;;;;:::i;:::-;;:::i;:::-;;2749:39:0;;;;;;;;;;-1:-1:-1;2749:39:0;;;;;:::i;:::-;;:::i;3763:222:9:-;;;;;;:::i;:::-;;:::i;3006:131::-;;;;;;;;;;;;;:::i;:::-;;;2728:25:17;;;2716:2;2701:18;3006:131:9;2582:177:17;3056:91:0;;;;;;;;;;-1:-1:-1;3056:91:0;;;;;:::i;:::-;;:::i;2071:101:3:-;;;;;;;;;;;;;:::i;2594:22:0:-;;;;;;;;;;-1:-1:-1;2594:22:0;;;;-1:-1:-1;;;;;2594:22:0;;;;;;-1:-1:-1;;;;;2928:32:17;;;2910:51;;2898:2;2883:18;2594:22:0;2764:203:17;1441:85:3;;;;;;;;;;;;;:::i;2820:136:0:-;;;;;;;;;;-1:-1:-1;2820:136:0;;;;;:::i;:::-;;:::i;2672:33::-;;;;;;;;;;-1:-1:-1;2672:33:0;;;;;:::i;:::-;;:::i;3161:418::-;;;;;;;;;;-1:-1:-1;3161:418:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2632:33::-;;;;;;;;;;-1:-1:-1;2632:33:0;;;;;:::i;:::-;;:::i;2321:198:3:-;;;;;;;;;;-1:-1:-1;2321:198:3;;;;;:::i;:::-;;:::i;3589:173:0:-;;;;;;;;;;;;;:::i;2712:30::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2712:30:0;;;;-1:-1:-1;2712:30:0;;;:::o;3317:197:9:-;-1:-1:-1;;;;;1898:6:9;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:9;;;;;;;:::i;:::-;;;;;;;;;1995:6;-1:-1:-1;;;;;1971:30:9;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:9;;1963:87;;;;-1:-1:-1;;;1963:87:9;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;2749:39:0:-;;;;;;;;;;;;3763:222:9;-1:-1:-1;;;;;1898:6:9;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:9;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:9;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:9;;1963:87;;;;-1:-1:-1;;;1963:87:9;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;:::-;3763:222:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:9;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:9;;5217:2:17;2308:92:9;;;5199:21:17;5256:2;5236:18;;;5229:30;5295:34;5275:18;;;5268:62;-1:-1:-1;;;5346:18:17;;;5339:54;5410:19;;2308:92:9;5015:420:17;2308:92:9;-1:-1:-1;;;;;;;;;;;;3006:131:9;:::o;3056:91:0:-;1334:13:3;:11;:13::i;:::-;3123:7:0::1;:16:::0;;-1:-1:-1;;;;;;3123:16:0::1;-1:-1:-1::0;;;;;3123:16:0;;;::::1;::::0;;;::::1;::::0;;3056:91::o;2071:101:3:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;1441:85::-;1513:6;;-1:-1:-1;;;;;1513:6:3;;1441:85::o;2820:136:0:-;3268:19:8;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:8;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;;3377:44;3415:4;3377:29;:44::i;:::-;3376:45;:66;;;;-1:-1:-1;3425:12:8;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:8;;5642:2:17;3314:201:8;;;5624:21:17;5681:2;5661:18;;;5654:30;5720:34;5700:18;;;5693:62;-1:-1:-1;;;5771:18:17;;;5764:44;5825:19;;3314:201:8;5440:410:17;3314:201:8;3525:12;:16;;-1:-1:-1;;3525:16:8;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:8;;;;;3551:65;2887:16:0::1;:14;:16::i;:::-;2925:7;:16:::0;;-1:-1:-1;;;;;;2925:16:0::1;-1:-1:-1::0;;;;;2925:16:0;::::1;;::::0;;3636:99:8;;;;3686:5;3670:21;;-1:-1:-1;;3670:21:8;;;3710:14;;-1:-1:-1;6007:36:17;;3710:14:8;;5995:2:17;5980:18;3710:14:8;;;;;;;3258:483;2820:136:0;:::o;2672:33::-;;;;;;;;;;;;3161:418;3243:36;3292:31;3334:7;;;;;;;;;-1:-1:-1;;;;;3334:7:0;-1:-1:-1;;;;;3326:36:0;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3326:38:0;;;;;;;;;;;;:::i;:::-;3292:72;-1:-1:-1;3375:14:0;3392:11;3398:5;3392:3;:11;:::i;:::-;:15;;3406:1;3392:15;:::i;:::-;3375:32;;3454:6;-1:-1:-1;;;;;3434:27:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3434:27:0;;;;;;;;;;;;;;;;;3418:43;;3476:9;3472:100;3495:6;3491:1;:10;3472:100;;;3541:8;3550:9;3558:1;3550:5;:9;:::i;:::-;3541:19;;;;;;;;:::i;:::-;;;;;;;3522:13;3536:1;3522:16;;;;;;;;:::i;:::-;;;;;;:38;;;;3503:3;;;;;:::i;:::-;;;;3472:100;;;;3281:298;;3161:418;;;;:::o;2632:33::-;;;;;;;;;;;;2321:198:3;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:3;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:3;;8394:2:17;2401:73:3::1;::::0;::::1;8376:21:17::0;8433:2;8413:18;;;8406:30;8472:34;8452:18;;;8445:62;-1:-1:-1;;;8523:18:17;;;8516:36;8569:19;;2401:73:3::1;8192:402:17::0;2401:73:3::1;2484:28;2503:8;2484:18;:28::i;3589:173:0:-:0;3715:7;;3707:38;;;-1:-1:-1;;;3707:38:0;;;;3642:36;;-1:-1:-1;;;;;3715:7:0;;3707:36;;:38;;;;;3715:7;;3707:38;;;;;;;3715:7;3707:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3707:38:0;;;;;;;;;;;;:::i;:::-;3691:54;;3589:173;:::o;1509:151:6:-;-1:-1:-1;;;;;;;;;;;1588:65:6;-1:-1:-1;;;;;1588:65:6;;1509:151::o;2970:66:0:-;1334:13:3;:11;:13::i;2884:974:6:-;1023:66;3330:59;;;3326:526;;;3405:37;3424:17;3405:18;:37::i;:::-;2884:974;;;:::o;3326:526::-;3506:17;-1:-1:-1;;;;;3477:61:6;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3477:63:6;;;;;;;;-1:-1:-1;;3477:63:6;;;;;;;;;;;;:::i;:::-;;;3473:302;;3704:56;;-1:-1:-1;;;3704:56:6;;8990:2:17;3704:56:6;;;8972:21:17;9029:2;9009:18;;;9002:30;9068:34;9048:18;;;9041:62;-1:-1:-1;;;9119:18:17;;;9112:44;9173:19;;3704:56:6;8788:410:17;3473:302:6;-1:-1:-1;;;;;;;;;;;3590:28:6;;3582:82;;;;-1:-1:-1;;;3582:82:6;;9405:2:17;3582:82:6;;;9387:21:17;9444:2;9424:18;;;9417:30;9483:34;9463:18;;;9456:62;-1:-1:-1;;;9534:18:17;;;9527:39;9583:19;;3582:82:6;9203:405:17;3582:82:6;3541:138;3788:53;3806:17;3825:4;3831:9;3788:17;:53::i;1599:130:3:-;929:10:12;1662:7:3;:5;:7::i;:::-;-1:-1:-1;;;;;1662:23:3;;1654:68;;;;-1:-1:-1;;;1654:68:3;;9815:2:17;1654:68:3;;;9797:21:17;;;9834:18;;;9827:30;9893:34;9873:18;;;9866:62;9945:18;;1654:68:3;9613:356:17;2673:187:3;2765:6;;;-1:-1:-1;;;;;2781:17:3;;;-1:-1:-1;;;;;;2781:17:3;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1186:320:11:-;-1:-1:-1;;;;;1476:19:11;;:23;;;1186:320::o;1003:95:3:-;5363:13:8;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:8;;;;;;;:::i;:::-;1065:26:3::1;:24;:26::i;1751:281:6:-:0;1832:48;1862:17;1832:29;:48::i;:::-;1824:106;;;;-1:-1:-1;;;1824:106:6;;10588:2:17;1824:106:6;;;10570:21:17;10627:2;10607:18;;;10600:30;10666:34;10646:18;;;10639:62;-1:-1:-1;;;10717:18:17;;;10710:43;10770:19;;1824:106:6;10386:409:17;1824:106:6;-1:-1:-1;;;;;;;;;;;1940:85:6;;-1:-1:-1;;;;;;1940:85:6;-1:-1:-1;;;;;1940:85:6;;;;;;;;;;1751:281::o;2424:288::-;2562:29;2573:17;2562:10;:29::i;:::-;2619:1;2605:4;:11;:15;:28;;;;2624:9;2605:28;2601:105;;;2649:46;2671:17;2690:4;2649:21;:46::i;:::-;;2424:288;;;:::o;1104:111:3:-;5363:13:8;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:8;;;;;;;:::i;:::-;1176:32:3::1;929:10:12::0;1176:18:3::1;:32::i;2138:152:6:-:0;2204:37;2223:17;2204:18;:37::i;:::-;2256:27;;-1:-1:-1;;;;;2256:27:6;;;;;;;;2138:152;:::o;6780:455::-;6863:12;6895:37;6925:6;6895:29;:37::i;:::-;6887:88;;;;-1:-1:-1;;;6887:88:6;;11002:2:17;6887:88:6;;;10984:21:17;11041:2;11021:18;;;11014:30;11080:34;11060:18;;;11053:62;-1:-1:-1;;;11131:18:17;;;11124:36;11177:19;;6887:88:6;10800:402:17;6887:88:6;7046:12;7060:23;7087:6;-1:-1:-1;;;;;7087:19:6;7107:4;7087:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7045:67;;;;7129:99;7165:7;7174:10;7129:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7122:106;;;;6780:455;;;;;:::o;7438:295:11:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:11;7635:17;;7608:119;7683:33;7691:10;7703:12;7683:7;:33::i;:::-;7438:295;;;;;:::o;7739:540::-;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;7894:379;8249:12;8242:20;;-1:-1:-1;;;8242:20:11;;;;;;;;:::i;14:180:17:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:17;;14:180;-1:-1:-1;14:180:17:o;621:131::-;-1:-1:-1;;;;;696:31:17;;686:42;;676:70;;742:1;739;732:12;757:247;816:6;869:2;857:9;848:7;844:23;840:32;837:52;;;885:1;882;875:12;837:52;924:9;911:23;943:31;968:5;943:31;:::i;1009:127::-;1070:10;1065:3;1061:20;1058:1;1051:31;1101:4;1098:1;1091:15;1125:4;1122:1;1115:15;1141:253;1213:2;1207:9;1255:4;1243:17;;-1:-1:-1;;;;;1275:34:17;;1311:22;;;1272:62;1269:88;;;1337:18;;:::i;:::-;1373:2;1366:22;1141:253;:::o;1399:275::-;1470:2;1464:9;1535:2;1516:13;;-1:-1:-1;;1512:27:17;1500:40;;-1:-1:-1;;;;;1555:34:17;;1591:22;;;1552:62;1549:88;;;1617:18;;:::i;:::-;1653:2;1646:22;1399:275;;-1:-1:-1;1399:275:17:o;1679:898::-;1756:6;1764;1817:2;1805:9;1796:7;1792:23;1788:32;1785:52;;;1833:1;1830;1823:12;1785:52;1872:9;1859:23;1891:31;1916:5;1891:31;:::i;:::-;1941:5;-1:-1:-1;1965:2:17;2003:18;;;1990:32;-1:-1:-1;;;;;2071:14:17;;;2068:34;;;2098:1;2095;2088:12;2068:34;2136:6;2125:9;2121:22;2111:32;;2181:7;2174:4;2170:2;2166:13;2162:27;2152:55;;2203:1;2200;2193:12;2152:55;2239:2;2226:16;2261:2;2257;2254:10;2251:36;;;2267:18;;:::i;:::-;2309:53;2352:2;2333:13;;-1:-1:-1;;2329:27:17;2325:36;;2309:53;:::i;:::-;2296:66;;2385:2;2378:5;2371:17;2425:7;2420:2;2415;2411;2407:11;2403:20;2400:33;2397:53;;;2446:1;2443;2436:12;2397:53;2501:2;2496;2492;2488:11;2483:2;2476:5;2472:14;2459:45;2545:1;2540:2;2535;2528:5;2524:14;2520:23;2513:34;;2566:5;2556:15;;;;;1679:898;;;;;:::o;2972:248::-;3040:6;3048;3101:2;3089:9;3080:7;3076:23;3072:32;3069:52;;;3117:1;3114;3107:12;3069:52;-1:-1:-1;;3140:23:17;;;3210:2;3195:18;;;3182:32;;-1:-1:-1;2972:248:17:o;3225:959::-;3456:2;3508:21;;;3578:13;;3481:18;;;3600:22;;;3427:4;;3456:2;3641;;3659:18;;;;3700:15;;;3427:4;3743:415;3757:6;3754:1;3751:13;3743:415;;;3816:13;;3858:9;;-1:-1:-1;;;;;3854:35:17;3842:48;;3930:11;;;3924:18;3910:12;;;3903:40;3983:11;;;3977:18;3963:12;;;3956:40;4019:4;4063:11;;;4057:18;4043:12;;;4036:40;4105:4;4096:14;;;;4133:15;;;;3886:1;3772:9;3743:415;;;-1:-1:-1;4175:3:17;;3225:959;-1:-1:-1;;;;;;;3225:959:17:o;4189:408::-;4391:2;4373:21;;;4430:2;4410:18;;;4403:30;-1:-1:-1;;;;;;;;;;;4464:2:17;4449:18;;4442:62;-1:-1:-1;;;4535:2:17;4520:18;;4513:42;4587:3;4572:19;;4189:408::o;4602:::-;4804:2;4786:21;;;4843:2;4823:18;;;4816:30;-1:-1:-1;;;;;;;;;;;4877:2:17;4862:18;;4855:62;-1:-1:-1;;;4948:2:17;4933:18;;4926:42;5000:3;4985:19;;4602:408::o;6054:1466::-;6179:6;6210:2;6253;6241:9;6232:7;6228:23;6224:32;6221:52;;;6269:1;6266;6259:12;6221:52;6296:16;;-1:-1:-1;;;;;6361:14:17;;;6358:34;;;6388:1;6385;6378:12;6358:34;6426:6;6415:9;6411:22;6401:32;;6471:7;6464:4;6460:2;6456:13;6452:27;6442:55;;6493:1;6490;6483:12;6442:55;6522:2;6516:9;6544:2;6540;6537:10;6534:36;;;6550:18;;:::i;:::-;6590:36;6622:2;6617;6614:1;6610:10;6606:19;6590:36;:::i;:::-;6660:15;;;6691:12;;;;-1:-1:-1;6742:1:17;6738:10;;;;6730:19;;6726:28;;;6766:19;;;6763:39;;;6798:1;6795;6788:12;6763:39;6822:11;;;;6842:648;6858:6;6853:3;6850:15;6842:648;;;6940:4;6934:3;6925:7;6921:17;6917:28;6914:118;;;6986:1;7015:2;7011;7004:14;6914:118;7058:22;;:::i;:::-;7114:3;7108:10;7131:33;7156:7;7131:33;:::i;:::-;7177:22;;7241:12;;;7235:19;7219:14;;;7212:43;7278:2;7322:12;;;7316:19;7300:14;;;7293:43;7359:2;7403:12;;;7397:19;7381:14;;;7374:43;7430:18;;6884:4;6875:14;;;;7468:12;;;;6842:648;;;7509:5;6054:1466;-1:-1:-1;;;;;;;6054:1466:17:o;7525:127::-;7586:10;7581:3;7577:20;7574:1;7567:31;7617:4;7614:1;7607:15;7641:4;7638:1;7631:15;7657:128;7724:9;;;7745:11;;;7742:37;;;7759:18;;:::i;7790:125::-;7855:9;;;7876:10;;;7873:36;;;7889:18;;:::i;7920:127::-;7981:10;7976:3;7972:20;7969:1;7962:31;8012:4;8009:1;8002:15;8036:4;8033:1;8026:15;8052:135;8091:3;8112:17;;;8109:43;;8132:18;;:::i;:::-;-1:-1:-1;8179:1:17;8168:13;;8052:135::o;8599:184::-;8669:6;8722:2;8710:9;8701:7;8697:23;8693:32;8690:52;;;8738:1;8735;8728:12;8690:52;-1:-1:-1;8761:16:17;;8599:184;-1:-1:-1;8599:184:17:o;9974:407::-;10176:2;10158:21;;;10215:2;10195:18;;;10188:30;10254:34;10249:2;10234:18;;10227:62;-1:-1:-1;;;10320:2:17;10305:18;;10298:41;10371:3;10356:19;;9974:407::o;11207:250::-;11292:1;11302:113;11316:6;11313:1;11310:13;11302:113;;;11392:11;;;11386:18;11373:11;;;11366:39;11338:2;11331:10;11302:113;;;-1:-1:-1;;11449:1:17;11431:16;;11424:27;11207:250::o;11462:287::-;11591:3;11629:6;11623:13;11645:66;11704:6;11699:3;11692:4;11684:6;11680:17;11645:66;:::i;:::-;11727:16;;;;;11462:287;-1:-1:-1;;11462:287:17:o;11754:396::-;11903:2;11892:9;11885:21;11866:4;11935:6;11929:13;11978:6;11973:2;11962:9;11958:18;11951:34;11994:79;12066:6;12061:2;12050:9;12046:18;12041:2;12033:6;12029:15;11994:79;:::i;:::-;12134:2;12113:15;-1:-1:-1;;12109:29:17;12094:45;;;;12141:2;12090:54;;11754:396;-1:-1:-1;;11754:396:17:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "980200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MMstore()": "2468",
								"NoOrder(uint256)": "10994",
								"changeMmstore(address)": "26860",
								"claimOrderArr(uint256)": "11214",
								"getNoOrderRewardBy()": "infinite",
								"getNoOrderRewardByIndex(uint256,uint256)": "infinite",
								"initialize(address)": "infinite",
								"machineArr(uint256)": "11258",
								"owner()": "2499",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"transferMaxOrder(uint256)": "11038",
								"transferOwnership(address)": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1332,
									"end": 1336,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1338"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2517,
									"end": 3782,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220028a6ac9394f654610242098198cd8f1fbd5c8284d0e1d452ac86b5add9da8fc64736f6c63430008140033",
									".code": [
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "8E277C1"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "3659CFE6"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "4469ED13"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "4F1EF286"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "52D1902D"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "661A5614"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "8A1E0A17"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "C4D66DE8"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "CB82AB19"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "D05A38D7"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "F2782D6D"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "F64387A7"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2517,
											"end": 3782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2712,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 448,
											"end": 480,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 448,
											"end": 480,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 448,
											"end": 480,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 430,
											"end": 481,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 430,
											"end": 481,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 497,
											"end": 515,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 497,
											"end": 515,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 490,
											"end": 524,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 490,
											"end": 524,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 490,
											"end": 524,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 490,
											"end": 524,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 540,
											"end": 558,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 558,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 540,
											"end": 558,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 533,
											"end": 567,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 598,
											"end": 600,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 583,
											"end": 601,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 583,
											"end": 601,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 610,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 417,
											"end": 420,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 402,
											"end": 421,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 3317,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3317,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2749,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2749,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3763,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3763,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2728,
											"end": 2753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2728,
											"end": 2753,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2728,
											"end": 2753,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2716,
											"end": 2718,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2701,
											"end": 2719,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2582,
											"end": 2759,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3056,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3056,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2071,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2928,
											"end": 2960,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2928,
											"end": 2960,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2928,
											"end": 2960,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2910,
											"end": 2961,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2910,
											"end": 2961,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2898,
											"end": 2900,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2883,
											"end": 2901,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2764,
											"end": 2967,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2820,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2820,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2672,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3161,
											"end": 3579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3161,
											"end": 3579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3161,
											"end": 3579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2632,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2632,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2321,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2321,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3589,
											"end": 3762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2712,
											"end": 2742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1338"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1338"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1971,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3418,
											"end": 3435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3400,
											"end": 3436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3400,
											"end": 3436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3400,
											"end": 3436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3446,
											"end": 3507,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 3485,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3468,
											"end": 3485,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3446,
											"end": 3507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 3446,
											"end": 3507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3317,
											"end": 3514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "CD"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2749,
											"end": 2788,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1338"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1338"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1971,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 3898,
											"end": 3915,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3880,
											"end": 3916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3880,
											"end": 3916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 3880,
											"end": 3916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 3948,
											"end": 3965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3967,
											"end": 3971,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3973,
											"end": 3977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3926,
											"end": 3978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3926,
											"end": 3978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 3926,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3763,
											"end": 3985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2328,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "1338"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5217,
											"end": 5219,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5220,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5256,
											"end": 5258,
											"name": "PUSH",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5236,
											"end": 5254,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5229,
											"end": 5259,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5295,
											"end": 5329,
											"name": "PUSH",
											"source": 17,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5275,
											"end": 5293,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5268,
											"end": 5330,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5339,
											"end": 5393,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5410,
											"end": 5429,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5410,
											"end": 5429,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5015,
											"end": 5435,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3056,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3123,
											"end": 3130,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3123,
											"end": 3139,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3139,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3056,
											"end": 3147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2162,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2135,
											"end": 2165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 2135,
											"end": 2165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2071,
											"end": 2172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3354,
											"end": 3370,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 3377,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3421,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5642,
											"end": 5644,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5624,
											"end": 5645,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5681,
											"end": 5683,
											"name": "PUSH",
											"source": 17,
											"value": "2E"
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5654,
											"end": 5684,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5720,
											"end": 5754,
											"name": "PUSH",
											"source": 17,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 5700,
											"end": 5718,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5700,
											"end": 5718,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5700,
											"end": 5718,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5693,
											"end": 5755,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5771,
											"end": 5789,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5764,
											"end": 5808,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5825,
											"end": 5844,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5825,
											"end": 5844,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 5440,
											"end": 5850,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3540,
											"end": 3541,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3598,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2887,
											"end": 2901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 2887,
											"end": 2903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2887,
											"end": 2903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 2887,
											"end": 2903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2932,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 2925,
											"end": 2941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 2941,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2925,
											"end": 2941,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2941,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2941,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2925,
											"end": 2941,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 6007,
											"end": 6043,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6007,
											"end": 6043,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 8,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5995,
											"end": 5997,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3741,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2820,
											"end": 2956,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2820,
											"end": 2956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "CB"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2705,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3243,
											"end": 3279,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3292,
											"end": 3323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3334,
											"end": 3341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3326,
											"end": 3362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3362,
											"name": "PUSH",
											"source": 0,
											"value": "18D36B15"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3326,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3326,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3292,
											"end": 3364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3375,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3392,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3398,
											"end": 3403,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3392,
											"end": 3403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3403,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3392,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3406,
											"end": 3407,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3392,
											"end": 3407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3454,
											"end": 3460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3434,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3461,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3418,
											"end": 3461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3495,
											"end": 3501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3501,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3558,
											"end": 3559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3555,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3550,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3550,
											"end": 3559,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3550,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3541,
											"end": 3560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3535,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3536,
											"end": 3537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3522,
											"end": 3538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3560,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3522,
											"end": 3560,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3503,
											"end": 3506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3503,
											"end": 3506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3472,
											"end": 3572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3281,
											"end": 3579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3281,
											"end": 3579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3161,
											"end": 3579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "CA"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2665,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2409,
											"end": 2431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8394,
											"end": 8396,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8376,
											"end": 8397,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8433,
											"end": 8435,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8406,
											"end": 8436,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8472,
											"end": 8506,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8445,
											"end": 8507,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8516,
											"end": 8552,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8569,
											"end": 8588,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8569,
											"end": 8588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 8192,
											"end": 8594,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 2503,
											"end": 2511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2484,
											"end": 2502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2484,
											"end": 2512,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18D36B15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3678,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3642,
											"end": 3678,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "18D36B15"
										},
										{
											"begin": 3707,
											"end": 3743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3715,
											"end": 3722,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3707,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3707,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3691,
											"end": 3745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3691,
											"end": 3745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3589,
											"end": 3762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1660,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1509,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1509,
											"end": 1660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 3036,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2970,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2884,
											"end": 3858,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2884,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1089,
											"name": "PUSH",
											"source": 6,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3330,
											"end": 3389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3330,
											"end": 3389,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3330,
											"end": 3389,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3424,
											"end": 3441,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3405,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 3442,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3405,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 3858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 3858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 3858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2884,
											"end": 3858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3538,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3538,
											"name": "PUSH",
											"source": 6,
											"value": "52D1902D"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3477,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8992,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8972,
											"end": 8993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9029,
											"end": 9031,
											"name": "PUSH",
											"source": 17,
											"value": "2E"
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9027,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9002,
											"end": 9032,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9068,
											"end": 9102,
											"name": "PUSH",
											"source": 17,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 9048,
											"end": 9066,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9048,
											"end": 9066,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9048,
											"end": 9066,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9041,
											"end": 9103,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E206973206E6F742055555053"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9119,
											"end": 9137,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9112,
											"end": 9156,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9173,
											"end": 9192,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 9173,
											"end": 9192,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 8788,
											"end": 9198,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3590,
											"end": 3618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3618,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9405,
											"end": 9407,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9387,
											"end": 9408,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9444,
											"end": 9446,
											"name": "PUSH",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9424,
											"end": 9442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9417,
											"end": 9447,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9483,
											"end": 9517,
											"name": "PUSH",
											"source": 17,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9456,
											"end": 9518,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A58589B1955555251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9534,
											"end": 9552,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9534,
											"end": 9552,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9534,
											"end": 9552,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9527,
											"end": 9566,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9583,
											"end": 9602,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 9583,
											"end": 9602,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 9203,
											"end": 9608,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 3679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3806,
											"end": 3823,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3831,
											"end": 3840,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3788,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1662,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9815,
											"end": 9817,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9797,
											"end": 9818,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9797,
											"end": 9818,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9797,
											"end": 9818,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9827,
											"end": 9857,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9893,
											"end": 9927,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9873,
											"end": 9891,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9873,
											"end": 9891,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9873,
											"end": 9891,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9866,
											"end": 9928,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9945,
											"end": 9963,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9945,
											"end": 9963,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 9613,
											"end": 9969,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1186,
											"end": 1506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 5355,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 1065,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1065,
											"end": 1091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1751,
											"end": 2032,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1751,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1832,
											"end": 1880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10570,
											"end": 10591,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10627,
											"end": 10629,
											"name": "PUSH",
											"source": 17,
											"value": "2D"
										},
										{
											"begin": 10607,
											"end": 10625,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10607,
											"end": 10625,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10607,
											"end": 10625,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10600,
											"end": 10630,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10666,
											"end": 10700,
											"name": "PUSH",
											"source": 17,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10646,
											"end": 10664,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10639,
											"end": 10701,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10717,
											"end": 10735,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10710,
											"end": 10753,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10770,
											"end": 10789,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 10770,
											"end": 10789,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 10386,
											"end": 10795,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1751,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2562,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2591,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 2562,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2609,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2616,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2620,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2706,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2601,
											"end": 2706,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2671,
											"end": 2688,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2649,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2424,
											"end": 2712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 5355,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2138,
											"end": 2290,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2138,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2223,
											"end": 2240,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 2204,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "PUSH",
											"source": 6,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2138,
											"end": 2290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6863,
											"end": 6875,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6895,
											"end": 6932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11002,
											"end": 11004,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10984,
											"end": 11005,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11041,
											"end": 11043,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 11021,
											"end": 11039,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11021,
											"end": 11039,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11021,
											"end": 11039,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11014,
											"end": 11044,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11080,
											"end": 11114,
											"name": "PUSH",
											"source": 17,
											"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
										},
										{
											"begin": 11060,
											"end": 11078,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 11060,
											"end": 11078,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11060,
											"end": 11078,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11053,
											"end": 11115,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11124,
											"end": 11160,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11177,
											"end": 11196,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 11177,
											"end": 11196,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 10800,
											"end": 11202,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7046,
											"end": 7058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7083,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7093,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7106,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7111,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 7087,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DELEGATECALL",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 7165,
											"end": 7172,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH data",
											"source": 6,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 7129,
											"end": 7228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7228,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7122,
											"end": 7228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7584,
											"end": 7596,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7612,
											"end": 7619,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7642,
											"end": 7652,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7635,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 7635,
											"end": 7652,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 7691,
											"end": 7701,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7703,
											"end": 7715,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7683,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 7683,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7438,
											"end": 7733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7739,
											"end": 8279,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 7739,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7898,
											"end": 7915,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7898,
											"end": 7915,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7898,
											"end": 7919,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8126,
											"end": 8136,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8120,
											"end": 8137,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8182,
											"end": 8197,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8169,
											"end": 8179,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8165,
											"end": 8167,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8154,
											"end": 8198,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8249,
											"end": 8261,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 8242,
											"end": 8262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 621,
											"end": 752,
											"name": "tag",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 621,
											"end": 752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 696,
											"end": 727,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 696,
											"end": 727,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 686,
											"end": 728,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 686,
											"end": 728,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 676,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 676,
											"end": 746,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 742,
											"end": 743,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 740,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 732,
											"end": 744,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 757,
											"end": 1004,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 757,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 871,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 857,
											"end": 866,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 848,
											"end": 855,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 844,
											"end": 867,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 840,
											"end": 872,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 837,
											"end": 889,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 837,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 837,
											"end": 889,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 885,
											"end": 886,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 875,
											"end": 887,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 837,
											"end": 889,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 837,
											"end": 889,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 924,
											"end": 933,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 911,
											"end": 934,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 943,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 968,
											"end": 973,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 943,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 943,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1136,
											"name": "tag",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 1009,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1070,
											"end": 1080,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 1065,
											"end": 1068,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 1061,
											"end": 1081,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 1058,
											"end": 1059,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1082,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1101,
											"end": 1105,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1098,
											"end": 1099,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1091,
											"end": 1106,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1129,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1122,
											"end": 1123,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1130,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1141,
											"end": 1394,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 1141,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1255,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1243,
											"end": 1260,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1243,
											"end": 1260,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1275,
											"end": 1309,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1275,
											"end": 1309,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1311,
											"end": 1333,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1272,
											"end": 1334,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1269,
											"end": 1357,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1269,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 1269,
											"end": 1357,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1337,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 1337,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 1337,
											"end": 1355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1337,
											"end": 1355,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 1337,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1373,
											"end": 1375,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1366,
											"end": 1388,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1141,
											"end": 1394,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1141,
											"end": 1394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1399,
											"end": 1674,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 1399,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1470,
											"end": 1472,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1464,
											"end": 1473,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1516,
											"end": 1529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1512,
											"end": 1539,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1500,
											"end": 1540,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1500,
											"end": 1540,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1591,
											"end": 1613,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1591,
											"end": 1613,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1591,
											"end": 1613,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1552,
											"end": 1614,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1637,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1549,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 1549,
											"end": 1637,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1617,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 1617,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 1617,
											"end": 1635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1617,
											"end": 1635,
											"name": "tag",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 1617,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1653,
											"end": 1655,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1668,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1399,
											"end": 1674,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1399,
											"end": 1674,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 2577,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1679,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1756,
											"end": 1762,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1814,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1792,
											"end": 1815,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1788,
											"end": 1820,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1833,
											"end": 1834,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1831,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1823,
											"end": 1835,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "tag",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 1785,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1872,
											"end": 1881,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1859,
											"end": 1882,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1891,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 1916,
											"end": 1921,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1891,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 1891,
											"end": 1922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1891,
											"end": 1922,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 1891,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1941,
											"end": 1946,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 1967,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2021,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2003,
											"end": 2021,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2003,
											"end": 2021,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1990,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2085,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2071,
											"end": 2085,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2071,
											"end": 2085,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2102,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 2068,
											"end": 2102,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2088,
											"end": 2100,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2068,
											"end": 2102,
											"name": "tag",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 2068,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2136,
											"end": 2142,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2125,
											"end": 2134,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2121,
											"end": 2143,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2111,
											"end": 2143,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2111,
											"end": 2143,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2181,
											"end": 2188,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2174,
											"end": 2178,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2170,
											"end": 2172,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2166,
											"end": 2179,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2162,
											"end": 2189,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2152,
											"end": 2207,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 2152,
											"end": 2207,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2201,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2193,
											"end": 2205,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2152,
											"end": 2207,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 2152,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2239,
											"end": 2241,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2226,
											"end": 2242,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2261,
											"end": 2263,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2257,
											"end": 2259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2254,
											"end": 2264,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2251,
											"end": 2287,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2251,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 2251,
											"end": 2287,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 2267,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "tag",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 2352,
											"end": 2354,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2333,
											"end": 2346,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2333,
											"end": 2346,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2356,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2361,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2361,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 2309,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2309,
											"end": 2362,
											"name": "tag",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 2309,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2362,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2296,
											"end": 2362,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2385,
											"end": 2387,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2378,
											"end": 2383,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2371,
											"end": 2388,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2420,
											"end": 2422,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2415,
											"end": 2417,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2411,
											"end": 2413,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2418,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2403,
											"end": 2423,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2400,
											"end": 2433,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2446,
											"end": 2447,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2444,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2436,
											"end": 2448,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2496,
											"end": 2498,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2488,
											"end": 2499,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2476,
											"end": 2481,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2472,
											"end": 2486,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2459,
											"end": 2504,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2542,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2535,
											"end": 2537,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2528,
											"end": 2533,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2524,
											"end": 2538,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2520,
											"end": 2543,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2513,
											"end": 2547,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2513,
											"end": 2547,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2566,
											"end": 2571,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2556,
											"end": 2571,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2556,
											"end": 2571,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2556,
											"end": 2571,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2556,
											"end": 2571,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2556,
											"end": 2571,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 2577,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 2577,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 2577,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 2577,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 2577,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1679,
											"end": 2577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2972,
											"end": 3220,
											"name": "tag",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 2972,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3040,
											"end": 3046,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3101,
											"end": 3103,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3098,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3080,
											"end": 3087,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3072,
											"end": 3104,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3114,
											"end": 3115,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3107,
											"end": 3119,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "tag",
											"source": 17,
											"value": "314"
										},
										{
											"begin": 3069,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3140,
											"end": 3163,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3140,
											"end": 3163,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3140,
											"end": 3163,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3210,
											"end": 3212,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3214,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3214,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2972,
											"end": 3220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3225,
											"end": 4184,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 3225,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3456,
											"end": 3458,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3578,
											"end": 3591,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3578,
											"end": 3591,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3600,
											"end": 3622,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3600,
											"end": 3622,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3600,
											"end": 3622,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3427,
											"end": 3431,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3431,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3456,
											"end": 3458,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3641,
											"end": 3643,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3641,
											"end": 3643,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3659,
											"end": 3677,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3659,
											"end": 3677,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3659,
											"end": 3677,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3659,
											"end": 3677,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3700,
											"end": 3715,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3700,
											"end": 3715,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3700,
											"end": 3715,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3427,
											"end": 3431,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3743,
											"end": 4158,
											"name": "tag",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 3743,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3757,
											"end": 3763,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3754,
											"end": 3755,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3751,
											"end": 3764,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3743,
											"end": 4158,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3743,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 3743,
											"end": 4158,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3829,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3829,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3858,
											"end": 3867,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3854,
											"end": 3889,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3842,
											"end": 3890,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3930,
											"end": 3941,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3924,
											"end": 3942,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 3922,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 3922,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3910,
											"end": 3922,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3903,
											"end": 3943,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3994,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3994,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 3994,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3963,
											"end": 3975,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3963,
											"end": 3975,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3963,
											"end": 3975,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3956,
											"end": 3996,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4019,
											"end": 4023,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4063,
											"end": 4074,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4063,
											"end": 4074,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4063,
											"end": 4074,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4057,
											"end": 4075,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4043,
											"end": 4055,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4043,
											"end": 4055,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4043,
											"end": 4055,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4036,
											"end": 4076,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4105,
											"end": 4109,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4096,
											"end": 4110,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4096,
											"end": 4110,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4096,
											"end": 4110,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4096,
											"end": 4110,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4133,
											"end": 4148,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4133,
											"end": 4148,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4133,
											"end": 4148,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4133,
											"end": 4148,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3886,
											"end": 3887,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3743,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "316"
										},
										{
											"begin": 3743,
											"end": 4158,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3743,
											"end": 4158,
											"name": "tag",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 3743,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4175,
											"end": 4178,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 3225,
											"end": 4184,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4189,
											"end": 4597,
											"name": "tag",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 4189,
											"end": 4597,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4391,
											"end": 4393,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4394,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4373,
											"end": 4394,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4373,
											"end": 4394,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4430,
											"end": 4432,
											"name": "PUSH",
											"source": 17,
											"value": "2C"
										},
										{
											"begin": 4410,
											"end": 4428,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4428,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4428,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4403,
											"end": 4433,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "662A7BA1D8FB60BEFF3D02117181416EB800676FA4D6F1EBC4C3FEA5CD79EC88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4464,
											"end": 4466,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4449,
											"end": 4467,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4449,
											"end": 4467,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4442,
											"end": 4504,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4520,
											"end": 4538,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4513,
											"end": 4555,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4587,
											"end": 4590,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4572,
											"end": 4591,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4572,
											"end": 4591,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4189,
											"end": 4597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4602,
											"end": 5010,
											"name": "tag",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 4602,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4804,
											"end": 4806,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4786,
											"end": 4807,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4786,
											"end": 4807,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4786,
											"end": 4807,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 17,
											"value": "2C"
										},
										{
											"begin": 4823,
											"end": 4841,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4823,
											"end": 4841,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4823,
											"end": 4841,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4816,
											"end": 4846,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "662A7BA1D8FB60BEFF3D02117181416EB800676FA4D6F1EBC4C3FEA5CD79EC88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4877,
											"end": 4879,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4862,
											"end": 4880,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4917,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6163746976652070726F7879"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4948,
											"end": 4950,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4926,
											"end": 4968,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5000,
											"end": 5003,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4985,
											"end": 5004,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4985,
											"end": 5004,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4602,
											"end": 5010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6054,
											"end": 7520,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 6054,
											"end": 7520,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6179,
											"end": 6185,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6212,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6241,
											"end": 6250,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6232,
											"end": 6239,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6228,
											"end": 6251,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6224,
											"end": 6256,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6221,
											"end": 6273,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6221,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 6221,
											"end": 6273,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6269,
											"end": 6270,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6259,
											"end": 6271,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6221,
											"end": 6273,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 6221,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6296,
											"end": 6312,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6296,
											"end": 6312,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6361,
											"end": 6375,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6358,
											"end": 6392,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6358,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 6358,
											"end": 6392,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6388,
											"end": 6389,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6385,
											"end": 6386,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6378,
											"end": 6390,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6358,
											"end": 6392,
											"name": "tag",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 6358,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6426,
											"end": 6432,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6415,
											"end": 6424,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6411,
											"end": 6433,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6401,
											"end": 6433,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6401,
											"end": 6433,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6471,
											"end": 6478,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 6460,
											"end": 6462,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6456,
											"end": 6469,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6452,
											"end": 6479,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6442,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 6442,
											"end": 6497,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6493,
											"end": 6494,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6490,
											"end": 6491,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6483,
											"end": 6495,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6442,
											"end": 6497,
											"name": "tag",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 6442,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6522,
											"end": 6524,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6516,
											"end": 6525,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6544,
											"end": 6546,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6540,
											"end": 6542,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6537,
											"end": 6547,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6534,
											"end": 6570,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6534,
											"end": 6570,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 6534,
											"end": 6570,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 6550,
											"end": 6568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 6622,
											"end": 6624,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6617,
											"end": 6619,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6614,
											"end": 6615,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 6610,
											"end": 6620,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 6606,
											"end": 6625,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 6590,
											"end": 6626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6590,
											"end": 6626,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 6590,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6660,
											"end": 6675,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6660,
											"end": 6675,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6660,
											"end": 6675,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6691,
											"end": 6703,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6691,
											"end": 6703,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6691,
											"end": 6703,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6691,
											"end": 6703,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6742,
											"end": 6743,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 6738,
											"end": 6748,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6738,
											"end": 6748,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6738,
											"end": 6748,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6738,
											"end": 6748,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6730,
											"end": 6749,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6726,
											"end": 6754,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6726,
											"end": 6754,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6726,
											"end": 6754,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6766,
											"end": 6785,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6766,
											"end": 6785,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6766,
											"end": 6785,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6763,
											"end": 6802,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6763,
											"end": 6802,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 6763,
											"end": 6802,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6798,
											"end": 6799,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6795,
											"end": 6796,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6788,
											"end": 6800,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6763,
											"end": 6802,
											"name": "tag",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 6763,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 6833,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 6833,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 6833,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6822,
											"end": 6833,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6842,
											"end": 7490,
											"name": "tag",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 6842,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6858,
											"end": 6864,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6853,
											"end": 6856,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6850,
											"end": 6865,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 6842,
											"end": 7490,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6842,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 6842,
											"end": 7490,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6940,
											"end": 6944,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 6934,
											"end": 6937,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6925,
											"end": 6932,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 6921,
											"end": 6938,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6917,
											"end": 6945,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6914,
											"end": 7032,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6914,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 6914,
											"end": 7032,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6986,
											"end": 6987,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7015,
											"end": 7017,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7011,
											"end": 7013,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7004,
											"end": 7018,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6914,
											"end": 7032,
											"name": "tag",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 6914,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7058,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 7058,
											"end": 7080,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 7058,
											"end": 7080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7058,
											"end": 7080,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 7058,
											"end": 7080,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7114,
											"end": 7117,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7108,
											"end": 7118,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7131,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 7156,
											"end": 7163,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7131,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 7131,
											"end": 7164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7131,
											"end": 7164,
											"name": "tag",
											"source": 17,
											"value": "337"
										},
										{
											"begin": 7131,
											"end": 7164,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7177,
											"end": 7199,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7177,
											"end": 7199,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7241,
											"end": 7253,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7241,
											"end": 7253,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7241,
											"end": 7253,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7235,
											"end": 7254,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7219,
											"end": 7233,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7219,
											"end": 7233,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7219,
											"end": 7233,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7212,
											"end": 7255,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7278,
											"end": 7280,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7322,
											"end": 7334,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7316,
											"end": 7335,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7300,
											"end": 7314,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7300,
											"end": 7314,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7300,
											"end": 7314,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7293,
											"end": 7336,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7359,
											"end": 7361,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7403,
											"end": 7415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7403,
											"end": 7415,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 7403,
											"end": 7415,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7397,
											"end": 7416,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7381,
											"end": 7395,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7374,
											"end": 7417,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7430,
											"end": 7448,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6884,
											"end": 6888,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 6875,
											"end": 6889,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6875,
											"end": 6889,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6875,
											"end": 6889,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6875,
											"end": 6889,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7468,
											"end": 7480,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6842,
											"end": 7490,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 6842,
											"end": 7490,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6842,
											"end": 7490,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 6842,
											"end": 7490,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7509,
											"end": 7514,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 6054,
											"end": 7520,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6054,
											"end": 7520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7652,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 7525,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7586,
											"end": 7596,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 7581,
											"end": 7584,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 7577,
											"end": 7597,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7567,
											"end": 7598,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7617,
											"end": 7621,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 7614,
											"end": 7615,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7607,
											"end": 7622,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7641,
											"end": 7645,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7638,
											"end": 7639,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7646,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7657,
											"end": 7785,
											"name": "tag",
											"source": 17,
											"value": "158"
										},
										{
											"begin": 7657,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7724,
											"end": 7733,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7724,
											"end": 7733,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7724,
											"end": 7733,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7745,
											"end": 7756,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7745,
											"end": 7756,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7745,
											"end": 7756,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7742,
											"end": 7779,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7742,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 7742,
											"end": 7779,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7759,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 7759,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 7759,
											"end": 7777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7790,
											"end": 7915,
											"name": "tag",
											"source": 17,
											"value": "160"
										},
										{
											"begin": 7790,
											"end": 7915,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7855,
											"end": 7864,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7855,
											"end": 7864,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7855,
											"end": 7864,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7876,
											"end": 7886,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7873,
											"end": 7909,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7873,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 7873,
											"end": 7909,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 7889,
											"end": 7907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7920,
											"end": 8047,
											"name": "tag",
											"source": 17,
											"value": "173"
										},
										{
											"begin": 7920,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7981,
											"end": 7991,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 7972,
											"end": 7992,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7962,
											"end": 7993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8012,
											"end": 8016,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 8009,
											"end": 8010,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8017,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8036,
											"end": 8040,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8033,
											"end": 8034,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8041,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8052,
											"end": 8187,
											"name": "tag",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 8052,
											"end": 8187,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8091,
											"end": 8094,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8129,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8112,
											"end": 8129,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8112,
											"end": 8129,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8109,
											"end": 8152,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 8109,
											"end": 8152,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 8132,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "tag",
											"source": 17,
											"value": "348"
										},
										{
											"begin": 8132,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8179,
											"end": 8180,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 8168,
											"end": 8181,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8168,
											"end": 8181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8052,
											"end": 8187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8599,
											"end": 8783,
											"name": "tag",
											"source": 17,
											"value": "206"
										},
										{
											"begin": 8599,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8669,
											"end": 8675,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8722,
											"end": 8724,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8710,
											"end": 8719,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8701,
											"end": 8708,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8697,
											"end": 8720,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8693,
											"end": 8725,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8742,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 8690,
											"end": 8742,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8738,
											"end": 8739,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8736,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8728,
											"end": 8740,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8690,
											"end": 8742,
											"name": "tag",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 8690,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8761,
											"end": 8777,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8761,
											"end": 8777,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8599,
											"end": 8783,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8599,
											"end": 8783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9974,
											"end": 10381,
											"name": "tag",
											"source": 17,
											"value": "231"
										},
										{
											"begin": 9974,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10176,
											"end": 10178,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10158,
											"end": 10179,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10158,
											"end": 10179,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10158,
											"end": 10179,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10215,
											"end": 10217,
											"name": "PUSH",
											"source": 17,
											"value": "2B"
										},
										{
											"begin": 10195,
											"end": 10213,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10195,
											"end": 10213,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10195,
											"end": 10213,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10188,
											"end": 10218,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10254,
											"end": 10288,
											"name": "PUSH",
											"source": 17,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 10249,
											"end": 10251,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10227,
											"end": 10289,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10320,
											"end": 10322,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 10305,
											"end": 10323,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10305,
											"end": 10323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10298,
											"end": 10339,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10371,
											"end": 10374,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 10356,
											"end": 10375,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10356,
											"end": 10375,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9974,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11207,
											"end": 11457,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 11207,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11302,
											"end": 11415,
											"name": "tag",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 11302,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11316,
											"end": 11322,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11313,
											"end": 11314,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11310,
											"end": 11323,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 11302,
											"end": 11415,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11302,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 11302,
											"end": 11415,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11392,
											"end": 11403,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11392,
											"end": 11403,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11392,
											"end": 11403,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11386,
											"end": 11404,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11373,
											"end": 11384,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11373,
											"end": 11384,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11373,
											"end": 11384,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11366,
											"end": 11405,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11338,
											"end": 11340,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11331,
											"end": 11341,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11302,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "359"
										},
										{
											"begin": 11302,
											"end": 11415,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11302,
											"end": 11415,
											"name": "tag",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 11302,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11449,
											"end": 11450,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11431,
											"end": 11447,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11431,
											"end": 11447,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11424,
											"end": 11451,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11207,
											"end": 11457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11462,
											"end": 11749,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 11462,
											"end": 11749,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11629,
											"end": 11635,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11623,
											"end": 11636,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11645,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 11704,
											"end": 11710,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11699,
											"end": 11702,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11692,
											"end": 11696,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11684,
											"end": 11690,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11680,
											"end": 11697,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11645,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 11645,
											"end": 11711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11645,
											"end": 11711,
											"name": "tag",
											"source": 17,
											"value": "363"
										},
										{
											"begin": 11645,
											"end": 11711,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11727,
											"end": 11743,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11727,
											"end": 11743,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11727,
											"end": 11743,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11727,
											"end": 11743,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11727,
											"end": 11743,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11462,
											"end": 11749,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11462,
											"end": 11749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11754,
											"end": 12150,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 11754,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11903,
											"end": 11905,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11892,
											"end": 11901,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11885,
											"end": 11906,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11866,
											"end": 11870,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11935,
											"end": 11941,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11929,
											"end": 11942,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11978,
											"end": 11984,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11973,
											"end": 11975,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11962,
											"end": 11971,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11958,
											"end": 11976,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11951,
											"end": 11985,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11994,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 12066,
											"end": 12072,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12061,
											"end": 12063,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12050,
											"end": 12059,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12046,
											"end": 12064,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12041,
											"end": 12043,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12033,
											"end": 12039,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12029,
											"end": 12044,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11994,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 11994,
											"end": 12073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11994,
											"end": 12073,
											"name": "tag",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 11994,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12134,
											"end": 12136,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 12113,
											"end": 12128,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12109,
											"end": 12138,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 12094,
											"end": 12139,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12094,
											"end": 12139,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12094,
											"end": 12139,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12094,
											"end": 12139,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12141,
											"end": 12143,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12090,
											"end": 12144,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12090,
											"end": 12144,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 11754,
											"end": 12150,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11754,
											"end": 12150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									],
									".data": {
										"662A7BA1D8FB60BEFF3D02117181416EB800676FA4D6F1EBC4C3FEA5CD79EC88": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"contracts/MMEXT.sol",
								"contracts/interface/IMMStore.sol",
								"lib/BokkyPooBahsDateTimeLibrary.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
								"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MMstore()": "8a1e0a17",
							"NoOrder(uint256)": "08e277c1",
							"changeMmstore(address)": "661a5614",
							"claimOrderArr(uint256)": "cb82ab19",
							"getNoOrderRewardBy()": "f64387a7",
							"getNoOrderRewardByIndex(uint256,uint256)": "d05a38d7",
							"initialize(address)": "c4d66de8",
							"machineArr(uint256)": "f2782d6d",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"transferMaxOrder(uint256)": "4469ed13",
							"transferOwnership(address)": "f2fde38b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MMstore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"NoOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_store\",\"type\":\"address\"}],\"name\":\"changeMmstore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"claimOrderArr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"orderType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNoOrderRewardBy\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IMMStore.TransferOrder[]\",\"name\":\"NoOrderReward\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"name\":\"getNoOrderRewardByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IMMStore.TransferOrder[]\",\"name\":\"NoOrderReward\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_store\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"machineArr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"computingPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferMaxOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MMEXT.sol\":\"MMEXT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/MMEXT.sol\":{\"keccak256\":\"0x425879a64e1df4d4745a4c4589e466611c68f2f25770b206eba2593dd2de66de\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5b06406cdcf7650819bca64184b1d9d9317b27e03999daeae65ec7f210d9400\",\"dweb:/ipfs/QmPBZDwdzacdZMCuvuCXoCWwZ3SCTGtWtZbKG4PgdacNDo\"]},\"contracts/interface/IMMStore.sol\":{\"keccak256\":\"0x8d5805c70715326d915737d535921bc2dab8bcfee4b9f87e871ccce48374e53f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://63a38eb391b16a55bb9e2f20d8ece72c84791f8fead9e27fecdd06248c8c21aa\",\"dweb:/ipfs/QmXLCb7YyfPSScc47jejMP5uteCYqfSoEZe79ZykM3emK2\"]},\"lib/BokkyPooBahsDateTimeLibrary.sol\":{\"keccak256\":\"0x6148dd7163d9f93f851984b90cd9262d75a36406680c01a5d4e1f75ea48ba44e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc10a9f17a39a09b3e85d044cdecbec71557192be815d0c69ac6e1c3507bc51\",\"dweb:/ipfs/QmSHDAmmP78m7rVtr3aQiKPMiDNbYb3FetFaGtuXnHsB2u\"]},\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1145,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1148,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1846,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 621,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 741,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1127,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1442,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 172,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "MMstore",
								"offset": 0,
								"slot": "201",
								"type": "t_address"
							},
							{
								"astId": 176,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "machineArr",
								"offset": 0,
								"slot": "202",
								"type": "t_array(t_struct(MiningMachine)314_storage)dyn_storage"
							},
							{
								"astId": 180,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "claimOrderArr",
								"offset": 0,
								"slot": "203",
								"type": "t_array(t_struct(ClaimOrder)323_storage)dyn_storage"
							},
							{
								"astId": 184,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "NoOrder",
								"offset": 0,
								"slot": "204",
								"type": "t_array(t_struct(TransferOrder)332_storage)dyn_storage"
							},
							{
								"astId": 188,
								"contract": "contracts/MMEXT.sol:MMEXT",
								"label": "transferMaxOrder",
								"offset": 0,
								"slot": "205",
								"type": "t_array(t_struct(TransferOrder)332_storage)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(ClaimOrder)323_storage)dyn_storage": {
								"base": "t_struct(ClaimOrder)323_storage",
								"encoding": "dynamic_array",
								"label": "struct IMMStore.ClaimOrder[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(MiningMachine)314_storage)dyn_storage": {
								"base": "t_struct(MiningMachine)314_storage",
								"encoding": "dynamic_array",
								"label": "struct IMMStore.MiningMachine[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(TransferOrder)332_storage)dyn_storage": {
								"base": "t_struct(TransferOrder)332_storage",
								"encoding": "dynamic_array",
								"label": "struct IMMStore.TransferOrder[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_struct(ClaimOrder)323_storage": {
								"encoding": "inplace",
								"label": "struct IMMStore.ClaimOrder",
								"members": [
									{
										"astId": 316,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 318,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 320,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "orderType",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 322,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "createTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(MiningMachine)314_storage": {
								"encoding": "inplace",
								"label": "struct IMMStore.MiningMachine",
								"members": [
									{
										"astId": 307,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 309,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "computingPower",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 311,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "createTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 313,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "lastTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(TransferOrder)332_storage": {
								"encoding": "inplace",
								"label": "struct IMMStore.TransferOrder",
								"members": [
									{
										"astId": 325,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 327,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 329,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "number",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 331,
										"contract": "contracts/MMEXT.sol:MMEXT",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MMSTORE": {
					"abi": [
						{
							"inputs": [],
							"name": "getNoOrderRewardArr",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "number",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct IMMStore.TransferOrder[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "transferNoOrder",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "user",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "number",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										}
									],
									"internalType": "struct IMMStore.TransferOrder[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getNoOrderRewardArr()": "18d36b15",
							"transferNoOrder()": "47908f2f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getNoOrderRewardArr\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IMMStore.TransferOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferNoOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct IMMStore.TransferOrder[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MMEXT.sol\":\"MMSTORE\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/MMEXT.sol\":{\"keccak256\":\"0x425879a64e1df4d4745a4c4589e466611c68f2f25770b206eba2593dd2de66de\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e5b06406cdcf7650819bca64184b1d9d9317b27e03999daeae65ec7f210d9400\",\"dweb:/ipfs/QmPBZDwdzacdZMCuvuCXoCWwZ3SCTGtWtZbKG4PgdacNDo\"]},\"contracts/interface/IMMStore.sol\":{\"keccak256\":\"0x8d5805c70715326d915737d535921bc2dab8bcfee4b9f87e871ccce48374e53f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://63a38eb391b16a55bb9e2f20d8ece72c84791f8fead9e27fecdd06248c8c21aa\",\"dweb:/ipfs/QmXLCb7YyfPSScc47jejMP5uteCYqfSoEZe79ZykM3emK2\"]},\"lib/BokkyPooBahsDateTimeLibrary.sol\":{\"keccak256\":\"0x6148dd7163d9f93f851984b90cd9262d75a36406680c01a5d4e1f75ea48ba44e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc10a9f17a39a09b3e85d044cdecbec71557192be815d0c69ac6e1c3507bc51\",\"dweb:/ipfs/QmSHDAmmP78m7rVtr3aQiKPMiDNbYb3FetFaGtuXnHsB2u\"]},\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IMMStore.sol": {
				"IMMStore": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IMMStore.sol\":\"IMMStore\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/interface/IMMStore.sol\":{\"keccak256\":\"0x8d5805c70715326d915737d535921bc2dab8bcfee4b9f87e871ccce48374e53f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://63a38eb391b16a55bb9e2f20d8ece72c84791f8fead9e27fecdd06248c8c21aa\",\"dweb:/ipfs/QmXLCb7YyfPSScc47jejMP5uteCYqfSoEZe79ZykM3emK2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/BokkyPooBahsDateTimeLibrary.sol": {
				"BokkyPooBahsDateTimeLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/BokkyPooBahsDateTimeLibrary.sol\":979:14247  library BokkyPooBahsDateTimeLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/BokkyPooBahsDateTimeLibrary.sol\":979:14247  library BokkyPooBahsDateTimeLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a6b48e37500fb9f476f45a162a33ba76588a44be8124a5c2889fb61be80772fc64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a6b48e37500fb9f476f45a162a33ba76588a44be8124a5c2889fb61be80772fc64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xB4 DUP15 CALLDATACOPY POP 0xF 0xB9 DELEGATECALL PUSH23 0xF45A162A33BA76588A44BE8124A5C2889FB61BE80772FC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "979:13268:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;979:13268:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a6b48e37500fb9f476f45a162a33ba76588a44be8124a5c2889fb61be80772fc64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xB4 DUP15 CALLDATACOPY POP 0xF 0xB9 DELEGATECALL PUSH23 0xF45A162A33BA76588A44BE8124A5C2889FB61BE80772FC PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "979:13268:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_daysToDate(uint256)": "infinite",
								"timestampToDateTime(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 979,
									"end": 14247,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a6b48e37500fb9f476f45a162a33ba76588a44be8124a5c2889fb61be80772fc64736f6c63430008140033",
									".code": [
										{
											"begin": 979,
											"end": 14247,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 979,
											"end": 14247,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 979,
											"end": 14247,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 979,
											"end": 14247,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 979,
											"end": 14247,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 979,
											"end": 14247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 979,
											"end": 14247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 14247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 979,
											"end": 14247,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"contracts/MMEXT.sol",
								"contracts/interface/IMMStore.sol",
								"lib/BokkyPooBahsDateTimeLibrary.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
								"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/BokkyPooBahsDateTimeLibrary.sol\":\"BokkyPooBahsDateTimeLibrary\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/BokkyPooBahsDateTimeLibrary.sol\":{\"keccak256\":\"0x6148dd7163d9f93f851984b90cd9262d75a36406680c01a5d4e1f75ea48ba44e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dc10a9f17a39a09b3e85d044cdecbec71557192be815d0c69ac6e1c3507bc51\",\"dweb:/ipfs/QmSHDAmmP78m7rVtr3aQiKPMiDNbYb3FetFaGtuXnHsB2u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1145,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1148,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1846,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 621,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 741,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"IERC1967Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.9._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.9._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"IERC1822ProxiableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ERC1967UpgradeUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "delegatecall",
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							},
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1145,
								"contract": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1148,
								"contract": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1127,
								"contract": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"IBeaconUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1145,
								"contract": "lib/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1148,
								"contract": "lib/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1145,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1148,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1127,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1442,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xEA DUP13 DUP7 PUSH7 0xB4FB22943A9B0A SWAP10 PUSH8 0x48D875887FE1FACD 0x27 MSIZE 0xF7 0xA8 EQ PUSH19 0xB0DFD71D64736F6C6343000814003300000000 ",
							"sourceMap": "194:8087:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8087:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xEA DUP13 DUP7 PUSH7 0xB4FB22943A9B0A SWAP10 PUSH8 0x48D875887FE1FACD 0x27 MSIZE 0xF7 0xA8 EQ PUSH19 0xB0DFD71D64736F6C6343000814003300000000 ",
							"sourceMap": "194:8087:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033",
									".code": [
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/MMEXT.sol",
								"contracts/interface/IMMStore.sol",
								"lib/BokkyPooBahsDateTimeLibrary.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
								"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1145,
								"contract": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1148,
								"contract": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1846,
								"contract": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1279:2681  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1279:2681  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xAB SLOAD SWAP4 PUSH28 0x85FB5D5C54470BB8DFBEAA303CB1C6CF43F66CDE97F9E2F76A5C3D64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "1279:1402:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1279:1402:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xAB SLOAD SWAP4 PUSH28 0x85FB5D5C54470BB8DFBEAA303CB1C6CF43F66CDE97F9E2F76A5C3D64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "1279:1402:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033",
									".code": [
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"contracts/MMEXT.sol",
								"contracts/interface/IMMStore.sol",
								"lib/BokkyPooBahsDateTimeLibrary.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
								"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":199:2297  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":199:2297  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cc1bfc162dba1abb003d0c1c0cb34ec8dcf86edc998049c4d2939c0b210497da64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cc1bfc162dba1abb003d0c1c0cb34ec8dcf86edc998049c4d2939c0b210497da64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC SHL 0xFC AND 0x2D 0xBA BYTE 0xBB STOP RETURNDATASIZE 0xC SHR 0xC 0xB3 0x4E 0xC8 0xDC 0xF8 PUSH15 0xDC998049C4D2939C0B210497DA6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "199:2098:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;199:2098:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cc1bfc162dba1abb003d0c1c0cb34ec8dcf86edc998049c4d2939c0b210497da64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC SHL 0xFC AND 0x2D 0xBA BYTE 0xBB STOP RETURNDATASIZE 0xC SHR 0xC 0xB3 0x4E 0xC8 0xDC 0xF8 PUSH15 0xDC998049C4D2939C0B210497DA6473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "199:2098:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 199,
									"end": 2297,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc1bfc162dba1abb003d0c1c0cb34ec8dcf86edc998049c4d2939c0b210497da64736f6c63430008140033",
									".code": [
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 199,
											"end": 2297,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"contracts/MMEXT.sol",
								"contracts/interface/IMMStore.sol",
								"lib/BokkyPooBahsDateTimeLibrary.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
								"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol": {
				"ECDSAUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":380:8570  library ECDSAUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":380:8570  library ECDSAUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122039673b34dab943c9d336033d252f866d6a5fb7aadac1f0d279b28ee82181891764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122039673b34dab943c9d336033d252f866d6a5fb7aadac1f0d279b28ee82181891764736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH8 0x3B34DAB943C9D336 SUB RETURNDATASIZE 0x25 0x2F DUP7 PUSH14 0x6A5FB7AADAC1F0D279B28EE82181 DUP10 OR PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "380:8190:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;380:8190:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122039673b34dab943c9d336033d252f866d6a5fb7aadac1f0d279b28ee82181891764736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY PUSH8 0x3B34DAB943C9D336 SUB RETURNDATASIZE 0x25 0x2F DUP7 PUSH14 0x6A5FB7AADAC1F0D279B28EE82181 DUP10 OR PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "380:8190:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_throwError(enum ECDSAUpgradeable.RecoverError)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"toEthSignedMessageHash(bytes memory)": "infinite",
								"toEthSignedMessageHash(bytes32)": "infinite",
								"toTypedDataHash(bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 380,
									"end": 8570,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039673b34dab943c9d336033d252f866d6a5fb7aadac1f0d279b28ee82181891764736f6c63430008140033",
									".code": [
										{
											"begin": 380,
											"end": 8570,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 380,
											"end": 8570,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 380,
											"end": 8570,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 380,
											"end": 8570,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 380,
											"end": 8570,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 380,
											"end": 8570,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 380,
											"end": 8570,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 8570,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 380,
											"end": 8570,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"contracts/MMEXT.sol",
								"contracts/interface/IMMStore.sol",
								"lib/BokkyPooBahsDateTimeLibrary.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
								"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":\"ECDSAUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0x12f297cafe6e2847ae0378502f155654d0764b532a9873c8afe4350950fa7971\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28074f6df7132e83819042a06ef75ae53c88c53c077b8222b9772b780d58bd58\",\"dweb:/ipfs/QmXXwSxWn4XGCy218fn3f2m3UmFNUiroeQ8sCR3vzNU6Wc\"]},\"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12515  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12515  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122098d5637ecb67c198cb8cbca5c1cbc53c65553b37e3552493d1c0c1e9dfb34a6764736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122098d5637ecb67c198cb8cbca5c1cbc53c65553b37e3552493d1c0c1e9dfb34a6764736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD5 PUSH4 0x7ECB67C1 SWAP9 0xCB DUP13 0xBC 0xA5 0xC1 0xCB 0xC5 EXTCODECOPY PUSH6 0x553B37E35524 SWAP4 0xD1 0xC0 0xC1 0xE9 0xDF 0xB3 0x4A PUSH8 0x64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "202:12313:16:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12313:16;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122098d5637ecb67c198cb8cbca5c1cbc53c65553b37e3552493d1c0c1e9dfb34a6764736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xD5 PUSH4 0x7ECB67C1 SWAP9 0xCB DUP13 0xBC 0xA5 0xC1 0xCB 0xC5 EXTCODECOPY PUSH6 0x553B37E35524 SWAP4 0xD1 0xC0 0xC1 0xE9 0xDF 0xB3 0x4A PUSH8 0x64736F6C63430008 EQ STOP CALLER ",
							"sourceMap": "202:12313:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 202,
									"end": 12515,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122098d5637ecb67c198cb8cbca5c1cbc53c65553b37e3552493d1c0c1e9dfb34a6764736f6c63430008140033",
									".code": [
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 202,
											"end": 12515,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"contracts/MMEXT.sol",
								"contracts/interface/IMMStore.sol",
								"lib/BokkyPooBahsDateTimeLibrary.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
								"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MMEXT.sol": {
				"ast": {
					"absolutePath": "contracts/MMEXT.sol",
					"exportedSymbols": {
						"ACCONFIG": [
							147
						],
						"BokkyPooBahsDateTimeLibrary": [
							610
						],
						"ECDSAUpgradeable": [
							2443
						],
						"IACBPair_": [
							68
						],
						"IERC20Upgradeable": [
							1521
						],
						"IMMStore": [
							391
						],
						"IMinePool": [
							76
						],
						"MMEXT": [
							303
						],
						"MMSTORE": [
							164
						],
						"OwnableUpgradeable": [
							742
						],
						"StringsUpgradeable": [
							2082
						],
						"UUPSUpgradeable": [
							1443
						]
					},
					"id": 304,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:0"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "../lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 304,
							"sourceUnit": 2083,
							"src": "76:93:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "StringsUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2082,
										"src": "84:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 304,
							"sourceUnit": 1522,
							"src": "171:97:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1521,
										"src": "179:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "../lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 304,
							"sourceUnit": 1444,
							"src": "271:93:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1443,
										"src": "279:15:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "../lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 304,
							"sourceUnit": 743,
							"src": "366:94:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "OwnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 742,
										"src": "374:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
							"file": "../lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
							"id": 11,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 304,
							"sourceUnit": 2444,
							"src": "462:102:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 10,
										"name": "ECDSAUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2443,
										"src": "470:16:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/BokkyPooBahsDateTimeLibrary.sol",
							"file": "../lib/BokkyPooBahsDateTimeLibrary.sol",
							"id": 13,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 304,
							"sourceUnit": 611,
							"src": "577:83:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 12,
										"name": "BokkyPooBahsDateTimeLibrary",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 610,
										"src": "585:27:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IMMStore.sol",
							"file": "./interface/IMMStore.sol",
							"id": 15,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 304,
							"sourceUnit": 392,
							"src": "706:50:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 14,
										"name": "IMMStore",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 391,
										"src": "714:8:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IACBPair_",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 68,
							"linearizedBaseContracts": [
								68
							],
							"name": "IACBPair_",
							"nameLocation": "772:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "0dfe1681",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "798:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "804:2:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "829:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:9:0"
									},
									"scope": 68,
									"src": "789:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e840427d",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "853:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "868:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "860:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "900:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "892:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:44:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "912:0:0"
									},
									"scope": 68,
									"src": "844:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a1e15411",
									"id": 40,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "simpleSwap",
									"nameLocation": "928:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "947:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "939:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "961:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "953:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "973:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "965:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:44:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1008:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1000:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:19:0"
									},
									"scope": 68,
									"src": "919:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1034:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1047:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1039:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:12:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1074:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1069:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:16:0"
									},
									"scope": 68,
									"src": "1025:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "1100:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1118:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1113:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1113:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "1133:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1128:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1128:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "1149:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1144:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1144:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:48:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1189:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "1184:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1184:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1183:16:0"
									},
									"scope": 68,
									"src": "1091:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1215:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "_reserve0",
												"nameLocation": "1260:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1252:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 60,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "_reserve1",
												"nameLocation": "1279:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1271:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 62,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_blockTimestampLast",
												"nameLocation": "1297:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1290:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 64,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1290:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1251:66:0"
									},
									"scope": 68,
									"src": "1206:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 304,
							"src": "762:565:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMinePool",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 76,
							"linearizedBaseContracts": [
								76
							],
							"name": "IMinePool",
							"nameLocation": "1341:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "f3fef3a3",
									"id": 75,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1367:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1384:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1376:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "1387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:27:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1411:0:0"
									},
									"scope": 76,
									"src": "1358:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 304,
							"src": "1331:84:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ACCONFIG",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 147,
							"linearizedBaseContracts": [
								147
							],
							"name": "ACCONFIG",
							"nameLocation": "1433:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2f48ab7d",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "usdt",
									"nameLocation": "1458:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1462:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 147,
									"src": "1449:47:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dbe55e56",
									"id": 86,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "platformAddress",
									"nameLocation": "1511:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1526:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1551:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1550:9:0"
									},
									"scope": 147,
									"src": "1502:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8f05cdf5",
									"id": 91,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mv",
									"nameLocation": "1575:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1577:2:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "1602:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1601:9:0"
									},
									"scope": 147,
									"src": "1566:45:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "698518e5",
									"id": 96,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapRate",
									"nameLocation": "1626:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1634:2:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1659:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:10:0"
									},
									"scope": 147,
									"src": "1617:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a03cc2a6",
									"id": 101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "buylocked",
									"nameLocation": "1684:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1693:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "1718:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1718:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:7:0"
									},
									"scope": 147,
									"src": "1675:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e9d610e5",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mvCollectionAddress",
									"nameLocation": "1740:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1759:2:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1784:9:0"
									},
									"scope": 147,
									"src": "1731:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e56cfab",
									"id": 111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "techAddress",
									"nameLocation": "1811:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1822:2:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1848:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:0"
									},
									"scope": 147,
									"src": "1802:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95623641",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "marketAddress",
									"nameLocation": "1872:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1911:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1910:9:0"
									},
									"scope": 147,
									"src": "1863:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0b433a12",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimInterval",
									"nameLocation": "1936:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:2:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "1974:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:10:0"
									},
									"scope": 147,
									"src": "1927:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "570ca735",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nameLocation": "1999:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2007:2:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2033:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:9:0"
									},
									"scope": 147,
									"src": "1990:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "602e6623",
									"id": 131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "minePool",
									"nameLocation": "2058:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:2:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "2092:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:9:0"
									},
									"scope": 147,
									"src": "2049:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5bff9787",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acb",
									"nameLocation": "2117:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:2:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "2146:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2145:9:0"
									},
									"scope": 147,
									"src": "2108:47:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5250c9b5",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acbPair",
									"nameLocation": "2171:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2178:2:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "2204:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:9:0"
									},
									"scope": 147,
									"src": "2162:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2d8852ee",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "machineExpireTime",
									"nameLocation": "2229:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2246:2:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2272:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:9:0"
									},
									"scope": 147,
									"src": "2220:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 304,
							"src": "1423:880:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "IMMStore",
										"nameLocations": [
											"2326:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 391,
										"src": "2326:8:0"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "2326:8:0"
								}
							],
							"canonicalName": "MMSTORE",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 164,
							"linearizedBaseContracts": [
								164,
								391
							],
							"name": "MMSTORE",
							"nameLocation": "2315:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18d36b15",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNoOrderRewardArr",
									"nameLocation": "2361:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2380:2:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2405:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IMMStore.TransferOrder[]"
												},
												"typeName": {
													"baseType": {
														"id": 152,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 151,
															"name": "TransferOrder",
															"nameLocations": [
																"2405:13:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 332,
															"src": "2405:13:0"
														},
														"referencedDeclaration": 332,
														"src": "2405:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferOrder_$332_storage_ptr",
															"typeString": "struct IMMStore.TransferOrder"
														}
													},
													"id": 153,
													"nodeType": "ArrayTypeName",
													"src": "2405:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage_ptr",
														"typeString": "struct IMMStore.TransferOrder[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2404:24:0"
									},
									"scope": 164,
									"src": "2352:78:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "47908f2f",
									"id": 163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferNoOrder",
									"nameLocation": "2445:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2460:2:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "2485:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IMMStore.TransferOrder[]"
												},
												"typeName": {
													"baseType": {
														"id": 159,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 158,
															"name": "TransferOrder",
															"nameLocations": [
																"2485:13:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 332,
															"src": "2485:13:0"
														},
														"referencedDeclaration": 332,
														"src": "2485:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferOrder_$332_storage_ptr",
															"typeString": "struct IMMStore.TransferOrder"
														}
													},
													"id": 160,
													"nodeType": "ArrayTypeName",
													"src": "2485:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage_ptr",
														"typeString": "struct IMMStore.TransferOrder[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2484:24:0"
									},
									"scope": 164,
									"src": "2436:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 304,
							"src": "2305:210:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 165,
										"name": "IMMStore",
										"nameLocations": [
											"2535:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 391,
										"src": "2535:8:0"
									},
									"id": 166,
									"nodeType": "InheritanceSpecifier",
									"src": "2535:8:0"
								},
								{
									"baseName": {
										"id": 167,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"2544:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 742,
										"src": "2544:18:0"
									},
									"id": 168,
									"nodeType": "InheritanceSpecifier",
									"src": "2544:18:0"
								},
								{
									"baseName": {
										"id": 169,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"2563:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1443,
										"src": "2563:15:0"
									},
									"id": 170,
									"nodeType": "InheritanceSpecifier",
									"src": "2563:15:0"
								}
							],
							"canonicalName": "MMEXT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 303,
							"linearizedBaseContracts": [
								303,
								1443,
								1128,
								763,
								773,
								742,
								1847,
								1307,
								391
							],
							"name": "MMEXT",
							"nameLocation": "2526:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8a1e0a17",
									"id": 172,
									"mutability": "mutable",
									"name": "MMstore",
									"nameLocation": "2609:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 303,
									"src": "2594:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 171,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2594:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f2782d6d",
									"id": 176,
									"mutability": "mutable",
									"name": "machineArr",
									"nameLocation": "2655:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 303,
									"src": "2632:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_MiningMachine_$314_storage_$dyn_storage",
										"typeString": "struct IMMStore.MiningMachine[]"
									},
									"typeName": {
										"baseType": {
											"id": 174,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 173,
												"name": "MiningMachine",
												"nameLocations": [
													"2632:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 314,
												"src": "2632:13:0"
											},
											"referencedDeclaration": 314,
											"src": "2632:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_MiningMachine_$314_storage_ptr",
												"typeString": "struct IMMStore.MiningMachine"
											}
										},
										"id": 175,
										"nodeType": "ArrayTypeName",
										"src": "2632:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_MiningMachine_$314_storage_$dyn_storage_ptr",
											"typeString": "struct IMMStore.MiningMachine[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cb82ab19",
									"id": 180,
									"mutability": "mutable",
									"name": "claimOrderArr",
									"nameLocation": "2692:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 303,
									"src": "2672:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_ClaimOrder_$323_storage_$dyn_storage",
										"typeString": "struct IMMStore.ClaimOrder[]"
									},
									"typeName": {
										"baseType": {
											"id": 178,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 177,
												"name": "ClaimOrder",
												"nameLocations": [
													"2672:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 323,
												"src": "2672:10:0"
											},
											"referencedDeclaration": 323,
											"src": "2672:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ClaimOrder_$323_storage_ptr",
												"typeString": "struct IMMStore.ClaimOrder"
											}
										},
										"id": 179,
										"nodeType": "ArrayTypeName",
										"src": "2672:12:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_ClaimOrder_$323_storage_$dyn_storage_ptr",
											"typeString": "struct IMMStore.ClaimOrder[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "08e277c1",
									"id": 184,
									"mutability": "mutable",
									"name": "NoOrder",
									"nameLocation": "2735:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 303,
									"src": "2712:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage",
										"typeString": "struct IMMStore.TransferOrder[]"
									},
									"typeName": {
										"baseType": {
											"id": 182,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 181,
												"name": "TransferOrder",
												"nameLocations": [
													"2712:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 332,
												"src": "2712:13:0"
											},
											"referencedDeclaration": 332,
											"src": "2712:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TransferOrder_$332_storage_ptr",
												"typeString": "struct IMMStore.TransferOrder"
											}
										},
										"id": 183,
										"nodeType": "ArrayTypeName",
										"src": "2712:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage_ptr",
											"typeString": "struct IMMStore.TransferOrder[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4469ed13",
									"id": 188,
									"mutability": "mutable",
									"name": "transferMaxOrder",
									"nameLocation": "2772:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 303,
									"src": "2749:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage",
										"typeString": "struct IMMStore.TransferOrder[]"
									},
									"typeName": {
										"baseType": {
											"id": 186,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 185,
												"name": "TransferOrder",
												"nameLocations": [
													"2749:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 332,
												"src": "2749:13:0"
											},
											"referencedDeclaration": 332,
											"src": "2749:13:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TransferOrder_$332_storage_ptr",
												"typeString": "struct IMMStore.TransferOrder"
											}
										},
										"id": 187,
										"nodeType": "ArrayTypeName",
										"src": "2749:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage_ptr",
											"typeString": "struct IMMStore.TransferOrder[]"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2876:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 195,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "2887:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2887:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "2887:16:0"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 198,
														"name": "MMstore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "2925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 199,
														"name": "_store",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2935:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2925:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "2925:16:0"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 192,
												"name": "initializer",
												"nameLocations": [
													"2865:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1209,
												"src": "2865:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2865:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "2829:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "_store",
												"nameLocation": "2849:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "2841:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2839:17:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2876:0:0"
									},
									"scope": 303,
									"src": "2820:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1437
									],
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "3034:2:0",
										"statements": []
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 208,
												"name": "onlyOwner",
												"nameLocations": [
													"3024:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "3024:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3024:9:0"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "2979:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 207,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3015:8:0"
									},
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2997:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2996:9:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3034:0:0"
									},
									"scope": 303,
									"src": "2970:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3112:35:0",
										"statements": [
											{
												"expression": {
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 219,
														"name": "MMstore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3123:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 220,
														"name": "_store",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "3133:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3123:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "3123:16:0"
											}
										]
									},
									"functionSelector": "661a5614",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 216,
												"name": "onlyOwner",
												"nameLocations": [
													"3103:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "3103:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3103:9:0"
										}
									],
									"name": "changeMmstore",
									"nameLocation": "3065:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "_store",
												"nameLocation": "3087:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3079:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:16:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3112:0:0"
									},
									"scope": 303,
									"src": "3056:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "3281:298:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "NoOrderr",
														"nameLocation": "3315:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "3292:31:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IMMStore.TransferOrder[]"
														},
														"typeName": {
															"baseType": {
																"id": 237,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 236,
																	"name": "TransferOrder",
																	"nameLocations": [
																		"3292:13:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 332,
																	"src": "3292:13:0"
																},
																"referencedDeclaration": 332,
																"src": "3292:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferOrder_$332_storage_ptr",
																	"typeString": "struct IMMStore.TransferOrder"
																}
															},
															"id": 238,
															"nodeType": "ArrayTypeName",
															"src": "3292:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage_ptr",
																"typeString": "struct IMMStore.TransferOrder[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 241,
																	"name": "MMstore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 172,
																	"src": "3334:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "MMSTORE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "3326:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_MMSTORE_$164_$",
																	"typeString": "type(contract MMSTORE)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3326:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MMSTORE_$164",
																"typeString": "contract MMSTORE"
															}
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3343:19:0",
														"memberName": "getNoOrderRewardArr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 156,
														"src": "3326:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function () view external returns (struct IMMStore.TransferOrder memory[] memory)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3326:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IMMStore.TransferOrder memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3292:72:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3383:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 285,
														"src": "3375:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 246,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 248,
															"name": "end",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "3392:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 249,
															"name": "start",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "3398:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3392:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3406:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3392:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3375:32:0"
											},
											{
												"expression": {
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 254,
														"name": "NoOrderReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "3418:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IMMStore.TransferOrder memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 259,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "3454:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3434:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (struct IMMStore.TransferOrder memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 256,
																	"nodeType": "UserDefinedTypeName",
																	"pathNode": {
																		"id": 255,
																		"name": "TransferOrder",
																		"nameLocations": [
																			"3438:13:0"
																		],
																		"nodeType": "IdentifierPath",
																		"referencedDeclaration": 332,
																		"src": "3438:13:0"
																	},
																	"referencedDeclaration": 332,
																	"src": "3438:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TransferOrder_$332_storage_ptr",
																		"typeString": "struct IMMStore.TransferOrder"
																	}
																},
																"id": 257,
																"nodeType": "ArrayTypeName",
																"src": "3438:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage_ptr",
																	"typeString": "struct IMMStore.TransferOrder[]"
																}
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3434:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IMMStore.TransferOrder memory[] memory"
														}
													},
													"src": "3418:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IMMStore.TransferOrder memory[] memory"
													}
												},
												"id": 262,
												"nodeType": "ExpressionStatement",
												"src": "3418:43:0"
											},
											{
												"body": {
													"id": 283,
													"nodeType": "Block",
													"src": "3507:65:0",
													"statements": [
														{
															"expression": {
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 273,
																		"name": "NoOrderReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "3522:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IMMStore.TransferOrder memory[] memory"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "3536:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3522:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TransferOrder_$332_memory_ptr",
																		"typeString": "struct IMMStore.TransferOrder memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 276,
																		"name": "NoOrderr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 239,
																		"src": "3541:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct IMMStore.TransferOrder memory[] memory"
																		}
																	},
																	"id": 280,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 277,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 226,
																			"src": "3550:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 278,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 264,
																			"src": "3558:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3550:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3541:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TransferOrder_$332_memory_ptr",
																		"typeString": "struct IMMStore.TransferOrder memory"
																	}
																},
																"src": "3522:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TransferOrder_$332_memory_ptr",
																	"typeString": "struct IMMStore.TransferOrder memory"
																}
															},
															"id": 282,
															"nodeType": "ExpressionStatement",
															"src": "3522:38:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 267,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "3491:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 268,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "3495:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3491:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"initializationExpression": {
													"assignments": [
														264
													],
													"declarations": [
														{
															"constant": false,
															"id": 264,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3484:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 284,
															"src": "3476:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 263,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3476:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 266,
													"initialValue": {
														"hexValue": "30",
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3488:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3476:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3503:3:0",
														"subExpression": {
															"id": 270,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3503:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 272,
													"nodeType": "ExpressionStatement",
													"src": "3503:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3472:100:0"
											}
										]
									},
									"functionSelector": "d05a38d7",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNoOrderRewardByIndex",
									"nameLocation": "3170:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "3202:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3194:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "end",
												"nameLocation": "3216:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3208:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:27:0"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "NoOrderReward",
												"nameLocation": "3266:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3243:36:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IMMStore.TransferOrder[]"
												},
												"typeName": {
													"baseType": {
														"id": 231,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 230,
															"name": "TransferOrder",
															"nameLocations": [
																"3243:13:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 332,
															"src": "3243:13:0"
														},
														"referencedDeclaration": 332,
														"src": "3243:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferOrder_$332_storage_ptr",
															"typeString": "struct IMMStore.TransferOrder"
														}
													},
													"id": 232,
													"nodeType": "ArrayTypeName",
													"src": "3243:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage_ptr",
														"typeString": "struct IMMStore.TransferOrder[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3242:38:0"
									},
									"scope": 303,
									"src": "3161:418:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3680:82:0",
										"statements": [
											{
												"expression": {
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 293,
														"name": "NoOrderReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "3691:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IMMStore.TransferOrder memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 295,
																		"name": "MMstore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "3715:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 294,
																	"name": "MMSTORE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "3707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_MMSTORE_$164_$",
																		"typeString": "type(contract MMSTORE)"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3707:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_MMSTORE_$164",
																	"typeString": "contract MMSTORE"
																}
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3724:19:0",
															"memberName": "getNoOrderRewardArr",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 156,
															"src": "3707:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function () view external returns (struct IMMStore.TransferOrder memory[] memory)"
															}
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3707:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IMMStore.TransferOrder memory[] memory"
														}
													},
													"src": "3691:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IMMStore.TransferOrder memory[] memory"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "3691:54:0"
											}
										]
									},
									"functionSelector": "f64387a7",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNoOrderRewardBy",
									"nameLocation": "3598:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3616:3:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "NoOrderReward",
												"nameLocation": "3665:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3642:36:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IMMStore.TransferOrder[]"
												},
												"typeName": {
													"baseType": {
														"id": 289,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 288,
															"name": "TransferOrder",
															"nameLocations": [
																"3642:13:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 332,
															"src": "3642:13:0"
														},
														"referencedDeclaration": 332,
														"src": "3642:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TransferOrder_$332_storage_ptr",
															"typeString": "struct IMMStore.TransferOrder"
														}
													},
													"id": 290,
													"nodeType": "ArrayTypeName",
													"src": "3642:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TransferOrder_$332_storage_$dyn_storage_ptr",
														"typeString": "struct IMMStore.TransferOrder[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3641:38:0"
									},
									"scope": 303,
									"src": "3589:173:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 304,
							"src": "2517:1265:0",
							"usedErrors": [],
							"usedEvents": [
								627,
								750,
								757,
								762,
								1153
							]
						}
					],
					"src": "40:3747:0"
				},
				"id": 0
			},
			"contracts/interface/IMMStore.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IMMStore.sol",
					"exportedSymbols": {
						"IMMStore": [
							391
						]
					},
					"id": 392,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 305,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMMStore",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": true,
							"id": 391,
							"linearizedBaseContracts": [
								391
							],
							"name": "IMMStore",
							"nameLocation": "82:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IMMStore.MiningMachine",
									"id": 314,
									"members": [
										{
											"constant": false,
											"id": 307,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "140:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "132:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 306,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "132:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 309,
											"mutability": "mutable",
											"name": "computingPower",
											"nameLocation": "163:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "155:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 308,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "155:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 311,
											"mutability": "mutable",
											"name": "createTime",
											"nameLocation": "196:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "188:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "188:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 313,
											"mutability": "mutable",
											"name": "lastTime",
											"nameLocation": "225:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 314,
											"src": "217:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 312,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "217:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MiningMachine",
									"nameLocation": "107:13:1",
									"nodeType": "StructDefinition",
									"scope": 391,
									"src": "100:141:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IMMStore.ClaimOrder",
									"id": 323,
									"members": [
										{
											"constant": false,
											"id": 316,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "285:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 323,
											"src": "277:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 315,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "277:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 318,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "308:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 323,
											"src": "300:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 317,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "300:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 320,
											"mutability": "mutable",
											"name": "orderType",
											"nameLocation": "333:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 323,
											"src": "325:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 319,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "325:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 322,
											"mutability": "mutable",
											"name": "createTime",
											"nameLocation": "354:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 323,
											"src": "346:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 321,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "346:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ClaimOrder",
									"nameLocation": "256:10:1",
									"nodeType": "StructDefinition",
									"scope": 391,
									"src": "249:123:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IMMStore.TransferOrder",
									"id": 332,
									"members": [
										{
											"constant": false,
											"id": 325,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "419:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 332,
											"src": "411:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 324,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "411:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 327,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "442:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 332,
											"src": "434:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 326,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "434:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 329,
											"mutability": "mutable",
											"name": "number",
											"nameLocation": "467:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 332,
											"src": "459:14:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 328,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "459:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 331,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "492:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 332,
											"src": "484:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 330,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "484:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TransferOrder",
									"nameLocation": "387:13:1",
									"nodeType": "StructDefinition",
									"scope": 391,
									"src": "380:129:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IMMStore.User",
									"id": 339,
									"members": [
										{
											"constant": false,
											"id": 334,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "547:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 339,
											"src": "539:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 333,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "539:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 336,
											"mutability": "mutable",
											"name": "ref",
											"nameLocation": "570:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 339,
											"src": "562:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 335,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "562:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 338,
											"mutability": "mutable",
											"name": "registerTime",
											"nameLocation": "592:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 339,
											"src": "584:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 337,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "524:4:1",
									"nodeType": "StructDefinition",
									"scope": 391,
									"src": "517:95:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IMMStore.ClaimedDynReward",
									"id": 348,
									"members": [
										{
											"constant": false,
											"id": 341,
											"mutability": "mutable",
											"name": "ref",
											"nameLocation": "672:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "664:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 340,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "664:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 343,
											"mutability": "mutable",
											"name": "team",
											"nameLocation": "694:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "686:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 342,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "686:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 345,
											"mutability": "mutable",
											"name": "sameLevel",
											"nameLocation": "717:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "709:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 344,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "709:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 347,
											"mutability": "mutable",
											"name": "share",
											"nameLocation": "745:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 348,
											"src": "737:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 346,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "737:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ClaimedDynReward",
									"nameLocation": "637:16:1",
									"nodeType": "StructDefinition",
									"scope": 391,
									"src": "630:128:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IMMStore.SuperFomo",
									"id": 359,
									"members": [
										{
											"constant": false,
											"id": 350,
											"mutability": "mutable",
											"name": "countdown",
											"nameLocation": "807:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "799:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 349,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "799:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 352,
											"mutability": "mutable",
											"name": "poolAmount",
											"nameLocation": "835:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "827:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 351,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "827:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "rewardAmount",
											"nameLocation": "864:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "856:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 353,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "856:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 356,
											"mutability": "mutable",
											"name": "totalBurnAmount",
											"nameLocation": "895:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "887:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 355,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "887:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 358,
											"mutability": "mutable",
											"name": "lastUser",
											"nameLocation": "929:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 359,
											"src": "921:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 357,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "921:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SuperFomo",
									"nameLocation": "779:9:1",
									"nodeType": "StructDefinition",
									"scope": 391,
									"src": "772:173:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IMMStore.MaxOrderReward",
									"id": 370,
									"members": [
										{
											"constant": false,
											"id": 361,
											"mutability": "mutable",
											"name": "countdown",
											"nameLocation": "996:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 370,
											"src": "988:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 360,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "988:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 363,
											"mutability": "mutable",
											"name": "poolAmount",
											"nameLocation": "1024:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 370,
											"src": "1016:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 362,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1016:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 365,
											"mutability": "mutable",
											"name": "rewardAmount",
											"nameLocation": "1053:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 370,
											"src": "1045:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 364,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1045:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 367,
											"mutability": "mutable",
											"name": "maxComputingPower",
											"nameLocation": "1084:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 370,
											"src": "1076:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 366,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1076:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "maxOrderUser",
											"nameLocation": "1120:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 370,
											"src": "1112:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 368,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1112:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MaxOrderReward",
									"nameLocation": "962:14:1",
									"nodeType": "StructDefinition",
									"scope": 391,
									"src": "955:185:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IMMStore.MachineReward",
									"id": 381,
									"members": [
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "pendingReward",
											"nameLocation": "1191:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 381,
											"src": "1183:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 371,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1183:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 374,
											"mutability": "mutable",
											"name": "pendingRebate",
											"nameLocation": "1223:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 381,
											"src": "1215:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 373,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1215:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 376,
											"mutability": "mutable",
											"name": "claimedReward",
											"nameLocation": "1255:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 381,
											"src": "1247:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 375,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1247:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 378,
											"mutability": "mutable",
											"name": "rebatedReward",
											"nameLocation": "1287:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 381,
											"src": "1279:21:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 377,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1279:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 380,
											"mutability": "mutable",
											"name": "canClaim",
											"nameLocation": "1316:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 381,
											"src": "1311:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 379,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1311:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MachineReward",
									"nameLocation": "1159:13:1",
									"nodeType": "StructDefinition",
									"scope": 391,
									"src": "1152:180:1",
									"visibility": "public"
								},
								{
									"canonicalName": "IMMStore.MachineResponse",
									"id": 390,
									"members": [
										{
											"constant": false,
											"id": 383,
											"mutability": "mutable",
											"name": "computingPower",
											"nameLocation": "1380:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1372:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 382,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1372:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 385,
											"mutability": "mutable",
											"name": "createTime",
											"nameLocation": "1413:10:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1405:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 384,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1405:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 387,
											"mutability": "mutable",
											"name": "countdown",
											"nameLocation": "1435:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1427:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 386,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1427:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 389,
											"mutability": "mutable",
											"name": "lastTime",
											"nameLocation": "1456:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 390,
											"src": "1448:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 388,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1448:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MachineResponse",
									"nameLocation": "1345:15:1",
									"nodeType": "StructDefinition",
									"scope": 391,
									"src": "1338:134:1",
									"visibility": "public"
								}
							],
							"scope": 392,
							"src": "72:1411:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "42:1441:1"
				},
				"id": 1
			},
			"lib/BokkyPooBahsDateTimeLibrary.sol": {
				"ast": {
					"absolutePath": "lib/BokkyPooBahsDateTimeLibrary.sol",
					"exportedSymbols": {
						"BokkyPooBahsDateTimeLibrary": [
							610
						]
					},
					"id": 611,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 393,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BokkyPooBahsDateTimeLibrary",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 610,
							"linearizedBaseContracts": [
								610
							],
							"name": "BokkyPooBahsDateTimeLibrary",
							"nameLocation": "987:27:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 400,
									"mutability": "constant",
									"name": "SECONDS_PER_DAY",
									"nameLocation": "1038:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "1024:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 394,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1024:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"id": 399,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1440_by_1",
												"typeString": "int_const 1440"
											},
											"id": 397,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3234",
												"id": 395,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1056:2:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_24_by_1",
													"typeString": "int_const 24"
												},
												"value": "24"
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"hexValue": "3630",
												"id": 396,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1061:2:2",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_60_by_1",
													"typeString": "int_const 60"
												},
												"value": "60"
											},
											"src": "1056:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1440_by_1",
												"typeString": "int_const 1440"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3630",
											"id": 398,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1066:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"src": "1056:12:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 405,
									"mutability": "constant",
									"name": "SECONDS_PER_HOUR",
									"nameLocation": "1089:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "1075:40:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 401,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1075:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"id": 404,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3630",
											"id": 402,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1108:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3630",
											"id": 403,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1113:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_60_by_1",
												"typeString": "int_const 60"
											},
											"value": "60"
										},
										"src": "1108:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 408,
									"mutability": "constant",
									"name": "SECONDS_PER_MINUTE",
									"nameLocation": "1136:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "1122:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 406,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1122:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3630",
										"id": 407,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1157:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "60"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 411,
									"mutability": "constant",
									"name": "OFFSET19700101",
									"nameLocation": "1179:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "1166:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int256",
										"typeString": "int256"
									},
									"typeName": {
										"id": 409,
										"name": "int",
										"nodeType": "ElementaryTypeName",
										"src": "1166:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_int256",
											"typeString": "int256"
										}
									},
									"value": {
										"hexValue": "32343430353838",
										"id": 410,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1196:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2440588_by_1",
											"typeString": "int_const 2440588"
										},
										"value": "2440588"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "3550:533:2",
										"statements": [
											{
												"assignments": [
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "__days",
														"nameLocation": "3565:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "3561:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 422,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3561:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"arguments": [
														{
															"id": 426,
															"name": "_days",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "3578:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3574:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 424,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3574:3:2",
															"typeDescriptions": {}
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3574:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3561:23:2"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "L",
														"nameLocation": "3601:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "3597:5:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 429,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3597:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 436,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 431,
															"name": "__days",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3605:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3638353639",
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3614:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_68569_by_1",
																"typeString": "int_const 68569"
															},
															"value": "68569"
														},
														"src": "3605:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 434,
														"name": "OFFSET19700101",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "3622:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3605:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3597:39:2"
											},
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "N",
														"nameLocation": "3651:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "3647:5:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 437,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3647:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "34",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3655:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 440,
															"name": "L",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "3659:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3655:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313436303937",
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3663:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_146097_by_1",
															"typeString": "int_const 146097"
														},
														"value": "146097"
													},
													"src": "3655:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3647:22:2"
											},
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 445,
														"name": "L",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3680:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 446,
															"name": "L",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "3684:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313436303937",
																				"id": 447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3689:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_146097_by_1",
																					"typeString": "int_const 146097"
																				},
																				"value": "146097"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 448,
																				"name": "N",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 438,
																				"src": "3698:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "3689:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3702:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"src": "3689:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3688:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "34",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3707:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"src": "3688:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3684:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3680:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "3680:28:2"
											},
											{
												"assignments": [
													459
												],
												"declarations": [
													{
														"constant": false,
														"id": 459,
														"mutability": "mutable",
														"name": "_year",
														"nameLocation": "3723:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "3719:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 458,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3719:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 468,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "34303030",
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3731:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4000_by_1",
																"typeString": "int_const 4000"
															},
															"value": "4000"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 461,
																		"name": "L",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "3739:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3743:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3739:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"id": 464,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3738:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3731:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31343631303031",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3748:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1461001_by_1",
															"typeString": "int_const 1461001"
														},
														"value": "1461001"
													},
													"src": "3731:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3719:36:2"
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 469,
														"name": "L",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3766:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 470,
																"name": "L",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "3770:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "31343631",
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3774:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1461_by_1",
																			"typeString": "int_const 1461"
																		},
																		"value": "1461"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 472,
																		"name": "_year",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 459,
																		"src": "3781:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "3774:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3789:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "3774:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3770:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3331",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3793:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_31_by_1",
																"typeString": "int_const 31"
															},
															"value": "31"
														},
														"src": "3770:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3766:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "3766:29:2"
											},
											{
												"assignments": [
													482
												],
												"declarations": [
													{
														"constant": false,
														"id": 482,
														"mutability": "mutable",
														"name": "_month",
														"nameLocation": "3810:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "3806:10:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 481,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3806:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3830",
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3819:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_80_by_1",
																"typeString": "int_const 80"
															},
															"value": "80"
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 484,
															"name": "L",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "3824:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3819:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32343437",
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3828:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2447_by_1",
															"typeString": "int_const 2447"
														},
														"value": "2447"
													},
													"src": "3819:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3806:26:2"
											},
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "_day",
														"nameLocation": "3847:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "3843:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 489,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "3843:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 498,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 491,
														"name": "L",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3854:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32343437",
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3858:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2447_by_1",
																	"typeString": "int_const 2447"
																},
																"value": "2447"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 493,
																"name": "_month",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "3865:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3858:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3830",
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3874:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_80_by_1",
																"typeString": "int_const 80"
															},
															"value": "80"
														},
														"src": "3858:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3854:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3843:33:2"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 499,
														"name": "L",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "3887:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 500,
															"name": "_month",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "3891:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3131",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3900:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_11_by_1",
																"typeString": "int_const 11"
															},
															"value": "11"
														},
														"src": "3891:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3887:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "3887:15:2"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 505,
														"name": "_month",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "3913:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 506,
																"name": "_month",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "3922:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3931:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "3922:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3132",
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3935:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_12_by_1",
																	"typeString": "int_const 12"
																},
																"value": "12"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 510,
																"name": "L",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "3940:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3935:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3922:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3913:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3913:28:2"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 515,
														"name": "_year",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "3952:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3960:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 517,
																				"name": "N",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 438,
																				"src": "3967:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "3439",
																				"id": 518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3971:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_49_by_1",
																					"typeString": "int_const 49"
																				},
																				"value": "49"
																			},
																			"src": "3967:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 520,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3966:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "3960:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 522,
																"name": "_year",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "3977:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "3960:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 524,
															"name": "L",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "3985:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "3960:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "3952:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "3952:34:2"
											},
											{
												"expression": {
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 528,
														"name": "year",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "3999:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 531,
																"name": "_year",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "4011:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4006:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 529,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4006:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4006:11:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3999:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "3999:18:2"
											},
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 535,
														"name": "month",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "4028:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 538,
																"name": "_month",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 482,
																"src": "4041:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4036:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 536,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4036:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4036:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4028:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "4028:20:2"
											},
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 542,
														"name": "day",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "4059:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 545,
																"name": "_day",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "4070:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 543,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4065:4:2",
																"typeDescriptions": {}
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4059:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "4059:16:2"
											}
										]
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_daysToDate",
									"nameLocation": "3470:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "_days",
												"nameLocation": "3487:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3482:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:12:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "year",
												"nameLocation": "3522:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3517:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3517:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "month",
												"nameLocation": "3533:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3528:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "day",
												"nameLocation": "3545:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3540:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3540:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:33:2"
									},
									"scope": 610,
									"src": "3461:622:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "4915:302:2",
										"statements": [
											{
												"expression": {
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 567,
																"name": "year",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "4927:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 568,
																"name": "month",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 557,
																"src": "4933:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 569,
																"name": "day",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "4940:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 570,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 572,
																	"name": "timestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 552,
																	"src": "4959:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 573,
																	"name": "SECONDS_PER_DAY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "4971:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4959:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 571,
															"name": "_daysToDate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "4947:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256,uint256,uint256)"
															}
														},
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4947:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(uint256,uint256,uint256)"
														}
													},
													"src": "4926:61:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "4926:61:2"
											},
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "secs",
														"nameLocation": "5003:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "4998:9:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 578,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4998:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 583,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 580,
														"name": "timestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "5010:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 581,
														"name": "SECONDS_PER_DAY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "5022:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5010:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4998:39:2"
											},
											{
												"expression": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 584,
														"name": "hour",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 561,
														"src": "5048:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 585,
															"name": "secs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5055:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 586,
															"name": "SECONDS_PER_HOUR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "5062:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5055:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5048:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "5048:30:2"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 590,
														"name": "secs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "5089:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 591,
															"name": "secs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5096:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"id": 592,
															"name": "SECONDS_PER_HOUR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "5103:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5096:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5089:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "5089:30:2"
											},
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 596,
														"name": "minute",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 563,
														"src": "5130:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 597,
															"name": "secs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5139:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 598,
															"name": "SECONDS_PER_MINUTE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "5146:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5139:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5130:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "5130:34:2"
											},
											{
												"expression": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 602,
														"name": "second",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "5175:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 603,
															"name": "secs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5184:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"id": 604,
															"name": "SECONDS_PER_MINUTE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "5191:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5184:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5175:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "5175:34:2"
											}
										]
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "timestampToDateTime",
									"nameLocation": "4786:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4811:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4806:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4806:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4805:16:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "year",
												"nameLocation": "4850:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4845:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4845:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "month",
												"nameLocation": "4861:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4856:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4856:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "day",
												"nameLocation": "4873:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4868:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "hour",
												"nameLocation": "4883:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4878:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4878:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "minute",
												"nameLocation": "4894:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4889:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4889:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "second",
												"nameLocation": "4907:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "4902:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4902:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4844:70:2"
									},
									"scope": 610,
									"src": "4777:440:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 611,
							"src": "979:13268:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:14214:2"
				},
				"id": 2
			},
			"lib/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1805
						],
						"ContextUpgradeable": [
							1847
						],
						"Initializable": [
							1307
						],
						"OwnableUpgradeable": [
							742
						]
					},
					"id": 743,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 612,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:3"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 743,
							"sourceUnit": 1848,
							"src": "127:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 743,
							"sourceUnit": 1308,
							"src": "169:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 616,
										"name": "Initializable",
										"nameLocations": [
											"748:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1307,
										"src": "748:13:3"
									},
									"id": 617,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:3"
								},
								{
									"baseName": {
										"id": 618,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1847,
										"src": "763:18:3"
									},
									"id": 619,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:3"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 615,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 742,
							"linearizedBaseContracts": [
								742,
								1847,
								1307
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 621,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "788:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 620,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 627,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "844:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "875:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:3"
									},
									"src": "817:84:3"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "1055:43:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 633,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "1065:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:3"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:3",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 631,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 630,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "1038:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:3"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:3"
									},
									"scope": 742,
									"src": "1003:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "1166:49:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 643,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "1195:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 642,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "1176:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:3"
											}
										]
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 639,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "1149:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:3"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:3"
									},
									"scope": 742,
									"src": "1104:111:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "1324:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 679,
														"src": "1334:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:3"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:3"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 656,
									"name": "onlyOwner",
									"nameLocation": "1312:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:3"
									},
									"src": "1303:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "1496:30:3",
										"statements": [
											{
												"expression": {
													"id": 662,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 621,
													"src": "1513:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 661,
												"id": 663,
												"nodeType": "Return",
												"src": "1506:13:3"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "1487:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:3"
									},
									"scope": 742,
									"src": "1441:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 678,
										"nodeType": "Block",
										"src": "1644:85:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 670,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 665,
																	"src": "1662:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 672,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1832,
																	"src": "1673:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:3"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 679,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:3"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:3"
									},
									"scope": 742,
									"src": "1599:130:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "2125:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 686,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 685,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "2135:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:3"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 683,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 682,
												"name": "onlyOwner",
												"nameLocations": [
													"2115:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "2115:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:3"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:3"
									},
									"scope": 742,
									"src": "2071:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "2391:128:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 702,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "2409:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 703,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 712,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "2503:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 711,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "2484:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:3"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 699,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 698,
												"name": "onlyOwner",
												"nameLocations": [
													"2381:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "2381:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2348:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:3"
									},
									"scope": 742,
									"src": "2321:198:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "2736:124:3",
										"statements": [
											{
												"assignments": [
													723
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "2746:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 722,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 725,
												"initialValue": {
													"id": 724,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 621,
													"src": "2765:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:3"
											},
											{
												"expression": {
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 726,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "2781:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 727,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 719,
														"src": "2790:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 731,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "2834:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "2844:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 730,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "2813:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "2808:45:3"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "2701:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:3"
									},
									"scope": 742,
									"src": "2673:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 741,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 742,
									"src": "3125:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 738,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 740,
										"length": {
											"hexValue": "3439",
											"id": 739,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 743,
							"src": "708:2445:3",
							"usedErrors": [],
							"usedEvents": [
								627,
								1153
							]
						}
					],
					"src": "102:3052:3"
				},
				"id": 3
			},
			"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
					"exportedSymbols": {
						"IERC1967Upgradeable": [
							763
						]
					},
					"id": 764,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 744,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 745,
								"nodeType": "StructuredDocumentation",
								"src": "132:131:4",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.9._"
							},
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763
							],
							"name": "IERC1967Upgradeable",
							"nameLocation": "274:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "300:68:4",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 750,
									"name": "Upgraded",
									"nameLocation": "379:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "404:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "388:30:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:32:4"
									},
									"src": "373:47:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "426:67:4",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 757,
									"name": "AdminChanged",
									"nameLocation": "504:12:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "525:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "517:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "548:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "540:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:41:4"
									},
									"src": "498:60:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "564:59:4",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 762,
									"name": "BeaconUpgraded",
									"nameLocation": "634:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "665:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "649:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:24:4"
									},
									"src": "628:45:4"
								}
							],
							"scope": 764,
							"src": "264:411:4",
							"usedErrors": [],
							"usedEvents": [
								750,
								757,
								762
							]
						}
					],
					"src": "107:569:4"
				},
				"id": 4
			},
			"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
					"exportedSymbols": {
						"IERC1822ProxiableUpgradeable": [
							773
						]
					},
					"id": 774,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822ProxiableUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 766,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:5",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 773,
							"linearizedBaseContracts": [
								773
							],
							"name": "IERC1822ProxiableUpgradeable",
							"nameLocation": "352:28:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "387:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 772,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "839:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:5"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "878:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 769,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:5"
									},
									"scope": 773,
									"src": "830:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 774,
							"src": "342:547:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:777:5"
				},
				"id": 5
			},
			"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1805
						],
						"ERC1967UpgradeUpgradeable": [
							1128
						],
						"IBeaconUpgradeable": [
							1138
						],
						"IERC1822ProxiableUpgradeable": [
							773
						],
						"IERC1967Upgradeable": [
							763
						],
						"Initializable": [
							1307
						],
						"StorageSlotUpgradeable": [
							1907
						]
					},
					"id": 1129,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 775,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:6"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
							"file": "../beacon/IBeaconUpgradeable.sol",
							"id": 776,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1129,
							"sourceUnit": 1139,
							"src": "141:42:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
							"file": "../../interfaces/IERC1967Upgradeable.sol",
							"id": 777,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1129,
							"sourceUnit": 764,
							"src": "184:50:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 778,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1129,
							"sourceUnit": 774,
							"src": "235:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 779,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1129,
							"sourceUnit": 1806,
							"src": "292:44:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
							"file": "../../utils/StorageSlotUpgradeable.sol",
							"id": 780,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1129,
							"sourceUnit": 1908,
							"src": "337:48:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../utils/Initializable.sol",
							"id": 781,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1129,
							"sourceUnit": 1308,
							"src": "386:36:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 783,
										"name": "Initializable",
										"nameLocations": [
											"708:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1307,
										"src": "708:13:6"
									},
									"id": 784,
									"nodeType": "InheritanceSpecifier",
									"src": "708:13:6"
								},
								{
									"baseName": {
										"id": 785,
										"name": "IERC1967Upgradeable",
										"nameLocations": [
											"723:19:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 763,
										"src": "723:19:6"
									},
									"id": 786,
									"nodeType": "InheritanceSpecifier",
									"src": "723:19:6"
								}
							],
							"canonicalName": "ERC1967UpgradeUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 782,
								"nodeType": "StructuredDocumentation",
								"src": "424:236:6",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"
							},
							"fullyImplemented": true,
							"id": 1128,
							"linearizedBaseContracts": [
								1128,
								763,
								1307
							],
							"name": "ERC1967UpgradeUpgradeable",
							"nameLocation": "679:25:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "808:7:6",
										"statements": []
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 789,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 788,
												"name": "onlyInitializing",
												"nameLocations": [
													"791:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "791:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "791:16:6"
										}
									],
									"name": "__ERC1967Upgrade_init",
									"nameLocation": "758:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:6"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:6"
									},
									"scope": 1128,
									"src": "749:66:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "890:7:6",
										"statements": []
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 795,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 794,
												"name": "onlyInitializing",
												"nameLocations": [
													"873:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "873:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "873:16:6"
										}
									],
									"name": "__ERC1967Upgrade_init_unchained",
									"nameLocation": "830:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "861:2:6"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:0:6"
									},
									"scope": 1128,
									"src": "821:76:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 801,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "1006:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1128,
									"src": "981:108:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 799,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 800,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1023:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "1096:214:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 805,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1341:20:6",
									"nodeType": "VariableDeclaration",
									"scope": 1128,
									"src": "1315:115:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 803,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1315:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 804,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1364:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "1571:89:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 813,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "1626:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 811,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "1588:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1907_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1611:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1873,
															"src": "1588:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1853_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1588:59:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1853_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1648:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1852,
													"src": "1588:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 810,
												"id": 816,
												"nodeType": "Return",
												"src": "1581:72:6"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "1437:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1518:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1536:2:6"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "1562:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1561:9:6"
									},
									"scope": 1128,
									"src": "1509:151:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "1814:218:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 827,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "1862:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 825,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "1832:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1805_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1851:10:6",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1539,
																"src": "1832:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1832:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1882:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1824:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1824:106:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "1824:106:6"
											},
											{
												"expression": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 835,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1978:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 832,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "1940:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1907_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1963:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1873,
																"src": "1940:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1853_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1940:59:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1853_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2000:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1852,
														"src": "1940:65:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 838,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "2008:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1940:85:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "1940:85:6"
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "1666:80:6",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1760:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1787:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1779:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:27:6"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:0:6"
									},
									"scope": 1128,
									"src": "1751:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "2194:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 849,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "2223:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 848,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "2204:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2204:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "2204:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 853,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "2265:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 852,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "2256:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2256:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "EmitStatement",
												"src": "2251:32:6"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "2038:95:6",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2147:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2166:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "2158:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:27:6"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:0:6"
									},
									"scope": 1128,
									"src": "2138:152:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "2552:160:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 868,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "2573:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 867,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "2562:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "2562:29:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 871,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "2605:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2610:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2605:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2619:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2605:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 875,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "2624:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2605:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 883,
												"nodeType": "IfStatement",
												"src": "2601:105:6",
												"trueBody": {
													"id": 882,
													"nodeType": "Block",
													"src": "2635:71:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 878,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 860,
																		"src": "2671:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 879,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "2690:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 877,
																	"name": "_functionDelegateCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "2649:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2649:46:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 881,
															"nodeType": "ExpressionStatement",
															"src": "2649:46:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "2296:123:6",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2433:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2468:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2460:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2508:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2495:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 861,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2495:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2527:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "2522:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 863,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2522:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:92:6"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2552:0:6"
									},
									"scope": 1128,
									"src": "2424:288:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "3016:842:6",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 897,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 801,
																"src": "3368:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 895,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "3330:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1907_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3353:14:6",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1884,
															"src": "3330:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1856_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3330:53:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1856_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3384:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1855,
													"src": "3330:59:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 935,
													"nodeType": "Block",
													"src": "3459:393:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 920,
																		"nodeType": "Block",
																		"src": "3564:115:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 916,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 914,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 911,
																								"src": "3590:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 915,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 805,
																								"src": "3598:20:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3590:28:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 917,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3620:43:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 913,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3582:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 918,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3582:82:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 919,
																				"nodeType": "ExpressionStatement",
																				"src": "3582:82:6"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 921,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 912,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 911,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3558:4:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 921,
																				"src": "3550:12:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 910,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3550:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3549:14:6"
																	},
																	"src": "3541:138:6"
																},
																{
																	"block": {
																		"id": 926,
																		"nodeType": "Block",
																		"src": "3686:89:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 923,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3711:48:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 922,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3704:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 924,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3704:56:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 925,
																				"nodeType": "ExpressionStatement",
																				"src": "3704:56:6"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 927,
																	"nodeType": "TryCatchClause",
																	"src": "3680:95:6"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 906,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "3506:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 905,
																			"name": "IERC1822ProxiableUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 773,
																			"src": "3477:28:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822ProxiableUpgradeable_$773_$",
																				"typeString": "type(contract IERC1822ProxiableUpgradeable)"
																			}
																		},
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3477:47:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822ProxiableUpgradeable_$773",
																			"typeString": "contract IERC1822ProxiableUpgradeable"
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3525:13:6",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 772,
																	"src": "3477:61:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3477:63:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 928,
															"nodeType": "TryStatement",
															"src": "3473:302:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 930,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "3806:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 931,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 890,
																		"src": "3825:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 932,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 892,
																		"src": "3831:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 929,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "3788:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3788:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 934,
															"nodeType": "ExpressionStatement",
															"src": "3788:53:6"
														}
													]
												},
												"id": 936,
												"nodeType": "IfStatement",
												"src": "3326:526:6",
												"trueBody": {
													"id": 904,
													"nodeType": "Block",
													"src": "3391:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 901,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "3424:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 900,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "3405:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3405:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 903,
															"nodeType": "ExpressionStatement",
															"src": "3405:37:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "2718:161:6",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2893:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2932:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2924:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2972:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2959:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 889,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2959:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2991:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "2986:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 891,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2914:92:6"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:0:6"
									},
									"scope": 1128,
									"src": "2884:974:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "3864:189:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 942,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "4084:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1128,
									"src": "4058:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 940,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4058:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 941,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4098:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "4279:80:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 950,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "4334:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 948,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "4296:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1907_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4319:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1873,
															"src": "4296:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1853_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4296:50:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1853_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4347:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1852,
													"src": "4296:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 947,
												"id": 953,
												"nodeType": "Return",
												"src": "4289:63:6"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "4171:50:6",
										"text": " @dev Returns the current admin."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4235:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4244:2:6"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "4270:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4270:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4269:9:6"
									},
									"scope": 1128,
									"src": "4226:133:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "4486:167:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 962,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 958,
																"src": "4504:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4524:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4516:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 963,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4516:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4516:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4504:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4528:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4496:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4496:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "4496:73:6"
											},
											{
												"expression": {
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 974,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "4617:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 971,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "4579:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1907_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4602:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1873,
																"src": "4579:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1853_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4579:50:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1853_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 976,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4630:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1852,
														"src": "4579:56:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 977,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "4638:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4579:67:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "4579:67:6"
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "4365:71:6",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4450:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4468:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "4460:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4459:18:6"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4486:0:6"
									},
									"scope": 1128,
									"src": "4441:212:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "4813:86:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 988,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 955,
																"src": "4841:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4841:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "4854:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 987,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "4828:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "EmitStatement",
												"src": "4823:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 994,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "4883:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "4873:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "4873:19:6"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "4659:100:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4773:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4794:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "4786:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4786:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4785:18:6"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4813:0:6"
									},
									"scope": 1128,
									"src": "4764:135:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "4905:232:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 1002,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5168:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1128,
									"src": "5142:107:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1000,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5142:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1001,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5183:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "5366:81:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1010,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "5421:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1008,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "5383:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1907_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5406:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1873,
															"src": "5383:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1853_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5383:51:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1853_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5435:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1852,
													"src": "5383:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1007,
												"id": 1013,
												"nodeType": "Return",
												"src": "5376:64:6"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "5256:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5321:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5331:2:6"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "5357:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5357:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5356:9:6"
									},
									"scope": 1128,
									"src": "5312:135:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "5576:368:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1024,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1018,
																	"src": "5624:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1022,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "5594:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1805_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5613:10:6",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1539,
																"src": "5594:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5594:40:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5636:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5586:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5586:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "5586:90:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1033,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1018,
																					"src": "5756:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1032,
																				"name": "IBeaconUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1138,
																				"src": "5737:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$1138_$",
																					"typeString": "type(contract IBeaconUpgradeable)"
																				}
																			},
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeaconUpgradeable_$1138",
																				"typeString": "contract IBeaconUpgradeable"
																			}
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5767:14:6",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1137,
																		"src": "5737:44:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5737:46:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1030,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "5707:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1805_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5726:10:6",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1539,
																"src": "5707:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5707:77:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5798:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 1029,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5686:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5686:172:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1040,
												"nodeType": "ExpressionStatement",
												"src": "5686:172:6"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1044,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "5906:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1041,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1907,
																	"src": "5868:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1907_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5891:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1873,
																"src": "5868:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1853_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5868:51:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1853_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5920:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1852,
														"src": "5868:57:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1047,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "5928:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5868:69:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "5868:69:6"
											}
										]
									},
									"documentation": {
										"id": 1016,
										"nodeType": "StructuredDocumentation",
										"src": "5453:71:6",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5538:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5557:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "5549:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1017,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5549:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5548:19:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5576:0:6"
									},
									"scope": 1128,
									"src": "5529:415:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "6373:221:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1062,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "6394:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1061,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "6383:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6383:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "6383:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1066,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "6434:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1065,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 762,
														"src": "6419:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1068,
												"nodeType": "EmitStatement",
												"src": "6414:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1069,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "6458:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6463:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6458:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6472:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6458:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 1073,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "6477:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6458:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1085,
												"nodeType": "IfStatement",
												"src": "6454:134:6",
												"trueBody": {
													"id": 1084,
													"nodeType": "Block",
													"src": "6488:100:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1077,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1054,
																						"src": "6543:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1076,
																					"name": "IBeaconUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "6524:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$1138_$",
																						"typeString": "type(contract IBeaconUpgradeable)"
																					}
																				},
																				"id": 1078,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6524:29:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeaconUpgradeable_$1138",
																					"typeString": "contract IBeaconUpgradeable"
																				}
																			},
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6554:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1137,
																			"src": "6524:44:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6524:46:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1081,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "6572:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1075,
																	"name": "_functionDelegateCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1122,
																	"src": "6502:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6502:75:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1083,
															"nodeType": "ExpressionStatement",
															"src": "6502:75:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "5950:292:6",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6256:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6297:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "6289:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6329:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "6316:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1055,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6316:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6348:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "6343:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1057,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6343:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6279:84:6"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6373:0:6"
									},
									"scope": 1128,
									"src": "6247:347:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "6877:358:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1100,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "6925:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1098,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1805,
																	"src": "6895:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1805_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6914:10:6",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1539,
																"src": "6895:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6895:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6934:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6887:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6887:88:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "6887:88:6"
											},
											{
												"assignments": [
													1106,
													1108
												],
												"declarations": [
													{
														"constant": false,
														"id": 1106,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7051:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "7046:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1105,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7046:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7073:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "7060:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1107,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7060:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1113,
												"initialValue": {
													"arguments": [
														{
															"id": 1111,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "7107:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1109,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "7087:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7094:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7087:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7045:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1116,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "7165:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1117,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "7174:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7186:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"expression": {
															"id": 1114,
															"name": "AddressUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "7129:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1805_$",
																"typeString": "type(library AddressUpgradeable)"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7148:16:6",
														"memberName": "verifyCallResult",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1784,
														"src": "7129:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7129:99:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1096,
												"id": 1120,
												"nodeType": "Return",
												"src": "7122:106:6"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "6600:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionDelegateCall",
									"nameLocation": "6789:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6819:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "6811:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6811:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6840:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "6827:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1091,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6827:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6810:35:6"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "6863:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1094,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6863:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6862:14:6"
									},
									"scope": 1128,
									"src": "6780:455:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "7241:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1127,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "7520:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1128,
									"src": "7500:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1124,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7500:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1126,
										"length": {
											"hexValue": "3530",
											"id": 1125,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7508:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "7500:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1129,
							"src": "661:6867:6",
							"usedErrors": [],
							"usedEvents": [
								750,
								757,
								762,
								1153
							]
						}
					],
					"src": "116:7413:6"
				},
				"id": 6
			},
			"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
					"exportedSymbols": {
						"IBeaconUpgradeable": [
							1138
						]
					},
					"id": 1139,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeaconUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1131,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1138,
							"linearizedBaseContracts": [
								1138
							],
							"name": "IBeaconUpgradeable",
							"nameLocation": "208:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "233:162:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1137,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "409:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:7"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "449:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:7"
									},
									"scope": 1138,
									"src": "400:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1139,
							"src": "198:262:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "93:368:7"
				},
				"id": 7
			},
			"lib/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1805
						],
						"Initializable": [
							1307
						]
					},
					"id": 1308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1140,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:8"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 1141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1308,
							"sourceUnit": 1806,
							"src": "138:44:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1142,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:8",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 1307,
							"linearizedBaseContracts": [
								1307
							],
							"name": "Initializable",
							"nameLocation": "2401:13:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:8",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 1145,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1307,
									"src": "2535:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1144,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:8",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 1148,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:8",
									"nodeType": "VariableDeclaration",
									"scope": 1307,
									"src": "2664:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1147,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1149,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:8",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 1153,
									"name": "Initialized",
									"nameLocation": "2798:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "2810:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1150,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:8"
									},
									"src": "2792:33:8"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "3258:483:8",
										"statements": [
											{
												"assignments": [
													1157
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3273:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1208,
														"src": "3268:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1156,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3268:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3290:14:8",
													"subExpression": {
														"id": 1158,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "3291:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3268:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1162,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "3336:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1163,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "3354:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3369:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3354:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3336:34:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1167,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3335:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1179,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3376:45:8",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1172,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3415:4:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$1307",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$1307",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 1171,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3407:7:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1170,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3407:7:8",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1173,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3407:13:8",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 1168,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1805,
																						"src": "3377:18:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1805_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 1169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3396:10:8",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1539,
																					"src": "3377:29:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 1174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3377:44:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1176,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "3425:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1177,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3441:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3425:17:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3376:66:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1180,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3375:68:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3335:108:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3457:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 1161,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3314:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:201:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "3314:201:8"
											},
											{
												"expression": {
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1185,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "3525:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3540:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3525:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "3525:16:8"
											},
											{
												"condition": {
													"id": 1189,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "3555:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1195,
												"nodeType": "IfStatement",
												"src": "3551:65:8",
												"trueBody": {
													"id": 1194,
													"nodeType": "Block",
													"src": "3571:45:8",
													"statements": [
														{
															"expression": {
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1190,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "3585:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1191,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3601:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3585:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1193,
															"nodeType": "ExpressionStatement",
															"src": "3585:20:8"
														}
													]
												}
											},
											{
												"id": 1196,
												"nodeType": "PlaceholderStatement",
												"src": "3625:1:8"
											},
											{
												"condition": {
													"id": 1197,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1157,
													"src": "3640:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1207,
												"nodeType": "IfStatement",
												"src": "3636:99:8",
												"trueBody": {
													"id": 1206,
													"nodeType": "Block",
													"src": "3656:79:8",
													"statements": [
														{
															"expression": {
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1198,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "3670:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3686:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3670:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1201,
															"nodeType": "ExpressionStatement",
															"src": "3670:21:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3722:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 1202,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "3710:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3710:14:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1205,
															"nodeType": "EmitStatement",
															"src": "3705:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "2831:399:8",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 1209,
									"name": "initializer",
									"nameLocation": "3244:11:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:8"
									},
									"src": "3235:506:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "4852:255:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4870:14:8",
																"subExpression": {
																	"id": 1215,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "4871:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1217,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "4888:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1218,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "4903:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4888:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4870:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 1214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4862:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:99:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "4862:99:8"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "4971:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1225,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "4986:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4971:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "4971:22:8"
											},
											{
												"expression": {
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1228,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "5003:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5019:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5003:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "5003:20:8"
											},
											{
												"id": 1232,
												"nodeType": "PlaceholderStatement",
												"src": "5033:1:8"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "5044:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5060:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5044:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "5044:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1238,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "5092:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1237,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "5080:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5080:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "EmitStatement",
												"src": "5075:25:8"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "3747:1062:8",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 1242,
									"name": "reinitializer",
									"nameLocation": "4823:13:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4843:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4837:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1211,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4837:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4836:15:8"
									},
									"src": "4814:293:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "5345:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1246,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "5363:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5378:45:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 1245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5355:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "5355:69:8"
											},
											{
												"id": 1250,
												"nodeType": "PlaceholderStatement",
												"src": "5434:1:8"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "5113:199:8",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 1252,
									"name": "onlyInitializing",
									"nameLocation": "5326:16:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5342:2:8"
									},
									"src": "5317:125:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "5977:230:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5995:14:8",
															"subExpression": {
																"id": 1257,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "5996:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6011:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 1256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5987:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5987:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "5987:66:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1262,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "6067:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6087:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1264,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6087:5:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 1263,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6082:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6082:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6094:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6082:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6067:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "6063:138:8",
												"trueBody": {
													"id": 1285,
													"nodeType": "Block",
													"src": "6099:102:8",
													"statements": [
														{
															"expression": {
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1269,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "6113:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1272,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6133:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1271,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6133:5:8",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 1270,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6128:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6128:11:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6140:3:8",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6128:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6113:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1276,
															"nodeType": "ExpressionStatement",
															"src": "6113:30:8"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1280,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6179:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 1279,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6179:5:8",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 1278,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6174:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6174:11:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6186:3:8",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6174:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1277,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "6162:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 1283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6162:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1284,
															"nodeType": "EmitStatement",
															"src": "6157:33:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "5448:475:8",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5937:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5957:2:8"
									},
									"returnParameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5977:0:8"
									},
									"scope": 1307,
									"src": "5928:279:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "6381:36:8",
										"statements": [
											{
												"expression": {
													"id": 1294,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1145,
													"src": "6398:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1293,
												"id": 1295,
												"nodeType": "Return",
												"src": "6391:19:8"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "6213:99:8",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6326:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6348:2:8"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "6374:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1291,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6374:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6373:7:8"
									},
									"scope": 1307,
									"src": "6317:100:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "6589:37:8",
										"statements": [
											{
												"expression": {
													"id": 1303,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1148,
													"src": "6606:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1302,
												"id": 1304,
												"nodeType": "Return",
												"src": "6599:20:8"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "6423:105:8",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 1306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6542:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6557:2:8"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "6583:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6583:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:6:8"
									},
									"scope": 1307,
									"src": "6533:93:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1308,
							"src": "2383:4245:8",
							"usedErrors": [],
							"usedEvents": [
								1153
							]
						}
					],
					"src": "113:6516:8"
				},
				"id": 8
			},
			"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1805
						],
						"ERC1967UpgradeUpgradeable": [
							1128
						],
						"IBeaconUpgradeable": [
							1138
						],
						"IERC1822ProxiableUpgradeable": [
							773
						],
						"IERC1967Upgradeable": [
							763
						],
						"Initializable": [
							1307
						],
						"StorageSlotUpgradeable": [
							1907
						],
						"UUPSUpgradeable": [
							1443
						]
					},
					"id": 1444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:9"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 1310,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 774,
							"src": "140:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
							"file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
							"id": 1311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 1129,
							"src": "197:50:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 1312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1444,
							"sourceUnit": 1308,
							"src": "248:29:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1314,
										"name": "Initializable",
										"nameLocations": [
											"965:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1307,
										"src": "965:13:9"
									},
									"id": 1315,
									"nodeType": "InheritanceSpecifier",
									"src": "965:13:9"
								},
								{
									"baseName": {
										"id": 1316,
										"name": "IERC1822ProxiableUpgradeable",
										"nameLocations": [
											"980:28:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 773,
										"src": "980:28:9"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "980:28:9"
								},
								{
									"baseName": {
										"id": 1318,
										"name": "ERC1967UpgradeUpgradeable",
										"nameLocations": [
											"1010:25:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1128,
										"src": "1010:25:9"
									},
									"id": 1319,
									"nodeType": "InheritanceSpecifier",
									"src": "1010:25:9"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1313,
								"nodeType": "StructuredDocumentation",
								"src": "279:648:9",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1443,
							"linearizedBaseContracts": [
								1443,
								1128,
								763,
								773,
								1307
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "946:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "1102:7:9",
										"statements": []
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1321,
												"name": "onlyInitializing",
												"nameLocations": [
													"1085:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "1085:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1085:16:9"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "1051:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:2:9"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:9"
									},
									"scope": 1443,
									"src": "1042:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "1185:7:9",
										"statements": []
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1328,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1327,
												"name": "onlyInitializing",
												"nameLocations": [
													"1168:16:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "1168:16:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1168:16:9"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "1124:32:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:9"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1185:0:9"
									},
									"scope": 1443,
									"src": "1115:77:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "1197:87:9",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 1338,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1315:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "1289:48:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1333,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1289:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1336,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1332:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1443",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1443",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 1335,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1324:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1334,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1324:7:9",
												"typeDescriptions": {}
											}
										},
										"id": 1337,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1324:13:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "1863:205:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1344,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1889:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1443",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1443",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1881:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1342,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1881:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1881:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1346,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "1898:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1881:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 1341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1873:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:80:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "1873:80:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1352,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 818,
																	"src": "1971:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1971:20:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1354,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "1995:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1971:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2003:46:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 1351,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1963:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:87:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "1963:87:9"
											},
											{
												"id": 1359,
												"nodeType": "PlaceholderStatement",
												"src": "2060:1:9"
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "1344:493:9",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 1361,
									"name": "onlyProxy",
									"nameLocation": "1851:9:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:9"
									},
									"src": "1842:226:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "2298:120:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1367,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2324:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1443",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1443",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2316:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1365,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2316:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2316:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1369,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "2333:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2316:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2308:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:92:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "2308:92:9"
											},
											{
												"id": 1374,
												"nodeType": "PlaceholderStatement",
												"src": "2410:1:9"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "2074:195:9",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 1376,
									"name": "notDelegated",
									"nameLocation": "2283:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:2:9"
									},
									"src": "2274:144:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										772
									],
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "3093:44:9",
										"statements": [
											{
												"expression": {
													"id": 1385,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "3110:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1384,
												"id": 1386,
												"nodeType": "Return",
												"src": "3103:27:9"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "2424:577:9",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1380,
												"name": "notDelegated",
												"nameLocations": [
													"3062:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1376,
												"src": "3062:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3062:12:9"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3015:13:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1379,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3053:8:9"
									},
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:9"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "3084:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:9:9"
									},
									"scope": 1443,
									"src": "3006:131:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "3390:124:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1397,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3418:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1396,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "3400:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "3400:36:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1401,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1391,
															"src": "3468:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3497:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3487:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1402,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3491:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3487:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3501:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1400,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "3446:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "3446:61:9"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "3143:169:9",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."
									},
									"functionSelector": "3659cfe6",
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1394,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1393,
												"name": "onlyProxy",
												"nameLocations": [
													"3380:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1361,
												"src": "3380:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3380:9:9"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3326:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3344:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "3336:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3336:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:27:9"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:9"
									},
									"scope": 1443,
									"src": "3317:197:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "3870:115:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3898:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1420,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "3880:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3880:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "3880:36:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1425,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3948:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1426,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "3967:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3973:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1424,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "3926:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "3926:52:9"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "3520:238:9",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."
									},
									"functionSelector": "4f1ef286",
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1417,
												"name": "onlyProxy",
												"nameLocations": [
													"3860:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1361,
												"src": "3860:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3860:9:9"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3772:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3797:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3789:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3789:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3829:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "3816:17:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3816:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3788:46:9"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3870:0:9"
									},
									"scope": 1443,
									"src": "3763:222:9",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "3991:397:9",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 1437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4402:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4428:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "4420:25:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:27:9"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4463:0:9"
									},
									"scope": 1443,
									"src": "4393:71:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "4470:254:9",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1442,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4749:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1443,
									"src": "4729:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1439,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4729:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1441,
										"length": {
											"hexValue": "3530",
											"id": 1440,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4737:2:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4729:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1444,
							"src": "928:3829:9",
							"usedErrors": [],
							"usedEvents": [
								750,
								757,
								762,
								1153
							]
						}
					],
					"src": "115:4643:9"
				},
				"id": 9
			},
			"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1521
						]
					},
					"id": 1522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1446,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:10",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1521,
							"linearizedBaseContracts": [
								1521
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:10",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1455,
									"name": "Transfer",
									"nameLocation": "405:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "414:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "436:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "456:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:10"
									},
									"src": "399:72:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:10",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1464,
									"name": "Approval",
									"nameLocation": "636:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "645:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "668:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "693:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:10"
									},
									"src": "630:78:10"
								},
								{
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:10",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:10"
									},
									"returnParameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "831:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:10"
									},
									"scope": 1521,
									"src": "785:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:10",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "942:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:10"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "982:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:10"
									},
									"scope": 1521,
									"src": "923:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:10",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1488,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1222:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1234:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:10"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1488,
												"src": "1268:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:10"
									},
									"scope": 1521,
									"src": "1204:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1489,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:10",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1568:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1583:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:10"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "1623:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:10"
									},
									"scope": 1521,
									"src": "1549:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:10",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "2302:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "2319:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:10"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "2353:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:10"
									},
									"scope": 1521,
									"src": "2285:74:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1509,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:10",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "2688:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "2710:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "2730:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:10"
									},
									"returnParameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "2769:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:10"
									},
									"scope": 1521,
									"src": "2657:118:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1522,
							"src": "202:2575:10",
							"usedErrors": [],
							"usedEvents": [
								1455,
								1464
							]
						}
					],
					"src": "106:2672:10"
				},
				"id": 10
			},
			"lib/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1805
						]
					},
					"id": 1806,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1523,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1524,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:11",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1805,
							"linearizedBaseContracts": [
								1805
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "1252:254:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1532,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1527,
																"src": "1476:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1484:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1489:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1531,
												"id": 1537,
												"nodeType": "Return",
												"src": "1469:30:11"
											}
										]
									},
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:11",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "1206:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:11"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "1246:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1529,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:11"
									},
									"scope": 1805,
									"src": "1186:320:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "2494:241:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1550,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1805",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1805",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1548,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2526:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1553,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "2537:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:11"
											},
											{
												"assignments": [
													1559,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1559,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "2589:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1558,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1566,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1560,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "2607:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2617:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1562,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1544,
																"src": "2629:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1568,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1559,
															"src": "2658:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:11"
											}
										]
									},
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:11",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2442:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:11",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2469:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:11"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:11"
									},
									"scope": 1805,
									"src": "2423:312:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "3566:96:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1584,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "3605:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1585,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "3613:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3622:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1583,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1631,
															1675
														],
														"referencedDeclaration": 1675,
														"src": "3583:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:72:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1582,
												"id": 1589,
												"nodeType": "Return",
												"src": "3576:79:11"
											}
										]
									},
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:11",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "3499:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "3515:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1577,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:11"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "3552:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:11"
									},
									"scope": 1805,
									"src": "3477:185:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "4031:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1604,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "4070:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1605,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "4078:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4084:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1607,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "4087:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1603,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1631,
															1675
														],
														"referencedDeclaration": 1675,
														"src": "4048:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1609,
												"nodeType": "Return",
												"src": "4041:59:11"
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "3668:211:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3893:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3923:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3915:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3915:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3952:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3939:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3939:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3980:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "3966:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1597,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3966:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:93:11"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1611,
												"src": "4017:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4017:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:14:11"
									},
									"scope": 1805,
									"src": "3884:223:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1630,
										"nodeType": "Block",
										"src": "4612:111:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1624,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "4651:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "4659:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1626,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "4665:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4672:43:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1623,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1631,
															1675
														],
														"referencedDeclaration": 1675,
														"src": "4629:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4629:87:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1622,
												"id": 1629,
												"nodeType": "Return",
												"src": "4622:94:11"
											}
										]
									},
									"documentation": {
										"id": 1612,
										"nodeType": "StructuredDocumentation",
										"src": "4113:351:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4478:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4517:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "4509:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4509:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4546:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "4533:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4533:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4568:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "4560:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4560:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:80:11"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1631,
												"src": "4598:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4598:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:14:11"
									},
									"scope": 1805,
									"src": "4469:254:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "5150:267:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1648,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5176:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1805",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1805",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5168:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1646,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5168:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5168:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5182:7:11",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5168:21:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1651,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "5193:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5200:40:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5160:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:81:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "5160:81:11"
											},
											{
												"assignments": [
													1657,
													1659
												],
												"declarations": [
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5257:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "5252:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1656,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5252:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5279:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1674,
														"src": "5266:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1658,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5266:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1666,
												"initialValue": {
													"arguments": [
														{
															"id": 1664,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "5319:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1660,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "5293:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5300:4:11",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5293:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1662,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "5312:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5293:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5293:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5251:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1668,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "5368:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1669,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "5376:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1670,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1659,
															"src": "5385:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1671,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "5397:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1667,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "5341:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1644,
												"id": 1673,
												"nodeType": "Return",
												"src": "5334:76:11"
											}
										]
									},
									"documentation": {
										"id": 1632,
										"nodeType": "StructuredDocumentation",
										"src": "4729:237:11",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4980:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5019:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5011:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5048:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5035:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1635,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5035:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5070:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5062:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5099:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5085:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5085:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:116:11"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5136:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1642,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5136:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:14:11"
									},
									"scope": 1805,
									"src": "4971:446:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "5694:97:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1686,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "5730:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1680,
															"src": "5738:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5744:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1685,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1692,
															1721
														],
														"referencedDeclaration": 1721,
														"src": "5711:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5711:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1684,
												"id": 1690,
												"nodeType": "Return",
												"src": "5704:80:11"
											}
										]
									},
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "5423:166:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5603:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5630:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5622:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5651:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5638:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1679,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5638:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5621:35:11"
									},
									"returnParameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "5680:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5680:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:14:11"
									},
									"scope": 1805,
									"src": "5594:197:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "6133:168:11",
										"statements": [
											{
												"assignments": [
													1705,
													1707
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6149:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1720,
														"src": "6144:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1704,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6144:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1707,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6171:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1720,
														"src": "6158:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1706,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6158:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1712,
												"initialValue": {
													"arguments": [
														{
															"id": 1710,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "6203:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1708,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "6185:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6192:10:11",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6185:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6185:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1714,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "6252:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1715,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "6260:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1716,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "6269:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1717,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1699,
															"src": "6281:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1713,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1760,
														"src": "6225:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6225:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1703,
												"id": 1719,
												"nodeType": "Return",
												"src": "6218:76:11"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "5797:173:11",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5984:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6020:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6012:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6012:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6049:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6036:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6036:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6077:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6063:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1698,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6063:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6002:93:11"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6119:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6119:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6118:14:11"
									},
									"scope": 1805,
									"src": "5975:326:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "6783:434:11",
										"statements": [
											{
												"condition": {
													"id": 1735,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1726,
													"src": "6797:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1757,
													"nodeType": "Block",
													"src": "7153:58:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1753,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "7175:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1754,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "7187:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1752,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "7167:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7167:33:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1756,
															"nodeType": "ExpressionStatement",
															"src": "7167:33:11"
														}
													]
												},
												"id": 1758,
												"nodeType": "IfStatement",
												"src": "6793:418:11",
												"trueBody": {
													"id": 1751,
													"nodeType": "Block",
													"src": "6806:341:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1736,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "6824:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6835:6:11",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6824:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6845:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6824:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1748,
															"nodeType": "IfStatement",
															"src": "6820:286:11",
															"trueBody": {
																"id": 1747,
																"nodeType": "Block",
																"src": "6848:258:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1742,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1724,
																							"src": "7050:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1741,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1539,
																						"src": "7039:10:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1743,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7039:18:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1744,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7059:31:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1740,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7031:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7031:60:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1746,
																		"nodeType": "ExpressionStatement",
																		"src": "7031:60:11"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1749,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "7126:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1734,
															"id": 1750,
															"nodeType": "Return",
															"src": "7119:17:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "6307:277:11",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "6598:26:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6642:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "6634:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6663:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "6658:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6658:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6693:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "6680:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6680:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6727:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "6713:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6713:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6624:121:11"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "6769:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6769:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:14:11"
									},
									"scope": 1805,
									"src": "6589:628:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "7598:135:11",
										"statements": [
											{
												"condition": {
													"id": 1772,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1763,
													"src": "7612:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1781,
													"nodeType": "Block",
													"src": "7669:58:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1777,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1765,
																		"src": "7691:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1778,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "7703:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1776,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1804,
																	"src": "7683:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:33:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1780,
															"nodeType": "ExpressionStatement",
															"src": "7683:33:11"
														}
													]
												},
												"id": 1782,
												"nodeType": "IfStatement",
												"src": "7608:119:11",
												"trueBody": {
													"id": 1775,
													"nodeType": "Block",
													"src": "7621:42:11",
													"statements": [
														{
															"expression": {
																"id": 1773,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1765,
																"src": "7642:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1771,
															"id": 1774,
															"nodeType": "Return",
															"src": "7635:17:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "7223:210:11",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7447:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7478:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "7473:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7473:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7508:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "7495:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7495:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7542:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "7528:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7528:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:97:11"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "7584:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7584:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:14:11"
									},
									"scope": 1805,
									"src": "7438:295:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "7822:457:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "7898:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7909:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7898:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7918:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7898:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1801,
													"nodeType": "Block",
													"src": "8228:45:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1798,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "8249:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1797,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "8242:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8242:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1800,
															"nodeType": "ExpressionStatement",
															"src": "8242:20:11"
														}
													]
												},
												"id": 1802,
												"nodeType": "IfStatement",
												"src": "7894:379:11",
												"trueBody": {
													"id": 1796,
													"nodeType": "Block",
													"src": "7921:301:11",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8079:133:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8097:40:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "8126:10:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8120:5:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8120:17:11"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8101:15:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8165:2:11",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "8169:10:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8161:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8161:19:11"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "8182:15:11"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8154:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8154:44:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8154:44:11"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 1786,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8126:10:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1786,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8169:10:11",
																	"valueSize": 1
																}
															],
															"id": 1795,
															"nodeType": "InlineAssembly",
															"src": "8070:142:11"
														}
													]
												}
											}
										]
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "7748:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7769:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "7756:23:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7756:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7795:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "7781:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1787,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7781:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:53:11"
									},
									"returnParameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7822:0:11"
									},
									"scope": 1805,
									"src": "7739:540:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1806,
							"src": "194:8087:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:8181:11"
				},
				"id": 11
			},
			"lib/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1805
						],
						"ContextUpgradeable": [
							1847
						],
						"Initializable": [
							1307
						]
					},
					"id": 1848,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1807,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:12"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1808,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1848,
							"sourceUnit": 1308,
							"src": "110:42:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1810,
										"name": "Initializable",
										"nameLocations": [
											"691:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1307,
										"src": "691:13:12"
									},
									"id": 1811,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:12"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1809,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:12",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1847,
							"linearizedBaseContracts": [
								1847,
								1307
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "763:7:12",
										"statements": []
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1814,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1813,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "746:16:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:12"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:12"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:12"
									},
									"scope": 1847,
									"src": "711:59:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "838:7:12",
										"statements": []
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1820,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1819,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1252,
												"src": "821:16:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:12"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:12"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:12"
									},
									"scope": 1847,
									"src": "776:69:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "912:34:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1828,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1827,
												"id": 1830,
												"nodeType": "Return",
												"src": "922:17:12"
											}
										]
									},
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:12"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "903:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:12"
									},
									"scope": 1847,
									"src": "850:96:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "1019:32:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1837,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:12",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1836,
												"id": 1839,
												"nodeType": "Return",
												"src": "1029:15:12"
											}
										]
									},
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:12"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "1003:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:12"
									},
									"scope": 1847,
									"src": "952:99:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:12",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1846,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 1847,
									"src": "1316:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1843,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1845,
										"length": {
											"hexValue": "3530",
											"id": 1844,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1848,
							"src": "651:693:12",
							"usedErrors": [],
							"usedEvents": [
								1153
							]
						}
					],
					"src": "86:1259:12"
				},
				"id": 12
			},
			"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							1907
						]
					},
					"id": 1908,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1849,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlotUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1850,
								"nodeType": "StructuredDocumentation",
								"src": "130:1148:13",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
							},
							"fullyImplemented": true,
							"id": 1907,
							"linearizedBaseContracts": [
								1907
							],
							"name": "StorageSlotUpgradeable",
							"nameLocation": "1287:22:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 1853,
									"members": [
										{
											"constant": false,
											"id": 1852,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1353:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1853,
											"src": "1345:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1851,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1345:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1323:11:13",
									"nodeType": "StructDefinition",
									"scope": 1907,
									"src": "1316:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 1856,
									"members": [
										{
											"constant": false,
											"id": 1855,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1405:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1856,
											"src": "1400:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1854,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1400:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1378:11:13",
									"nodeType": "StructDefinition",
									"scope": 1907,
									"src": "1371:46:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 1859,
									"members": [
										{
											"constant": false,
											"id": 1858,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1460:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1859,
											"src": "1452:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1857,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1452:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1430:11:13",
									"nodeType": "StructDefinition",
									"scope": 1907,
									"src": "1423:49:13",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 1862,
									"members": [
										{
											"constant": false,
											"id": 1861,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1515:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1862,
											"src": "1507:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1860,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1507:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1485:11:13",
									"nodeType": "StructDefinition",
									"scope": 1907,
									"src": "1478:49:13",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1872,
										"nodeType": "Block",
										"src": "1709:106:13",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1771:38:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1785:14:13",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1795:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1785:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1869,
														"isOffset": false,
														"isSlot": true,
														"src": "1785:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1865,
														"isOffset": false,
														"isSlot": false,
														"src": "1795:4:13",
														"valueSize": 1
													}
												],
												"id": 1871,
												"nodeType": "InlineAssembly",
												"src": "1762:47:13"
											}
										]
									},
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "1533:87:13",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1634:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1657:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "1649:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1864,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:14:13"
									},
									"returnParameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1706:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "1686:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1853_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 1868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1867,
														"name": "AddressSlot",
														"nameLocations": [
															"1686:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1853,
														"src": "1686:11:13"
													},
													"referencedDeclaration": 1853,
													"src": "1686:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1853_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:23:13"
									},
									"scope": 1907,
									"src": "1625:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "1997:106:13",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2059:38:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2073:14:13",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2083:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2073:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1880,
														"isOffset": false,
														"isSlot": true,
														"src": "2073:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1876,
														"isOffset": false,
														"isSlot": false,
														"src": "2083:4:13",
														"valueSize": 1
													}
												],
												"id": 1882,
												"nodeType": "InlineAssembly",
												"src": "2050:47:13"
											}
										]
									},
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "1821:87:13",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1922:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1945:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "1937:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1875,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:14:13"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1880,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1994:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "1974:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1856_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 1879,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1878,
														"name": "BooleanSlot",
														"nameLocations": [
															"1974:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1856,
														"src": "1974:11:13"
													},
													"referencedDeclaration": 1856,
													"src": "1974:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1856_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:23:13"
									},
									"scope": 1907,
									"src": "1913:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1894,
										"nodeType": "Block",
										"src": "2285:106:13",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2347:38:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:14:13",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2371:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1891,
														"isOffset": false,
														"isSlot": true,
														"src": "2361:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1887,
														"isOffset": false,
														"isSlot": false,
														"src": "2371:4:13",
														"valueSize": 1
													}
												],
												"id": 1893,
												"nodeType": "InlineAssembly",
												"src": "2338:47:13"
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "2109:87:13",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2210:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2233:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "2225:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1886,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:14:13"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2282:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1895,
												"src": "2262:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1859_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 1890,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1889,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2262:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1859,
														"src": "2262:11:13"
													},
													"referencedDeclaration": 1859,
													"src": "2262:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1859_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:23:13"
									},
									"scope": 1907,
									"src": "2201:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "2573:106:13",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2635:38:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2649:14:13",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2659:4:13"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2649:6:13"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1902,
														"isOffset": false,
														"isSlot": true,
														"src": "2649:6:13",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1898,
														"isOffset": false,
														"isSlot": false,
														"src": "2659:4:13",
														"valueSize": 1
													}
												],
												"id": 1904,
												"nodeType": "InlineAssembly",
												"src": "2626:47:13"
											}
										]
									},
									"documentation": {
										"id": 1896,
										"nodeType": "StructuredDocumentation",
										"src": "2397:87:13",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2498:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2521:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "2513:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1897,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2512:14:13"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2570:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "2550:21:13",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1862_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 1901,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1900,
														"name": "Uint256Slot",
														"nameLocations": [
															"2550:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1862,
														"src": "2550:11:13"
													},
													"referencedDeclaration": 1862,
													"src": "2550:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1862_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:23:13"
									},
									"scope": 1907,
									"src": "2489:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1908,
							"src": "1279:1402:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "105:2577:13"
				},
				"id": 13
			},
			"lib/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							3308
						],
						"StringsUpgradeable": [
							2082
						]
					},
					"id": 2083,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1909,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:14"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 1910,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2083,
							"sourceUnit": 3309,
							"src": "126:36:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1911,
								"nodeType": "StructuredDocumentation",
								"src": "164:34:14",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2082,
							"linearizedBaseContracts": [
								2082
							],
							"name": "StringsUpgradeable",
							"nameLocation": "207:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1914,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "257:8:14",
									"nodeType": "VariableDeclaration",
									"scope": 2082,
									"src": "232:54:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1912,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "232:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "268:18:14",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1917,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "315:15:14",
									"nodeType": "VariableDeclaration",
									"scope": 2082,
									"src": "292:43:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1915,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "292:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1916,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "333:2:14",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "508:636:14",
										"statements": [
											{
												"id": 1963,
												"nodeType": "UncheckedBlock",
												"src": "518:620:14",
												"statements": [
													{
														"assignments": [
															1926
														],
														"declarations": [
															{
																"constant": false,
																"id": 1926,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "550:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1963,
																"src": "542:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1925,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "542:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1933,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1929,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1920,
																		"src": "581:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1927,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3308,
																		"src": "559:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$3308_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "575:5:14",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3145,
																	"src": "559:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "559:28:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "590:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "559:32:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "542:49:14"
													},
													{
														"assignments": [
															1935
														],
														"declarations": [
															{
																"constant": false,
																"id": 1935,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "619:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 1963,
																"src": "605:20:14",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1934,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "605:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1940,
														"initialValue": {
															"arguments": [
																{
																	"id": 1938,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1926,
																	"src": "639:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "628:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1936,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "632:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "628:18:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "605:41:14"
													},
													{
														"assignments": [
															1942
														],
														"declarations": [
															{
																"constant": false,
																"id": 1942,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "668:3:14",
																"nodeType": "VariableDeclaration",
																"scope": 1963,
																"src": "660:11:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1941,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "660:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1943,
														"nodeType": "VariableDeclarationStatement",
														"src": "660:11:14"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "741:67:14",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "759:35:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "770:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "782:2:14",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "786:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "778:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "778:15:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "766:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "766:28:14"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "759:3:14"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "770:6:14",
																"valueSize": 1
															},
															{
																"declaration": 1926,
																"isOffset": false,
																"isSlot": false,
																"src": "786:6:14",
																"valueSize": 1
															},
															{
																"declaration": 1942,
																"isOffset": false,
																"isSlot": false,
																"src": "759:3:14",
																"valueSize": 1
															}
														],
														"id": 1944,
														"nodeType": "InlineAssembly",
														"src": "732:76:14"
													},
													{
														"body": {
															"id": 1959,
															"nodeType": "Block",
															"src": "834:267:14",
															"statements": [
																{
																	"expression": {
																		"id": 1947,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "852:5:14",
																		"subExpression": {
																			"id": 1946,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1942,
																			"src": "852:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1948,
																	"nodeType": "ExpressionStatement",
																	"src": "852:5:14"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "935:84:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "965:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "979:5:14"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "986:2:14",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "975:3:14"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "975:14:14"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "991:8:14"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "970:4:14"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "970:30:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "957:7:14"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "957:44:14"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "957:44:14"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1914,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "991:8:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1942,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "965:3:14",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1920,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "979:5:14",
																			"valueSize": 1
																		}
																	],
																	"id": 1949,
																	"nodeType": "InlineAssembly",
																	"src": "926:93:14"
																},
																{
																	"expression": {
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1950,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "1036:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1036:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1953,
																	"nodeType": "ExpressionStatement",
																	"src": "1036:11:14"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1954,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1920,
																			"src": "1069:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1078:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1069:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1958,
																	"nodeType": "IfStatement",
																	"src": "1065:21:14",
																	"trueBody": {
																		"id": 1957,
																		"nodeType": "Break",
																		"src": "1081:5:14"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "828:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1960,
														"nodeType": "WhileStatement",
														"src": "821:280:14"
													},
													{
														"expression": {
															"id": 1961,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "1121:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1924,
														"id": 1962,
														"nodeType": "Return",
														"src": "1114:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "342:90:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "446:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "463:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "455:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:15:14"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1965,
												"src": "493:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "493:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:15:14"
									},
									"scope": 2082,
									"src": "437:707:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1984,
										"nodeType": "Block",
										"src": "1323:111:14",
										"statements": [
											{
												"id": 1983,
												"nodeType": "UncheckedBlock",
												"src": "1333:95:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1974,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1968,
																	"src": "1376:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1977,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1968,
																				"src": "1406:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1975,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3308,
																				"src": "1383:15:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$3308_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1399:6:14",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3268,
																			"src": "1383:22:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1383:29:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1415:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1383:33:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1973,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1985,
																	2061,
																	2081
																],
																"referencedDeclaration": 2061,
																"src": "1364:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1364:53:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1972,
														"id": 1982,
														"nodeType": "Return",
														"src": "1357:60:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "1150:94:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1258:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1278:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1270:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1270:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1269:15:14"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1985,
												"src": "1308:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1970,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1308:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:15:14"
									},
									"scope": 2082,
									"src": "1249:185:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "1647:347:14",
										"statements": [
											{
												"assignments": [
													1996
												],
												"declarations": [
													{
														"constant": false,
														"id": 1996,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1670:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2060,
														"src": "1657:19:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1995,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1657:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2005,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1689:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2000,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1990,
																	"src": "1693:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1689:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2002,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1702:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1689:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1679:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1997,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1683:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1679:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1657:47:14"
											},
											{
												"expression": {
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2006,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "1714:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2008,
														"indexExpression": {
															"hexValue": "30",
															"id": 2007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1721:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1714:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1726:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1714:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "1714:15:14"
											},
											{
												"expression": {
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2012,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "1739:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2014,
														"indexExpression": {
															"hexValue": "31",
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1746:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1739:9:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1751:3:14",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1739:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "1739:15:14"
											},
											{
												"body": {
													"id": 2046,
													"nodeType": "Block",
													"src": "1809:83:14",
													"statements": [
														{
															"expression": {
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2032,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "1823:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2034,
																	"indexExpression": {
																		"id": 2033,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2019,
																		"src": "1830:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1823:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2035,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1914,
																		"src": "1835:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2039,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2036,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1988,
																			"src": "1844:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1852:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1844:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1835:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1823:33:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2041,
															"nodeType": "ExpressionStatement",
															"src": "1823:33:14"
														},
														{
															"expression": {
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2042,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1988,
																	"src": "1870:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1880:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1870:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2045,
															"nodeType": "ExpressionStatement",
															"src": "1870:11:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2026,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "1797:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1801:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1797:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2047,
												"initializationExpression": {
													"assignments": [
														2019
													],
													"declarations": [
														{
															"constant": false,
															"id": 2019,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1777:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2047,
															"src": "1769:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2018,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1769:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2025,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1781:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2021,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1990,
																"src": "1785:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1781:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1794:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1781:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1769:26:14"
												},
												"loopExpression": {
													"expression": {
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1804:3:14",
														"subExpression": {
															"id": 2029,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "1806:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2031,
													"nodeType": "ExpressionStatement",
													"src": "1804:3:14"
												},
												"nodeType": "ForStatement",
												"src": "1764:128:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2049,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1988,
																"src": "1909:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1918:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1909:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1921:34:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2048,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1901:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1901:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2054,
												"nodeType": "ExpressionStatement",
												"src": "1901:55:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2057,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "1980:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1973:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2055,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1973:6:14",
															"typeDescriptions": {}
														}
													},
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1973:14:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1994,
												"id": 2059,
												"nodeType": "Return",
												"src": "1966:21:14"
											}
										]
									},
									"documentation": {
										"id": 1986,
										"nodeType": "StructuredDocumentation",
										"src": "1440:112:14",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1566:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1586:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "1578:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1601:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "1593:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1593:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:31:14"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "1632:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1992,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1632:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:15:14"
									},
									"scope": 2082,
									"src": "1557:437:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2080,
										"nodeType": "Block",
										"src": "2219:76:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2074,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2064,
																			"src": "2264:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2073,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2256:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2072,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2256:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2256:13:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2248:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2070,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2248:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2248:22:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2077,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1917,
															"src": "2272:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2069,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1985,
															2061,
															2081
														],
														"referencedDeclaration": 2061,
														"src": "2236:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2236:52:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2068,
												"id": 2079,
												"nodeType": "Return",
												"src": "2229:59:14"
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "2000:141:14",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 2081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2155:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2175:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "2167:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2167:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:14:14"
									},
									"returnParameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2081,
												"src": "2204:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2204:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:15:14"
									},
									"scope": 2082,
									"src": "2146:149:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2083,
							"src": "199:2098:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2197:14"
				},
				"id": 14
			},
			"lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
					"exportedSymbols": {
						"ECDSAUpgradeable": [
							2443
						],
						"MathUpgradeable": [
							3308
						],
						"StringsUpgradeable": [
							2082
						]
					},
					"id": 2444,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2084,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:15"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "../StringsUpgradeable.sol",
							"id": 2085,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2444,
							"sourceUnit": 2083,
							"src": "137:35:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSAUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2086,
								"nodeType": "StructuredDocumentation",
								"src": "174:205:15",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 2443,
							"linearizedBaseContracts": [
								2443
							],
							"name": "ECDSAUpgradeable",
							"nameLocation": "388:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSAUpgradeable.RecoverError",
									"id": 2092,
									"members": [
										{
											"id": 2087,
											"name": "NoError",
											"nameLocation": "439:7:15",
											"nodeType": "EnumValue",
											"src": "439:7:15"
										},
										{
											"id": 2088,
											"name": "InvalidSignature",
											"nameLocation": "456:16:15",
											"nodeType": "EnumValue",
											"src": "456:16:15"
										},
										{
											"id": 2089,
											"name": "InvalidSignatureLength",
											"nameLocation": "482:22:15",
											"nodeType": "EnumValue",
											"src": "482:22:15"
										},
										{
											"id": 2090,
											"name": "InvalidSignatureS",
											"nameLocation": "514:17:15",
											"nodeType": "EnumValue",
											"src": "514:17:15"
										},
										{
											"id": 2091,
											"name": "InvalidSignatureV",
											"nameLocation": "541:17:15",
											"nodeType": "EnumValue",
											"src": "541:17:15"
										}
									],
									"name": "RecoverError",
									"nameLocation": "416:12:15",
									"nodeType": "EnumDefinition",
									"src": "411:175:15"
								},
								{
									"body": {
										"id": 2135,
										"nodeType": "Block",
										"src": "646:457:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$2092",
														"typeString": "enum ECDSAUpgradeable.RecoverError"
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2098,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2095,
														"src": "660:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2092",
															"typeString": "enum ECDSAUpgradeable.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 2099,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "669:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$2092_$",
																"typeString": "type(enum ECDSAUpgradeable.RecoverError)"
															}
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "682:7:15",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2087,
														"src": "669:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2092",
															"typeString": "enum ECDSAUpgradeable.RecoverError"
														}
													},
													"src": "660:29:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$2092",
															"typeString": "enum ECDSAUpgradeable.RecoverError"
														},
														"id": 2107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2104,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "756:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2105,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2092,
																"src": "765:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2092_$",
																	"typeString": "type(enum ECDSAUpgradeable.RecoverError)"
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "778:16:15",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2088,
															"src": "765:29:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														},
														"src": "756:38:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															},
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2113,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2095,
																"src": "865:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2092",
																	"typeString": "enum ECDSAUpgradeable.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2114,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2092,
																	"src": "874:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$2092_$",
																		"typeString": "type(enum ECDSAUpgradeable.RecoverError)"
																	}
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "887:22:15",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2089,
																"src": "874:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$2092",
																	"typeString": "enum ECDSAUpgradeable.RecoverError"
																}
															},
															"src": "865:44:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$2092",
																	"typeString": "enum ECDSAUpgradeable.RecoverError"
																},
																"id": 2125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2122,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2095,
																	"src": "987:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2092",
																		"typeString": "enum ECDSAUpgradeable.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 2123,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2092,
																		"src": "996:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$2092_$",
																			"typeString": "type(enum ECDSAUpgradeable.RecoverError)"
																		}
																	},
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1009:17:15",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "996:30:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$2092",
																		"typeString": "enum ECDSAUpgradeable.RecoverError"
																	}
																},
																"src": "987:39:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2131,
															"nodeType": "IfStatement",
															"src": "983:114:15",
															"trueBody": {
																"id": 2130,
																"nodeType": "Block",
																"src": "1028:69:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "45434453413a20696e76616c6964207369676e6174757265202773272076616c7565",
																					"id": 2127,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1049:36:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					},
																					"value": "ECDSA: invalid signature 's' value"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd",
																						"typeString": "literal_string \"ECDSA: invalid signature 's' value\""
																					}
																				],
																				"id": 2126,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "1042:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1042:44:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2129,
																		"nodeType": "ExpressionStatement",
																		"src": "1042:44:15"
																	}
																]
															}
														},
														"id": 2132,
														"nodeType": "IfStatement",
														"src": "861:236:15",
														"trueBody": {
															"id": 2121,
															"nodeType": "Block",
															"src": "911:66:15",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "45434453413a20696e76616c6964207369676e6174757265206c656e677468",
																				"id": 2118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "932:33:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				},
																				"value": "ECDSA: invalid signature length"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77",
																					"typeString": "literal_string \"ECDSA: invalid signature length\""
																				}
																			],
																			"id": 2117,
																			"name": "revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967277,
																				4294967277
																			],
																			"referencedDeclaration": 4294967277,
																			"src": "925:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (string memory) pure"
																			}
																		},
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "925:41:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2120,
																	"nodeType": "ExpressionStatement",
																	"src": "925:41:15"
																}
															]
														}
													},
													"id": 2133,
													"nodeType": "IfStatement",
													"src": "752:345:15",
													"trueBody": {
														"id": 2112,
														"nodeType": "Block",
														"src": "796:59:15",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "45434453413a20696e76616c6964207369676e6174757265",
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "817:26:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			},
																			"value": "ECDSA: invalid signature"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be",
																				"typeString": "literal_string \"ECDSA: invalid signature\""
																			}
																		],
																		"id": 2108,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "810:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "810:34:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2111,
																"nodeType": "ExpressionStatement",
																"src": "810:34:15"
															}
														]
													}
												},
												"id": 2134,
												"nodeType": "IfStatement",
												"src": "656:441:15",
												"trueBody": {
													"id": 2103,
													"nodeType": "Block",
													"src": "691:55:15",
													"statements": [
														{
															"functionReturnParameters": 2097,
															"id": 2102,
															"nodeType": "Return",
															"src": "705:7:15"
														}
													]
												}
											}
										]
									},
									"id": 2136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "601:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "626:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2136,
												"src": "613:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2092",
													"typeString": "enum ECDSAUpgradeable.RecoverError"
												},
												"typeName": {
													"id": 2094,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2093,
														"name": "RecoverError",
														"nameLocations": [
															"613:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2092,
														"src": "613:12:15"
													},
													"referencedDeclaration": 2092,
													"src": "613:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2092",
														"typeString": "enum ECDSAUpgradeable.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:20:15"
									},
									"returnParameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:0:15"
									},
									"scope": 2443,
									"src": "592:511:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2181,
										"nodeType": "Block",
										"src": "2271:626:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2149,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "2285:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2295:6:15",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2285:16:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2305:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2285:22:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2179,
													"nodeType": "Block",
													"src": "2810:81:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2840:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2832:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2171,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2832:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2832:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2175,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2092,
																			"src": "2844:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2092_$",
																				"typeString": "type(enum ECDSAUpgradeable.RecoverError)"
																			}
																		},
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2857:22:15",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2089,
																		"src": "2844:35:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2092",
																			"typeString": "enum ECDSAUpgradeable.RecoverError"
																		}
																	}
																],
																"id": 2177,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2831:49:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2092_$",
																	"typeString": "tuple(address,enum ECDSAUpgradeable.RecoverError)"
																}
															},
															"functionReturnParameters": 2148,
															"id": 2178,
															"nodeType": "Return",
															"src": "2824:56:15"
														}
													]
												},
												"id": 2180,
												"nodeType": "IfStatement",
												"src": "2281:610:15",
												"trueBody": {
													"id": 2170,
													"nodeType": "Block",
													"src": "2309:495:15",
													"statements": [
														{
															"assignments": [
																2154
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2154,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2331:1:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2170,
																	"src": "2323:9:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2153,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2323:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2155,
															"nodeType": "VariableDeclarationStatement",
															"src": "2323:9:15"
														},
														{
															"assignments": [
																2157
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2157,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2354:1:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2170,
																	"src": "2346:9:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 2156,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2346:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2158,
															"nodeType": "VariableDeclarationStatement",
															"src": "2346:9:15"
														},
														{
															"assignments": [
																2160
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2160,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2375:1:15",
																	"nodeType": "VariableDeclaration",
																	"scope": 2170,
																	"src": "2369:7:15",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2159,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2369:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2161,
															"nodeType": "VariableDeclarationStatement",
															"src": "2369:7:15"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "2577:171:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2595:32:15",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2610:9:15"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2621:4:15",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2606:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2606:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2600:5:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2600:27:15"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "2595:1:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2644:32:15",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nodeType": "YulIdentifier",
																							"src": "2659:9:15"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2670:4:15",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2655:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2655:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2649:5:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2649:27:15"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nodeType": "YulIdentifier",
																				"src": "2644:1:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2693:41:15",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2703:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nodeType": "YulIdentifier",
																									"src": "2716:9:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2727:4:15",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2712:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2712:20:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2706:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2706:27:15"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nodeType": "YulIdentifier",
																				"src": "2698:4:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2698:36:15"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nodeType": "YulIdentifier",
																				"src": "2693:1:15"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2154,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2595:1:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2157,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2644:1:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2141,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2610:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2141,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2659:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2141,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2716:9:15",
																	"valueSize": 1
																},
																{
																	"declaration": 2160,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2693:1:15",
																	"valueSize": 1
																}
															],
															"id": 2162,
															"nodeType": "InlineAssembly",
															"src": "2568:180:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2164,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2139,
																		"src": "2779:4:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2165,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2160,
																		"src": "2785:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 2166,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "2788:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2167,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "2791:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2163,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2182,
																		2256,
																		2350
																	],
																	"referencedDeclaration": 2350,
																	"src": "2768:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2092_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"
																	}
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2768:25:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2092_$",
																	"typeString": "tuple(address,enum ECDSAUpgradeable.RecoverError)"
																}
															},
															"functionReturnParameters": 2148,
															"id": 2169,
															"nodeType": "Return",
															"src": "2761:32:15"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2137,
										"nodeType": "StructuredDocumentation",
										"src": "1109:1053:15",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"
									},
									"id": 2182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2176:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2139,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2195:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "2187:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2138,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2187:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2214:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "2201:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2140,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2201:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2186:38:15"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "2248:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2182,
												"src": "2257:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2092",
													"typeString": "enum ECDSAUpgradeable.RecoverError"
												},
												"typeName": {
													"id": 2146,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2145,
														"name": "RecoverError",
														"nameLocations": [
															"2257:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2092,
														"src": "2257:12:15"
													},
													"referencedDeclaration": 2092,
													"src": "2257:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2092",
														"typeString": "enum ECDSAUpgradeable.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:23:15"
									},
									"scope": 2443,
									"src": "2167:730:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2208,
										"nodeType": "Block",
										"src": "3770:140:15",
										"statements": [
											{
												"assignments": [
													2193,
													2196
												],
												"declarations": [
													{
														"constant": false,
														"id": 2193,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3789:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2208,
														"src": "3781:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2192,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3781:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2196,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3813:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2208,
														"src": "3800:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2092",
															"typeString": "enum ECDSAUpgradeable.RecoverError"
														},
														"typeName": {
															"id": 2195,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2194,
																"name": "RecoverError",
																"nameLocations": [
																	"3800:12:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2092,
																"src": "3800:12:15"
															},
															"referencedDeclaration": 2092,
															"src": "3800:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2201,
												"initialValue": {
													"arguments": [
														{
															"id": 2198,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "3833:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2199,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2187,
															"src": "3839:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2197,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2182,
															2256,
															2350
														],
														"referencedDeclaration": 2182,
														"src": "3822:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2092_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSAUpgradeable.RecoverError)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3822:27:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2092_$",
														"typeString": "tuple(address,enum ECDSAUpgradeable.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3780:69:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2203,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "3871:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														],
														"id": 2202,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "3859:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2092_$returns$__$",
															"typeString": "function (enum ECDSAUpgradeable.RecoverError) pure"
														}
													},
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2205,
												"nodeType": "ExpressionStatement",
												"src": "3859:18:15"
											},
											{
												"expression": {
													"id": 2206,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2193,
													"src": "3894:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2191,
												"id": 2207,
												"nodeType": "Return",
												"src": "3887:16:15"
											}
										]
									},
									"documentation": {
										"id": 2183,
										"nodeType": "StructuredDocumentation",
										"src": "2903:775:15",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."
									},
									"id": 2209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3692:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3708:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "3700:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3700:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3727:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "3714:22:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3714:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3699:38:15"
									},
									"returnParameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2209,
												"src": "3761:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3760:9:15"
									},
									"scope": 2443,
									"src": "3683:227:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "4297:203:15",
										"statements": [
											{
												"assignments": [
													2225
												],
												"declarations": [
													{
														"constant": false,
														"id": 2225,
														"mutability": "mutable",
														"name": "s",
														"nameLocation": "4315:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 2255,
														"src": "4307:9:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2224,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4307:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2232,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2226,
														"name": "vs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "4319:2:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4332:66:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																},
																"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9967"
																}
															],
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4324:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 2227,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4324:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4324:75:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4319:80:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4307:92:15"
											},
											{
												"assignments": [
													2234
												],
												"declarations": [
													{
														"constant": false,
														"id": 2234,
														"mutability": "mutable",
														"name": "v",
														"nameLocation": "4415:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 2255,
														"src": "4409:7:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 2233,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4409:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2247,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 2239,
																					"name": "vs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "4434:2:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 2238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "4426:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 2237,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4426:7:15",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4426:11:15",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">>",
																		"rightExpression": {
																			"hexValue": "323535",
																			"id": 2241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4441:3:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_255_by_1",
																				"typeString": "int_const 255"
																			},
																			"value": "255"
																		},
																		"src": "4426:18:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2243,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4425:20:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3237",
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4448:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_27_by_1",
																	"typeString": "int_const 27"
																},
																"value": "27"
															},
															"src": "4425:25:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4419:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 2235,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4419:5:15",
															"typeDescriptions": {}
														}
													},
													"id": 2246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4419:32:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4409:42:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2249,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2212,
															"src": "4479:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2250,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "4485:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2251,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "4488:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2252,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "4491:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2248,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2182,
															2256,
															2350
														],
														"referencedDeclaration": 2350,
														"src": "4468:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2092_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4468:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2092_$",
														"typeString": "tuple(address,enum ECDSAUpgradeable.RecoverError)"
													}
												},
												"functionReturnParameters": 2223,
												"id": 2254,
												"nodeType": "Return",
												"src": "4461:32:15"
											}
										]
									},
									"documentation": {
										"id": 2210,
										"nodeType": "StructuredDocumentation",
										"src": "3916:243:15",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4173:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2212,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "4193:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4223:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "4215:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4215:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4242:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "4234:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4234:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:67:15"
									},
									"returnParameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "4274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4274:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "4283:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2092",
													"typeString": "enum ECDSAUpgradeable.RecoverError"
												},
												"typeName": {
													"id": 2221,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2220,
														"name": "RecoverError",
														"nameLocations": [
															"4283:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2092,
														"src": "4283:12:15"
													},
													"referencedDeclaration": 2092,
													"src": "4283:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2092",
														"typeString": "enum ECDSAUpgradeable.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4273:23:15"
									},
									"scope": 2443,
									"src": "4164:336:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2285,
										"nodeType": "Block",
										"src": "4781:136:15",
										"statements": [
											{
												"assignments": [
													2269,
													2272
												],
												"declarations": [
													{
														"constant": false,
														"id": 2269,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4800:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2285,
														"src": "4792:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2268,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4792:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2272,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4824:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2285,
														"src": "4811:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2092",
															"typeString": "enum ECDSAUpgradeable.RecoverError"
														},
														"typeName": {
															"id": 2271,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2270,
																"name": "RecoverError",
																"nameLocations": [
																	"4811:12:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2092,
																"src": "4811:12:15"
															},
															"referencedDeclaration": 2092,
															"src": "4811:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2278,
												"initialValue": {
													"arguments": [
														{
															"id": 2274,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "4844:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2275,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "4850:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2276,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2263,
															"src": "4853:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2273,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2182,
															2256,
															2350
														],
														"referencedDeclaration": 2256,
														"src": "4833:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2092_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4833:23:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2092_$",
														"typeString": "tuple(address,enum ECDSAUpgradeable.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4791:65:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2280,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "4878:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														],
														"id": 2279,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "4866:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2092_$returns$__$",
															"typeString": "function (enum ECDSAUpgradeable.RecoverError) pure"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4866:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2282,
												"nodeType": "ExpressionStatement",
												"src": "4866:18:15"
											},
											{
												"expression": {
													"id": 2283,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2269,
													"src": "4901:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2267,
												"id": 2284,
												"nodeType": "Return",
												"src": "4894:16:15"
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "4506:154:15",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"
									},
									"id": 2286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4674:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4699:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4691:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4691:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4721:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4713:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2260,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4740:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4732:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4732:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4681:67:15"
									},
									"returnParameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2286,
												"src": "4772:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4772:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4771:9:15"
									},
									"scope": 2443,
									"src": "4665:252:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2349,
										"nodeType": "Block",
										"src": "5240:1345:15",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2305,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2295,
																"src": "6136:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6128:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2303,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6128:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6128:10:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 2307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6141:66:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6128:79:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2318,
												"nodeType": "IfStatement",
												"src": "6124:161:15",
												"trueBody": {
													"id": 2317,
													"nodeType": "Block",
													"src": "6209:76:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2311,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6239:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6231:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2309,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6231:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6231:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2313,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2092,
																			"src": "6243:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2092_$",
																				"typeString": "type(enum ECDSAUpgradeable.RecoverError)"
																			}
																		},
																		"id": 2314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6256:17:15",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2090,
																		"src": "6243:30:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2092",
																			"typeString": "enum ECDSAUpgradeable.RecoverError"
																		}
																	}
																],
																"id": 2315,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6230:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2092_$",
																	"typeString": "tuple(address,enum ECDSAUpgradeable.RecoverError)"
																}
															},
															"functionReturnParameters": 2302,
															"id": 2316,
															"nodeType": "Return",
															"src": "6223:51:15"
														}
													]
												}
											},
											{
												"assignments": [
													2320
												],
												"declarations": [
													{
														"constant": false,
														"id": 2320,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6387:6:15",
														"nodeType": "VariableDeclaration",
														"scope": 2349,
														"src": "6379:14:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2319,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6379:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2327,
												"initialValue": {
													"arguments": [
														{
															"id": 2322,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2289,
															"src": "6406:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2323,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2291,
															"src": "6412:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2324,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2293,
															"src": "6415:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2325,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2295,
															"src": "6418:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2321,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6396:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6396:24:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6379:41:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2328,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "6434:6:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6452:1:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6444:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2329,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6444:7:15",
																"typeDescriptions": {}
															}
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6444:10:15",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6434:20:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2343,
												"nodeType": "IfStatement",
												"src": "6430:101:15",
												"trueBody": {
													"id": 2342,
													"nodeType": "Block",
													"src": "6456:75:15",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6486:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2335,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6478:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2334,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6478:7:15",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6478:10:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 2338,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2092,
																			"src": "6490:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$2092_$",
																				"typeString": "type(enum ECDSAUpgradeable.RecoverError)"
																			}
																		},
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6503:16:15",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2088,
																		"src": "6490:29:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$2092",
																			"typeString": "enum ECDSAUpgradeable.RecoverError"
																		}
																	}
																],
																"id": 2340,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6477:43:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2092_$",
																	"typeString": "tuple(address,enum ECDSAUpgradeable.RecoverError)"
																}
															},
															"functionReturnParameters": 2302,
															"id": 2341,
															"nodeType": "Return",
															"src": "6470:50:15"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2344,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2320,
															"src": "6549:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2345,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2092,
																"src": "6557:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$2092_$",
																	"typeString": "type(enum ECDSAUpgradeable.RecoverError)"
																}
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6570:7:15",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2087,
															"src": "6557:20:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														}
													],
													"id": 2347,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6548:30:15",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2092_$",
														"typeString": "tuple(address,enum ECDSAUpgradeable.RecoverError)"
													}
												},
												"functionReturnParameters": 2302,
												"id": 2348,
												"nodeType": "Return",
												"src": "6541:37:15"
											}
										]
									},
									"documentation": {
										"id": 2287,
										"nodeType": "StructuredDocumentation",
										"src": "4923:163:15",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"
									},
									"id": 2350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5100:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5128:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "5120:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5148:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "5142:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2290,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5142:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5167:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "5159:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2292,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5159:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5186:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "5178:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2294,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5178:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5110:83:15"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "5217:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5217:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2350,
												"src": "5226:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$2092",
													"typeString": "enum ECDSAUpgradeable.RecoverError"
												},
												"typeName": {
													"id": 2300,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2299,
														"name": "RecoverError",
														"nameLocations": [
															"5226:12:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2092,
														"src": "5226:12:15"
													},
													"referencedDeclaration": 2092,
													"src": "5226:12:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$2092",
														"typeString": "enum ECDSAUpgradeable.RecoverError"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5216:23:15"
									},
									"scope": 2443,
									"src": "5091:1494:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2382,
										"nodeType": "Block",
										"src": "6850:138:15",
										"statements": [
											{
												"assignments": [
													2365,
													2368
												],
												"declarations": [
													{
														"constant": false,
														"id": 2365,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6869:9:15",
														"nodeType": "VariableDeclaration",
														"scope": 2382,
														"src": "6861:17:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2364,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6861:7:15",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2368,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6893:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 2382,
														"src": "6880:18:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$2092",
															"typeString": "enum ECDSAUpgradeable.RecoverError"
														},
														"typeName": {
															"id": 2367,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2366,
																"name": "RecoverError",
																"nameLocations": [
																	"6880:12:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2092,
																"src": "6880:12:15"
															},
															"referencedDeclaration": 2092,
															"src": "6880:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2375,
												"initialValue": {
													"arguments": [
														{
															"id": 2370,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "6913:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2371,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2355,
															"src": "6919:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 2372,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2357,
															"src": "6922:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2373,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "6925:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 2369,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2182,
															2256,
															2350
														],
														"referencedDeclaration": 2350,
														"src": "6902:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2092_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSAUpgradeable.RecoverError)"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6902:25:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$2092_$",
														"typeString": "tuple(address,enum ECDSAUpgradeable.RecoverError)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6860:67:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2377,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2368,
															"src": "6949:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$2092",
																"typeString": "enum ECDSAUpgradeable.RecoverError"
															}
														],
														"id": 2376,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "6937:11:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$2092_$returns$__$",
															"typeString": "function (enum ECDSAUpgradeable.RecoverError) pure"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6937:18:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "6937:18:15"
											},
											{
												"expression": {
													"id": 2380,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2365,
													"src": "6972:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2363,
												"id": 2381,
												"nodeType": "Return",
												"src": "6965:16:15"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "6591:122:15",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 2383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6727:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6752:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "6744:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6744:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6772:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "6766:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2354,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6766:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6791:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "6783:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6783:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6810:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "6802:9:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2358,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6802:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6734:83:15"
									},
									"returnParameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2383,
												"src": "6841:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6841:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6840:9:15"
									},
									"scope": 2443,
									"src": "6718:270:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2399,
										"nodeType": "Block",
										"src": "7356:187:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
																	"id": 2394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7494:34:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n32"
																},
																{
																	"id": 2395,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2386,
																	"src": "7530:4:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2392,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7477:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7481:12:15",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7477:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7477:58:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2391,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7467:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7467:69:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2390,
												"id": 2398,
												"nodeType": "Return",
												"src": "7460:76:15"
											}
										]
									},
									"documentation": {
										"id": 2384,
										"nodeType": "StructuredDocumentation",
										"src": "6994:279:15",
										"text": " @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 2400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7287:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "7318:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "7310:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7310:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7309:14:15"
									},
									"returnParameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2400,
												"src": "7347:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2388,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7347:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:9:15"
									},
									"scope": 2443,
									"src": "7278:265:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2421,
										"nodeType": "Block",
										"src": "7908:127:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "19457468657265756d205369676e6564204d6573736167653a0a",
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7952:32:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	"value": "\u0019Ethereum Signed Message:\n"
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"id": 2414,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2403,
																				"src": "8014:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "8016:6:15",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "8014:8:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2412,
																			"name": "StringsUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2082,
																			"src": "7986:18:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$2082_$",
																				"typeString": "type(library StringsUpgradeable)"
																			}
																		},
																		"id": 2413,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8005:8:15",
																		"memberName": "toString",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1965,
																		"src": "7986:27:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7986:37:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 2417,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2403,
																	"src": "8025:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4",
																		"typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 2409,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7935:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7939:12:15",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7935:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7935:92:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2408,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7925:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7925:103:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2407,
												"id": 2420,
												"nodeType": "Return",
												"src": "7918:110:15"
											}
										]
									},
									"documentation": {
										"id": 2401,
										"nodeType": "StructuredDocumentation",
										"src": "7549:274:15",
										"text": " @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."
									},
									"id": 2422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toEthSignedMessageHash",
									"nameLocation": "7837:22:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "7873:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "7860:14:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7860:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7859:16:15"
									},
									"returnParameters": {
										"id": 2407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2422,
												"src": "7899:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2405,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7899:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7898:9:15"
									},
									"scope": 2443,
									"src": "7828:207:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2441,
										"nodeType": "Block",
										"src": "8476:92:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "1901",
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8520:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"id": 2436,
																	"name": "domainSeparator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2425,
																	"src": "8532:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 2437,
																	"name": "structHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "8549:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string hex\"1901\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 2433,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "8503:3:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "8507:12:15",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "8503:16:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8503:57:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2432,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "8493:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8493:68:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2431,
												"id": 2440,
												"nodeType": "Return",
												"src": "8486:75:15"
											}
										]
									},
									"documentation": {
										"id": 2423,
										"nodeType": "StructuredDocumentation",
										"src": "8041:328:15",
										"text": " @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."
									},
									"id": 2442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toTypedDataHash",
									"nameLocation": "8383:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "domainSeparator",
												"nameLocation": "8407:15:15",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "8399:23:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8399:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "structHash",
												"nameLocation": "8432:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "8424:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8424:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:45:15"
									},
									"returnParameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2442,
												"src": "8467:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2429,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8467:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8466:9:15"
									},
									"scope": 2443,
									"src": "8374:194:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2444,
							"src": "380:8190:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:8459:15"
				},
				"id": 15
			},
			"lib/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							3308
						]
					},
					"id": 3309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2445,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2446,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3308,
							"linearizedBaseContracts": [
								3308
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 2450,
									"members": [
										{
											"id": 2447,
											"name": "Down",
											"nameLocation": "256:4:16",
											"nodeType": "EnumValue",
											"src": "256:4:16"
										},
										{
											"id": 2448,
											"name": "Up",
											"nameLocation": "298:2:16",
											"nodeType": "EnumValue",
											"src": "298:2:16"
										},
										{
											"id": 2449,
											"name": "Zero",
											"nameLocation": "329:4:16",
											"nodeType": "EnumValue",
											"src": "329:4:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:16",
									"nodeType": "EnumDefinition",
									"src": "232:122:16"
								},
								{
									"body": {
										"id": 2467,
										"nodeType": "Block",
										"src": "491:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2462,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2460,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2453,
															"src": "508:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2461,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2455,
															"src": "512:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2464,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2455,
														"src": "520:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:16",
													"trueExpression": {
														"id": 2463,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2453,
														"src": "516:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2459,
												"id": 2466,
												"nodeType": "Return",
												"src": "501:20:16"
											}
										]
									},
									"documentation": {
										"id": 2451,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "437:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "448:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:16"
									},
									"returnParameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2468,
												"src": "482:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:16"
									},
									"scope": 3308,
									"src": "424:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "666:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2478,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2471,
															"src": "683:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2479,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2473,
															"src": "687:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2482,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2473,
														"src": "695:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:16",
													"trueExpression": {
														"id": 2481,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "691:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2477,
												"id": 2484,
												"nodeType": "Return",
												"src": "676:20:16"
											}
										]
									},
									"documentation": {
										"id": 2469,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "623:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:16"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "657:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:16"
									},
									"scope": 3308,
									"src": "599:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2508,
										"nodeType": "Block",
										"src": "887:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2496,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2489,
																	"src": "942:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2497,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "946:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2499,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2500,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2489,
																		"src": "952:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2501,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2491,
																		"src": "956:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2503,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2495,
												"id": 2507,
												"nodeType": "Return",
												"src": "934:28:16"
											}
										]
									},
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "833:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "844:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:16"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:16"
									},
									"scope": 3308,
									"src": "816:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2533,
										"nodeType": "Block",
										"src": "1239:123:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2519,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2512,
															"src": "1327:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2523,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2512,
																			"src": "1341:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2526,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2527,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2514,
																"src": "1350:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2522,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2518,
												"id": 2532,
												"nodeType": "Return",
												"src": "1320:35:16"
											}
										]
									},
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 2534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "1185:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "1196:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:16"
									},
									"returnParameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "1230:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:16"
									},
									"scope": 3308,
									"src": "1168:194:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "1806:3797:16",
										"statements": [
											{
												"id": 2654,
												"nodeType": "UncheckedBlock",
												"src": "1816:3781:16",
												"statements": [
													{
														"assignments": [
															2547
														],
														"declarations": [
															{
																"constant": false,
																"id": 2547,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2145:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2654,
																"src": "2137:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2546,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2137:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2548,
														"nodeType": "VariableDeclarationStatement",
														"src": "2137:13:16"
													},
													{
														"assignments": [
															2550
														],
														"declarations": [
															{
																"constant": false,
																"id": 2550,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2217:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2654,
																"src": "2209:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2209:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2551,
														"nodeType": "VariableDeclarationStatement",
														"src": "2209:13:16"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2289:157:16",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2307:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2324:1:16"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2327:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2334:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2330:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2330:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2317:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2317:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2311:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2354:18:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2367:1:16"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2370:1:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2363:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2363:9:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2354:5:16"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2389:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2406:2:16"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2410:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2402:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2402:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2421:2:16"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2425:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2418:2:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2418:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2398:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2398:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2389:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2547,
																"isOffset": false,
																"isSlot": false,
																"src": "2354:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2547,
																"isOffset": false,
																"isSlot": false,
																"src": "2410:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2547,
																"isOffset": false,
																"isSlot": false,
																"src": "2425:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2550,
																"isOffset": false,
																"isSlot": false,
																"src": "2389:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2537,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2537,
																"isOffset": false,
																"isSlot": false,
																"src": "2367:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2539,
																"isOffset": false,
																"isSlot": false,
																"src": "2327:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2539,
																"isOffset": false,
																"isSlot": false,
																"src": "2370:1:16",
																"valueSize": 1
															}
														],
														"id": 2552,
														"nodeType": "InlineAssembly",
														"src": "2280:166:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2553,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2550,
																"src": "2527:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2536:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2527:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2561,
														"nodeType": "IfStatement",
														"src": "2523:75:16",
														"trueBody": {
															"id": 2560,
															"nodeType": "Block",
															"src": "2539:59:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2556,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "2564:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2557,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "2572:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2564:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2545,
																	"id": 2559,
																	"nodeType": "Return",
																	"src": "2557:26:16"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2563,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "2708:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 2564,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2550,
																		"src": "2722:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2708:19:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2562,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2700:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2700:28:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2567,
														"nodeType": "ExpressionStatement",
														"src": "2700:28:16"
													},
													{
														"assignments": [
															2569
														],
														"declarations": [
															{
																"constant": false,
																"id": 2569,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2992:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2654,
																"src": "2984:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2568,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2984:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2570,
														"nodeType": "VariableDeclarationStatement",
														"src": "2984:17:16"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3024:291:16",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3093:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3113:1:16"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3116:1:16"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3119:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3106:6:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3106:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3093:9:16"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3213:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3226:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3236:9:16"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3247:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3233:2:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3233:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3222:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3222:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3213:5:16"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3271:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3284:5:16"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3291:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3271:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2541,
																"isOffset": false,
																"isSlot": false,
																"src": "3119:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2547,
																"isOffset": false,
																"isSlot": false,
																"src": "3247:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2547,
																"isOffset": false,
																"isSlot": false,
																"src": "3271:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2547,
																"isOffset": false,
																"isSlot": false,
																"src": "3284:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2550,
																"isOffset": false,
																"isSlot": false,
																"src": "3213:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2550,
																"isOffset": false,
																"isSlot": false,
																"src": "3226:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2569,
																"isOffset": false,
																"isSlot": false,
																"src": "3093:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2569,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2569,
																"isOffset": false,
																"isSlot": false,
																"src": "3291:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2537,
																"isOffset": false,
																"isSlot": false,
																"src": "3113:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2539,
																"isOffset": false,
																"isSlot": false,
																"src": "3116:1:16",
																"valueSize": 1
															}
														],
														"id": 2571,
														"nodeType": "InlineAssembly",
														"src": "3015:300:16"
													},
													{
														"assignments": [
															2573
														],
														"declarations": [
															{
																"constant": false,
																"id": 2573,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3630:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2654,
																"src": "3622:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2572,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3622:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2581,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2574,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2541,
																"src": "3637:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3652:12:16",
																			"subExpression": {
																				"id": 2575,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2541,
																				"src": "3653:11:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3667:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3652:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2579,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3651:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3637:32:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3622:47:16"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3692:362:16",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3757:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3776:11:16"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3789:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3757:11:16"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3861:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3874:5:16"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3881:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3870:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3861:5:16"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4001:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4021:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4024:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4017:3:16"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4017:12:16"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4031:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4013:3:16"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4013:23:16"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4038:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4009:3:16"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4009:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4001:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2541,
																"isOffset": false,
																"isSlot": false,
																"src": "3757:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2541,
																"isOffset": false,
																"isSlot": false,
																"src": "3776:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2547,
																"isOffset": false,
																"isSlot": false,
																"src": "3861:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2547,
																"isOffset": false,
																"isSlot": false,
																"src": "3874:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2573,
																"isOffset": false,
																"isSlot": false,
																"src": "3789:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2573,
																"isOffset": false,
																"isSlot": false,
																"src": "3881:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2573,
																"isOffset": false,
																"isSlot": false,
																"src": "4001:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2573,
																"isOffset": false,
																"isSlot": false,
																"src": "4024:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2573,
																"isOffset": false,
																"isSlot": false,
																"src": "4031:4:16",
																"valueSize": 1
															}
														],
														"id": 2582,
														"nodeType": "InlineAssembly",
														"src": "3683:371:16"
													},
													{
														"expression": {
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2583,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2547,
																"src": "4120:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2584,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2550,
																	"src": "4129:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2585,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2573,
																	"src": "4137:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4129:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4120:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2588,
														"nodeType": "ExpressionStatement",
														"src": "4120:21:16"
													},
													{
														"assignments": [
															2590
														],
														"declarations": [
															{
																"constant": false,
																"id": 2590,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4467:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2654,
																"src": "4459:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2589,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4459:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2597,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4478:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2592,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "4482:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4478:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2594,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4477:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4497:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4477:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4459:39:16"
													},
													{
														"expression": {
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2598,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "4715:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4726:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2600,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "4730:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2601,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "4744:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4730:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4726:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4715:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2605,
														"nodeType": "ExpressionStatement",
														"src": "4715:36:16"
													},
													{
														"expression": {
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2606,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "4784:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4795:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2608,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "4799:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2609,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "4813:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4799:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4795:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4784:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2613,
														"nodeType": "ExpressionStatement",
														"src": "4784:36:16"
													},
													{
														"expression": {
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2614,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "4854:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4865:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2616,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "4869:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2617,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "4883:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4869:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4865:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4854:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2621,
														"nodeType": "ExpressionStatement",
														"src": "4854:36:16"
													},
													{
														"expression": {
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2622,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "4924:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4935:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2624,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "4939:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2625,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "4953:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4939:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4935:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4924:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2629,
														"nodeType": "ExpressionStatement",
														"src": "4924:36:16"
													},
													{
														"expression": {
															"id": 2636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2630,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "4994:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5005:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2632,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "5009:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2633,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "5023:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5009:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5005:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4994:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2637,
														"nodeType": "ExpressionStatement",
														"src": "4994:36:16"
													},
													{
														"expression": {
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2638,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2590,
																"src": "5065:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5076:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2640,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2541,
																		"src": "5080:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2641,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2590,
																		"src": "5094:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5080:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5076:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2645,
														"nodeType": "ExpressionStatement",
														"src": "5065:36:16"
													},
													{
														"expression": {
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2646,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2544,
																"src": "5535:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2647,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2547,
																	"src": "5544:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2648,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2590,
																	"src": "5552:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5544:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5535:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2651,
														"nodeType": "ExpressionStatement",
														"src": "5535:24:16"
													},
													{
														"expression": {
															"id": 2652,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "5580:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2545,
														"id": 2653,
														"nodeType": "Return",
														"src": "5573:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2535,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2537,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1711:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "1703:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1730:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "1722:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1749:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "1741:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1741:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:73:16"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1798:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "1790:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:16:16"
									},
									"scope": 3308,
									"src": "1678:3925:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2699,
										"nodeType": "Block",
										"src": "5883:189:16",
										"statements": [
											{
												"assignments": [
													2672
												],
												"declarations": [
													{
														"constant": false,
														"id": 2672,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5901:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2699,
														"src": "5893:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2671,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5893:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2678,
												"initialValue": {
													"arguments": [
														{
															"id": 2674,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "5917:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2675,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2661,
															"src": "5920:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2676,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2663,
															"src": "5923:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2673,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2656,
															2700
														],
														"referencedDeclaration": 2656,
														"src": "5910:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5910:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5893:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$2450",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 2682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2679,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2666,
															"src": "5949:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2450",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2680,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2450,
																"src": "5961:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$2450_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5970:2:16",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2448,
															"src": "5961:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$2450",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "5949:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2689,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2684,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2659,
																	"src": "5983:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2685,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2661,
																	"src": "5986:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2686,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2663,
																	"src": "5989:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2683,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5976:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5976:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6004:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5976:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5949:56:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2696,
												"nodeType": "IfStatement",
												"src": "5945:98:16",
												"trueBody": {
													"id": 2695,
													"nodeType": "Block",
													"src": "6007:36:16",
													"statements": [
														{
															"expression": {
																"id": 2693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2691,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2672,
																	"src": "6021:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6031:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6021:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2694,
															"nodeType": "ExpressionStatement",
															"src": "6021:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2697,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2672,
													"src": "6059:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2670,
												"id": 2698,
												"nodeType": "Return",
												"src": "6052:13:16"
											}
										]
									},
									"documentation": {
										"id": 2657,
										"nodeType": "StructuredDocumentation",
										"src": "5609:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5744:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5768:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "5760:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5760:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5787:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "5779:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5779:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5806:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "5798:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5798:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5836:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "5827:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2450",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2665,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2664,
														"name": "Rounding",
														"nameLocations": [
															"5827:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2450,
														"src": "5827:8:16"
													},
													"referencedDeclaration": 2450,
													"src": "5827:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2450",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5750:100:16"
									},
									"returnParameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2700,
												"src": "5874:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5874:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:9:16"
									},
									"scope": 3308,
									"src": "5735:337:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2811,
										"nodeType": "Block",
										"src": "6348:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2708,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2703,
														"src": "6362:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6367:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6362:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2714,
												"nodeType": "IfStatement",
												"src": "6358:45:16",
												"trueBody": {
													"id": 2713,
													"nodeType": "Block",
													"src": "6370:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6391:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2707,
															"id": 2712,
															"nodeType": "Return",
															"src": "6384:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2716
												],
												"declarations": [
													{
														"constant": false,
														"id": 2716,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7090:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2811,
														"src": "7082:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7082:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2725,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2717,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7099:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2719,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "7110:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2718,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2980,
																			3016
																		],
																		"referencedDeclaration": 2980,
																		"src": "7105:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7105:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7116:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7105:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2723,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7104:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7099:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7082:36:16"
											},
											{
												"id": 2810,
												"nodeType": "UncheckedBlock",
												"src": "7519:408:16",
												"statements": [
													{
														"expression": {
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2726,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "7543:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2727,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2716,
																				"src": "7553:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2728,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "7562:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2729,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2716,
																					"src": "7566:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7562:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7553:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2732,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7552:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7577:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7552:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7543:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2736,
														"nodeType": "ExpressionStatement",
														"src": "7543:35:16"
													},
													{
														"expression": {
															"id": 2746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2737,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "7592:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2738,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2716,
																				"src": "7602:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2741,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2739,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "7611:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2740,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2716,
																					"src": "7615:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7611:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7602:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2743,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7601:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7626:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7601:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7592:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2747,
														"nodeType": "ExpressionStatement",
														"src": "7592:35:16"
													},
													{
														"expression": {
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2748,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "7641:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2749,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2716,
																				"src": "7651:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2750,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "7660:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2751,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2716,
																					"src": "7664:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7660:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7651:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2754,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7650:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7675:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7650:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7641:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2758,
														"nodeType": "ExpressionStatement",
														"src": "7641:35:16"
													},
													{
														"expression": {
															"id": 2768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2759,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "7690:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2760,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2716,
																				"src": "7700:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2761,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "7709:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2762,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2716,
																					"src": "7713:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7709:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7700:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2765,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7699:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7724:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7699:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7690:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2769,
														"nodeType": "ExpressionStatement",
														"src": "7690:35:16"
													},
													{
														"expression": {
															"id": 2779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2770,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "7739:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2775,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2771,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2716,
																				"src": "7749:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2772,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "7758:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2773,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2716,
																					"src": "7762:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7758:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7749:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2776,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7748:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7773:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7748:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7739:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2780,
														"nodeType": "ExpressionStatement",
														"src": "7739:35:16"
													},
													{
														"expression": {
															"id": 2790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2781,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "7788:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2786,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2782,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2716,
																				"src": "7798:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2785,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2783,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "7807:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2784,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2716,
																					"src": "7811:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7807:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7798:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2787,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7797:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7822:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7797:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7788:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2791,
														"nodeType": "ExpressionStatement",
														"src": "7788:35:16"
													},
													{
														"expression": {
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2792,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "7837:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2793,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2716,
																				"src": "7847:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2794,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2703,
																					"src": "7856:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2795,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2716,
																					"src": "7860:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7856:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7847:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2798,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7846:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7871:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7846:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7837:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2802,
														"nodeType": "ExpressionStatement",
														"src": "7837:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2804,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2716,
																	"src": "7897:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2807,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2805,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2703,
																		"src": "7905:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2806,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2716,
																		"src": "7909:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7905:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2803,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2486,
																"src": "7893:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7893:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2707,
														"id": 2809,
														"nodeType": "Return",
														"src": "7886:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2701,
										"nodeType": "StructuredDocumentation",
										"src": "6078:208:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6300:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6313:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "6305:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6305:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6304:11:16"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2812,
												"src": "6339:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6339:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6338:9:16"
									},
									"scope": 3308,
									"src": "6291:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2847,
										"nodeType": "Block",
										"src": "8109:161:16",
										"statements": [
											{
												"id": 2846,
												"nodeType": "UncheckedBlock",
												"src": "8119:145:16",
												"statements": [
													{
														"assignments": [
															2824
														],
														"declarations": [
															{
																"constant": false,
																"id": 2824,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8151:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2846,
																"src": "8143:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2823,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8143:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2828,
														"initialValue": {
															"arguments": [
																{
																	"id": 2826,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2815,
																	"src": "8165:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2825,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2812,
																	2848
																],
																"referencedDeclaration": 2812,
																"src": "8160:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8160:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8143:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2829,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2824,
																"src": "8188:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2450",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2833,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2830,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2818,
																					"src": "8198:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2450",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2831,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2450,
																						"src": "8210:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2450_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2832,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8219:2:16",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2448,
																					"src": "8210:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2450",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8198:23:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2836,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2834,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2824,
																						"src": "8225:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2835,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2824,
																						"src": "8234:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8225:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2837,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2815,
																					"src": "8243:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8225:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8198:46:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8251:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8198:54:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8247:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2843,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8197:56:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8188:65:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2822,
														"id": 2845,
														"nodeType": "Return",
														"src": "8181:72:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2813,
										"nodeType": "StructuredDocumentation",
										"src": "7939:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8042:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8055:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "8047:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8047:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8067:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "8058:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2450",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2817,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2816,
														"name": "Rounding",
														"nameLocations": [
															"8058:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2450,
														"src": "8058:8:16"
													},
													"referencedDeclaration": 2450,
													"src": "8058:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2450",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8046:30:16"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2848,
												"src": "8100:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8100:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8099:9:16"
									},
									"scope": 3308,
									"src": "8033:237:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2979,
										"nodeType": "Block",
										"src": "8455:922:16",
										"statements": [
											{
												"assignments": [
													2857
												],
												"declarations": [
													{
														"constant": false,
														"id": 2857,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8473:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2979,
														"src": "8465:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2856,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8465:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2859,
												"initialValue": {
													"hexValue": "30",
													"id": 2858,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8482:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8465:18:16"
											},
											{
												"id": 2976,
												"nodeType": "UncheckedBlock",
												"src": "8493:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2860,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "8521:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2861,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8530:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8521:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8536:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8521:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2874,
														"nodeType": "IfStatement",
														"src": "8517:99:16",
														"trueBody": {
															"id": 2873,
															"nodeType": "Block",
															"src": "8539:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 2867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2865,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2851,
																			"src": "8557:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8567:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8557:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2868,
																	"nodeType": "ExpressionStatement",
																	"src": "8557:13:16"
																},
																{
																	"expression": {
																		"id": 2871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2869,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2857,
																			"src": "8588:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8598:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8588:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2872,
																	"nodeType": "ExpressionStatement",
																	"src": "8588:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2875,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "8633:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8642:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8633:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8647:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8633:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2889,
														"nodeType": "IfStatement",
														"src": "8629:96:16",
														"trueBody": {
															"id": 2888,
															"nodeType": "Block",
															"src": "8650:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2880,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2851,
																			"src": "8668:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8678:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8668:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2883,
																	"nodeType": "ExpressionStatement",
																	"src": "8668:12:16"
																},
																{
																	"expression": {
																		"id": 2886,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2884,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2857,
																			"src": "8698:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2885,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8708:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8698:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2887,
																	"nodeType": "ExpressionStatement",
																	"src": "8698:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2890,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "8742:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8751:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8742:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8756:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8742:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2904,
														"nodeType": "IfStatement",
														"src": "8738:96:16",
														"trueBody": {
															"id": 2903,
															"nodeType": "Block",
															"src": "8759:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2895,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2851,
																			"src": "8777:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8787:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8777:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2898,
																	"nodeType": "ExpressionStatement",
																	"src": "8777:12:16"
																},
																{
																	"expression": {
																		"id": 2901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2899,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2857,
																			"src": "8807:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8807:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2902,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2905,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "8851:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8860:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8851:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8865:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8851:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2919,
														"nodeType": "IfStatement",
														"src": "8847:96:16",
														"trueBody": {
															"id": 2918,
															"nodeType": "Block",
															"src": "8868:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2910,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2851,
																			"src": "8886:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8896:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8886:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2913,
																	"nodeType": "ExpressionStatement",
																	"src": "8886:12:16"
																},
																{
																	"expression": {
																		"id": 2916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2914,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2857,
																			"src": "8916:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8926:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8916:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2917,
																	"nodeType": "ExpressionStatement",
																	"src": "8916:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2920,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "8960:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8960:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8973:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8960:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2934,
														"nodeType": "IfStatement",
														"src": "8956:93:16",
														"trueBody": {
															"id": 2933,
															"nodeType": "Block",
															"src": "8976:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2925,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2851,
																			"src": "8994:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9004:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8994:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2928,
																	"nodeType": "ExpressionStatement",
																	"src": "8994:11:16"
																},
																{
																	"expression": {
																		"id": 2931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2929,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2857,
																			"src": "9023:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9033:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9023:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2932,
																	"nodeType": "ExpressionStatement",
																	"src": "9023:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2935,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "9066:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9075:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9066:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9079:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9066:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2949,
														"nodeType": "IfStatement",
														"src": "9062:93:16",
														"trueBody": {
															"id": 2948,
															"nodeType": "Block",
															"src": "9082:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2940,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2851,
																			"src": "9100:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9110:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9100:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2943,
																	"nodeType": "ExpressionStatement",
																	"src": "9100:11:16"
																},
																{
																	"expression": {
																		"id": 2946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2944,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2857,
																			"src": "9129:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9139:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9129:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2947,
																	"nodeType": "ExpressionStatement",
																	"src": "9129:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2950,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "9172:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9172:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9185:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9172:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2964,
														"nodeType": "IfStatement",
														"src": "9168:93:16",
														"trueBody": {
															"id": 2963,
															"nodeType": "Block",
															"src": "9188:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2955,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2851,
																			"src": "9206:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9216:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9206:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2958,
																	"nodeType": "ExpressionStatement",
																	"src": "9206:11:16"
																},
																{
																	"expression": {
																		"id": 2961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2959,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2857,
																			"src": "9235:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9245:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9235:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2962,
																	"nodeType": "ExpressionStatement",
																	"src": "9235:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2965,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2851,
																	"src": "9278:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9287:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9278:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9291:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9278:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2975,
														"nodeType": "IfStatement",
														"src": "9274:64:16",
														"trueBody": {
															"id": 2974,
															"nodeType": "Block",
															"src": "9294:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2970,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2857,
																			"src": "9312:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9322:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9312:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2973,
																	"nodeType": "ExpressionStatement",
																	"src": "9312:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2977,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2857,
													"src": "9364:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2855,
												"id": 2978,
												"nodeType": "Return",
												"src": "9357:13:16"
											}
										]
									},
									"documentation": {
										"id": 2849,
										"nodeType": "StructuredDocumentation",
										"src": "8276:113:16",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8403:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8416:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2980,
												"src": "8408:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8408:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8407:15:16"
									},
									"returnParameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2980,
												"src": "8446:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8446:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8445:9:16"
									},
									"scope": 3308,
									"src": "8394:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3015,
										"nodeType": "Block",
										"src": "9610:165:16",
										"statements": [
											{
												"id": 3014,
												"nodeType": "UncheckedBlock",
												"src": "9620:149:16",
												"statements": [
													{
														"assignments": [
															2992
														],
														"declarations": [
															{
																"constant": false,
																"id": 2992,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9652:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3014,
																"src": "9644:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2991,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9644:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2996,
														"initialValue": {
															"arguments": [
																{
																	"id": 2994,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2983,
																	"src": "9666:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2993,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2980,
																	3016
																],
																"referencedDeclaration": 2980,
																"src": "9661:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9661:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9644:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2997,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2992,
																"src": "9693:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2450",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 3001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2998,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2986,
																					"src": "9703:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2450",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2999,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2450,
																						"src": "9715:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2450_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 3000,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9724:2:16",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2448,
																					"src": "9715:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2450",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9703:23:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3004,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3002,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9730:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 3003,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2992,
																						"src": "9735:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9730:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3005,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2983,
																					"src": "9744:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9730:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9703:46:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9756:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9703:54:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9752:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3011,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9702:56:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9693:65:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2990,
														"id": 3013,
														"nodeType": "Return",
														"src": "9686:72:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2981,
										"nodeType": "StructuredDocumentation",
										"src": "9383:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9539:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2983,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9552:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "9544:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9544:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9568:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "9559:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2450",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2985,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2984,
														"name": "Rounding",
														"nameLocations": [
															"9559:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2450,
														"src": "9559:8:16"
													},
													"referencedDeclaration": 2450,
													"src": "9559:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2450",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9543:34:16"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3016,
												"src": "9601:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9600:9:16"
									},
									"scope": 3308,
									"src": "9530:245:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3144,
										"nodeType": "Block",
										"src": "9962:828:16",
										"statements": [
											{
												"assignments": [
													3025
												],
												"declarations": [
													{
														"constant": false,
														"id": 3025,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9980:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3144,
														"src": "9972:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3024,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9972:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3027,
												"initialValue": {
													"hexValue": "30",
													"id": 3026,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9989:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9972:18:16"
											},
											{
												"id": 3141,
												"nodeType": "UncheckedBlock",
												"src": "10000:761:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3028,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "10028:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 3031,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10037:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10037:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10028:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3044,
														"nodeType": "IfStatement",
														"src": "10024:99:16",
														"trueBody": {
															"id": 3043,
															"nodeType": "Block",
															"src": "10045:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "10063:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 3036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10072:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 3035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10076:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10072:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10063:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3038,
																	"nodeType": "ExpressionStatement",
																	"src": "10063:15:16"
																},
																{
																	"expression": {
																		"id": 3041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3039,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "10096:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10106:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10096:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3042,
																	"nodeType": "ExpressionStatement",
																	"src": "10096:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3045,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "10140:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 3048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10153:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10149:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3061,
														"nodeType": "IfStatement",
														"src": "10136:99:16",
														"trueBody": {
															"id": 3060,
															"nodeType": "Block",
															"src": "10157:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3050,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "10175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 3053,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3051,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10184:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 3052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10188:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10184:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10175:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3055,
																	"nodeType": "ExpressionStatement",
																	"src": "10175:15:16"
																},
																{
																	"expression": {
																		"id": 3058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3056,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "10208:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10218:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10208:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3059,
																	"nodeType": "ExpressionStatement",
																	"src": "10208:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3062,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "10252:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 3065,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10261:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3064,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10265:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10261:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10252:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3078,
														"nodeType": "IfStatement",
														"src": "10248:99:16",
														"trueBody": {
															"id": 3077,
															"nodeType": "Block",
															"src": "10269:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 3071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3067,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "10287:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 3070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10296:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 3069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10300:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10296:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10287:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3072,
																	"nodeType": "ExpressionStatement",
																	"src": "10287:15:16"
																},
																{
																	"expression": {
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "10320:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10330:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10320:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3076,
																	"nodeType": "ExpressionStatement",
																	"src": "10320:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3079,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "10364:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 3082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10373:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10377:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10373:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10364:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3095,
														"nodeType": "IfStatement",
														"src": "10360:96:16",
														"trueBody": {
															"id": 3094,
															"nodeType": "Block",
															"src": "10380:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3084,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "10398:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 3087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3085,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10407:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 3086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10411:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10407:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10398:14:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3089,
																	"nodeType": "ExpressionStatement",
																	"src": "10398:14:16"
																},
																{
																	"expression": {
																		"id": 3092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3090,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "10430:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10440:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10430:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3093,
																	"nodeType": "ExpressionStatement",
																	"src": "10430:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3096,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "10473:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 3099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3097,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10482:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 3098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10482:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10473:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3112,
														"nodeType": "IfStatement",
														"src": "10469:96:16",
														"trueBody": {
															"id": 3111,
															"nodeType": "Block",
															"src": "10489:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3101,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "10507:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 3104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10516:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 3103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10520:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10516:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10507:14:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3106,
																	"nodeType": "ExpressionStatement",
																	"src": "10507:14:16"
																},
																{
																	"expression": {
																		"id": 3109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "10539:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10549:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10539:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3110,
																	"nodeType": "ExpressionStatement",
																	"src": "10539:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3113,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "10582:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10591:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 3115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10595:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10591:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10582:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3129,
														"nodeType": "IfStatement",
														"src": "10578:96:16",
														"trueBody": {
															"id": 3128,
															"nodeType": "Block",
															"src": "10598:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "10616:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 3121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 3119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10625:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 3120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10629:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10625:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10616:14:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3123,
																	"nodeType": "ExpressionStatement",
																	"src": "10616:14:16"
																},
																{
																	"expression": {
																		"id": 3126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3124,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "10648:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10658:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10648:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3127,
																	"nodeType": "ExpressionStatement",
																	"src": "10648:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3019,
																"src": "10691:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 3133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 3131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10700:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10704:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10700:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10691:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3140,
														"nodeType": "IfStatement",
														"src": "10687:64:16",
														"trueBody": {
															"id": 3139,
															"nodeType": "Block",
															"src": "10707:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3135,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3025,
																			"src": "10725:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10735:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10725:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3138,
																	"nodeType": "ExpressionStatement",
																	"src": "10725:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3142,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3025,
													"src": "10777:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3023,
												"id": 3143,
												"nodeType": "Return",
												"src": "10770:13:16"
											}
										]
									},
									"documentation": {
										"id": 3017,
										"nodeType": "StructuredDocumentation",
										"src": "9781:114:16",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9909:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9923:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "9915:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9915:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9914:15:16"
									},
									"returnParameters": {
										"id": 3023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3145,
												"src": "9953:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9953:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9952:9:16"
									},
									"scope": 3308,
									"src": "9900:890:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3180,
										"nodeType": "Block",
										"src": "11025:165:16",
										"statements": [
											{
												"id": 3179,
												"nodeType": "UncheckedBlock",
												"src": "11035:149:16",
												"statements": [
													{
														"assignments": [
															3157
														],
														"declarations": [
															{
																"constant": false,
																"id": 3157,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11067:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3179,
																"src": "11059:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3156,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11059:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3161,
														"initialValue": {
															"arguments": [
																{
																	"id": 3159,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3148,
																	"src": "11082:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3158,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3145,
																	3181
																],
																"referencedDeclaration": 3145,
																"src": "11076:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11076:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11059:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3162,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3157,
																"src": "11109:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2450",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 3166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3163,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3151,
																					"src": "11119:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2450",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 3164,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2450,
																						"src": "11131:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2450_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 3165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11140:2:16",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2448,
																					"src": "11131:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2450",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11119:23:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 3167,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11146:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 3168,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3157,
																						"src": "11150:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11146:10:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3170,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3148,
																					"src": "11159:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11146:18:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11119:45:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11171:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11119:53:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11167:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3176,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11118:55:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11109:64:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3155,
														"id": 3178,
														"nodeType": "Return",
														"src": "11102:71:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3146,
										"nodeType": "StructuredDocumentation",
										"src": "10796:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10953:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10967:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "10959:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10959:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10983:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "10974:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2450",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 3150,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3149,
														"name": "Rounding",
														"nameLocations": [
															"10974:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2450,
														"src": "10974:8:16"
													},
													"referencedDeclaration": 2450,
													"src": "10974:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2450",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10958:34:16"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3181,
												"src": "11016:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11016:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11015:9:16"
									},
									"scope": 3308,
									"src": "10944:246:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3267,
										"nodeType": "Block",
										"src": "11504:600:16",
										"statements": [
											{
												"assignments": [
													3190
												],
												"declarations": [
													{
														"constant": false,
														"id": 3190,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11522:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3267,
														"src": "11514:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3189,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11514:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3192,
												"initialValue": {
													"hexValue": "30",
													"id": 3191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11531:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11514:18:16"
											},
											{
												"id": 3264,
												"nodeType": "UncheckedBlock",
												"src": "11542:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3193,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3184,
																	"src": "11570:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11579:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11570:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11585:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11570:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3207,
														"nodeType": "IfStatement",
														"src": "11566:98:16",
														"trueBody": {
															"id": 3206,
															"nodeType": "Block",
															"src": "11588:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3198,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3184,
																			"src": "11606:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11616:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11606:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3201,
																	"nodeType": "ExpressionStatement",
																	"src": "11606:13:16"
																},
																{
																	"expression": {
																		"id": 3204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3202,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3190,
																			"src": "11637:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11647:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11637:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3205,
																	"nodeType": "ExpressionStatement",
																	"src": "11637:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3184,
																	"src": "11681:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11690:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11681:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11695:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11681:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3222,
														"nodeType": "IfStatement",
														"src": "11677:95:16",
														"trueBody": {
															"id": 3221,
															"nodeType": "Block",
															"src": "11698:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3213,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3184,
																			"src": "11716:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11726:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11716:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3216,
																	"nodeType": "ExpressionStatement",
																	"src": "11716:12:16"
																},
																{
																	"expression": {
																		"id": 3219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3217,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3190,
																			"src": "11746:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11756:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11746:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3220,
																	"nodeType": "ExpressionStatement",
																	"src": "11746:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3223,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3184,
																	"src": "11789:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11798:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11789:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11803:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11789:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3237,
														"nodeType": "IfStatement",
														"src": "11785:95:16",
														"trueBody": {
															"id": 3236,
															"nodeType": "Block",
															"src": "11806:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3228,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3184,
																			"src": "11824:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11834:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11824:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3231,
																	"nodeType": "ExpressionStatement",
																	"src": "11824:12:16"
																},
																{
																	"expression": {
																		"id": 3234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3232,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3190,
																			"src": "11854:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11864:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11854:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3235,
																	"nodeType": "ExpressionStatement",
																	"src": "11854:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3238,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3184,
																	"src": "11897:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11906:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11897:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11911:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11897:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3252,
														"nodeType": "IfStatement",
														"src": "11893:95:16",
														"trueBody": {
															"id": 3251,
															"nodeType": "Block",
															"src": "11914:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3243,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3184,
																			"src": "11932:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11942:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11932:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3246,
																	"nodeType": "ExpressionStatement",
																	"src": "11932:12:16"
																},
																{
																	"expression": {
																		"id": 3249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3247,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3190,
																			"src": "11962:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11972:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11962:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3250,
																	"nodeType": "ExpressionStatement",
																	"src": "11962:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3184,
																	"src": "12005:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12014:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12005:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12018:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12005:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3263,
														"nodeType": "IfStatement",
														"src": "12001:64:16",
														"trueBody": {
															"id": 3262,
															"nodeType": "Block",
															"src": "12021:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3258,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3190,
																			"src": "12039:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12049:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12039:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3261,
																	"nodeType": "ExpressionStatement",
																	"src": "12039:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3265,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3190,
													"src": "12091:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3188,
												"id": 3266,
												"nodeType": "Return",
												"src": "12084:13:16"
											}
										]
									},
									"documentation": {
										"id": 3182,
										"nodeType": "StructuredDocumentation",
										"src": "11196:240:16",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11450:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3184,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11465:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "11457:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11457:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11456:15:16"
									},
									"returnParameters": {
										"id": 3188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3268,
												"src": "11495:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11495:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11494:9:16"
									},
									"scope": 3308,
									"src": "11441:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3306,
										"nodeType": "Block",
										"src": "12340:173:16",
										"statements": [
											{
												"id": 3305,
												"nodeType": "UncheckedBlock",
												"src": "12350:157:16",
												"statements": [
													{
														"assignments": [
															3280
														],
														"declarations": [
															{
																"constant": false,
																"id": 3280,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12382:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3305,
																"src": "12374:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12374:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3284,
														"initialValue": {
															"arguments": [
																{
																	"id": 3282,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3271,
																	"src": "12398:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3281,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3268,
																	3307
																],
																"referencedDeclaration": 3268,
																"src": "12391:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12391:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12374:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3285,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3280,
																"src": "12425:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$2450",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 3289,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3286,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3274,
																					"src": "12435:8:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2450",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 3287,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2450,
																						"src": "12447:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$2450_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 3288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12456:2:16",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2448,
																					"src": "12447:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$2450",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12435:23:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3295,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3290,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12462:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3293,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3291,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3280,
																									"src": "12468:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 3292,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12477:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12468:10:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3294,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12467:12:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12462:17:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3296,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3271,
																					"src": "12482:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12462:25:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12435:52:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12494:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12435:60:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12490:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3302,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12434:62:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12425:71:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3278,
														"id": 3304,
														"nodeType": "Return",
														"src": "12418:78:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3269,
										"nodeType": "StructuredDocumentation",
										"src": "12110:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12267:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12282:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3307,
												"src": "12274:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3274,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12298:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3307,
												"src": "12289:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2450",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 3273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3272,
														"name": "Rounding",
														"nameLocations": [
															"12289:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2450,
														"src": "12289:8:16"
													},
													"referencedDeclaration": 2450,
													"src": "12289:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2450",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12273:34:16"
									},
									"returnParameters": {
										"id": 3278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3307,
												"src": "12331:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12331:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12330:9:16"
									},
									"scope": 3308,
									"src": "12258:255:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3309,
							"src": "202:12313:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12413:16"
				},
				"id": 16
			}
		}
	}
}