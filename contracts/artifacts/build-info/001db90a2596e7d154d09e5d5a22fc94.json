{
	"id": "001db90a2596e7d154d09e5d5a22fc94",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ACConfig.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.18;\r\n\r\n import {IERC20Upgradeable} from \"../lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\r\nimport {UUPSUpgradeable} from \"../lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport {OwnableUpgradeable} from \"../lib/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\nimport {IBTBPair} from \"./pair/IBTBPair.sol\";\r\n\r\ninterface IMMStore2 {\r\n\r\n    function airdropMachine(address user,uint256 amount)external;\r\n    \r\n}\r\n\r\ncontract ACConfig is OwnableUpgradeable,UUPSUpgradeable{\r\n    address constant public top = 0xd220B3cf1E4660C5509418B42A86d7945E6E2e18;\r\n\r\n    address public usdt;\r\n    address public acb;\r\n    address public mv;\r\n    address public mmStore;\r\n    address public minePool;\r\n    address public acbPair;\r\n\r\n\r\n    address public platformAddress;\r\n    address public monthDividendAddress;\r\n    uint256 public platformRate;//usb swap to usdt ,usdt transfer to platform address rate\r\n    uint256 public swapRate;//usb swap to usdt rate\r\n\r\n    address public mvCollectionAddress;\r\n    address public techAddress;\r\n    address public marketAddress;\r\n\r\n    uint256 public minComputingPower;\r\n    uint256 public refRewardOneRate;//15% -> 150/1000\r\n    uint256 public refRewardTwoRate;\r\n    uint256 public sameLevelRewardRate;//10% -> 100/1000\r\n\r\n    uint256 public teamRewardRate;//10% -> 100/1000\r\n    address public teamRewardAddress;\r\n    address public remainingAddress;\r\n\r\n    uint256 public shareHolderRewardRate;//5% -> 50/1000\r\n    uint256 public shareHolderMinLimit;\r\n\r\n    mapping(uint256 => Level) public teamLevel;\r\n    mapping(address => uint256) public userLevel;\r\n    address[] public userArr;\r\n\r\n    uint256 public machineExpireTime;\r\n    uint256 public claimInterval;\r\n\r\n    address public operator;\r\n\r\n    mapping(address => bool) admin;\r\n\r\n    uint256 public maxComputingPower;\r\n\r\n\r\n    struct Level {\r\n        uint256 amount;\r\n        uint256 rate;//10% => 100/1000\r\n    }\r\n\r\n    modifier onlyAdmin(){\r\n        require(admin[msg.sender] || msg.sender == owner(),'not admin');\r\n        _;\r\n    }\r\n\r\n\r\n\r\n    function initialize(address _operator)external initializer{\r\n        __Ownable_init();\r\n        operator = _operator;\r\n\r\n        platformAddress = 0xdF9228FC02F4554CD80AF6D036dADe242022e4f2;\r\n        monthDividendAddress = 0x4076AF4556458cDd0ad25E86eD23B4dc8437DcE4;\r\n        platformRate = 900;\r\n        swapRate = 1000;\r\n\r\n        mvCollectionAddress = 0xFAe25F1Ae4B758D7C96D7Eb075B62af4F3398b89;\r\n        techAddress = 0x7FbA7858083836D9169eb3bE21A48189E1798c8e;\r\n        marketAddress = 0x2737ac6359664096f22863088246d885F14E6FF2;\r\n        \r\n        minComputingPower = 20 ether;\r\n        maxComputingPower = 6000 ether;\r\n        refRewardOneRate = 150;\r\n        refRewardTwoRate = 100;\r\n        sameLevelRewardRate = 100;\r\n        teamRewardRate = 100;\r\n        teamRewardAddress = 0x2737ac6359664096f22863088246d885F14E6FF2;\r\n        remainingAddress = 0xb36F6361dCf31D0D7956E9e826a9915A5ddEC272;\r\n        shareHolderRewardRate = 50;\r\n        shareHolderMinLimit = 20000 ether;\r\n\r\n        teamLevel[0] = Level(0,0);\r\n        teamLevel[1] = Level(10000 ether,200);\r\n        teamLevel[2] = Level(30000 ether,350);\r\n        teamLevel[3] = Level(100000 ether,500);\r\n\r\n        userLevel[top] = 3;\r\n        userArr.push(top);\r\n\r\n        machineExpireTime = 365 days;\r\n        claimInterval = 1 minutes; //1 hours;\r\n    }\r\n\r\n    // required by the OZ UUPS module\r\n    function _authorizeUpgrade(address) internal override onlyOwner {}\r\n\r\n    function getTeamLevel()external view returns(uint256[] memory amounts,uint256[] memory rates){\r\n        amounts = new uint256[](4);\r\n        rates = new uint256[](4);\r\n        for(uint256 i = 0; i < 4; i++){\r\n            amounts[i] = teamLevel[i].amount;\r\n            rates[i] = teamLevel[i].rate;\r\n        }\r\n    }\r\n\r\n    function getRateConfig()external view returns(uint256[] memory rates){\r\n        rates = new uint256[](6);\r\n\r\n        rates[0] = refRewardOneRate;\r\n        rates[1] = refRewardTwoRate;\r\n        rates[2] = sameLevelRewardRate;\r\n        rates[3] = teamRewardRate;\r\n        rates[4] = shareHolderRewardRate;\r\n        rates[5] = shareHolderMinLimit;\r\n    }\r\n\r\n    function getTeamAddress()external view returns(address[] memory addressArr){\r\n        addressArr = new address[](2);\r\n        addressArr[0] = teamRewardAddress;\r\n        addressArr[1] = remainingAddress;\r\n    }\r\n\r\n    function getUserLevels()external view returns(address[] memory users,uint256[] memory levels){\r\n        users = userArr;\r\n        levels = new uint256[](users.length);\r\n        for(uint256 i = 0; i < users.length; i++){\r\n            levels[i] = userLevel[users[i]];\r\n        }\r\n    }\r\n\r\n    function setAdmin(address user,bool auth)external onlyOwner{\r\n        admin[user] = auth;\r\n    }\r\n\r\n    function changeOperator(address _operator)external onlyOwner{\r\n        operator = _operator;\r\n    }\r\n\r\n\r\n    function airdropMachine(address user,uint256 amount)external onlyAdmin{\r\n        IMMStore2(mmStore).airdropMachine(user, amount);\r\n    }\r\n\r\n    function setUserLevel(address _user,uint256 _level)external onlyAdmin{\r\n        userLevel[_user] = _level;\r\n        userArr.push(_user);\r\n    }\r\n\r\n    function setConfig(address _usdt,address _mv,address _acb,address _minePool,address _mmStore,address _acbPair)external onlyAdmin{\r\n        usdt = _usdt;\r\n        mv = _mv;\r\n        acb = _acb;\r\n        minePool = _minePool;\r\n        mmStore = _mmStore;\r\n        acbPair = _acbPair;\r\n    }\r\n\r\n\r\n\r\n    function changeMachineExpireTime(uint256 _machineExpireTime)external onlyAdmin{\r\n        machineExpireTime = _machineExpireTime;\r\n    }\r\n\r\n    function changeClaimInterval(uint256 _claimInterval)external onlyAdmin{\r\n        claimInterval = _claimInterval;\r\n    }\r\n\r\n    function changeTeamLevel(uint256[] memory _amount,uint256[] memory _rate)external onlyAdmin{\r\n        require(_amount.length == _rate.length,'length error');\r\n\r\n        for(uint256 i = 0; i < _amount.length; ++i){\r\n            teamLevel[i] = Level(_amount[i],_rate[i]);\r\n        }\r\n    }\r\n\r\n    function changeShareHolderMinLimit(uint256 _shareHolderMinLimit)external onlyAdmin{\r\n        shareHolderMinLimit = _shareHolderMinLimit;\r\n    }\r\n\r\n    function changeShareHolderRewardRate(uint256 _shareHolderRewardRate)external onlyAdmin{\r\n        shareHolderRewardRate = _shareHolderRewardRate;\r\n    }\r\n\r\n    function changeRemainingAddress(address _remainingAddress)external onlyAdmin{\r\n        remainingAddress = _remainingAddress;\r\n    }\r\n\r\n    function changeTeamRewardAddress(address _teamRewardAddress)external onlyAdmin{\r\n        teamRewardAddress = _teamRewardAddress;\r\n    }\r\n\r\n    function changeTeamRewardRate(uint256 _teamRewardRate)external onlyAdmin{\r\n        teamRewardRate = _teamRewardRate;\r\n    }\r\n    function changeSameLevelRewardRate(uint256 _sameLevelRewardRate)external onlyAdmin{\r\n        sameLevelRewardRate = _sameLevelRewardRate;\r\n    }\r\n\r\n    function changeRefRewardRate(uint256 _oneRate,uint256 _twoRate)external onlyAdmin{\r\n        refRewardOneRate = _oneRate;\r\n        refRewardTwoRate = _twoRate;\r\n    }\r\n\r\n    function changeMinComputingPower(uint256 _minComputingPower) external onlyAdmin{\r\n        minComputingPower = _minComputingPower;\r\n    }\r\n\r\n    function changeMaxComputingPower(uint256 _maxComputingPower) external onlyAdmin{\r\n        maxComputingPower = _maxComputingPower;\r\n    }\r\n\r\n    function changeMvCollectionAddress(address _mvCollectionAddress) external onlyAdmin{\r\n        mvCollectionAddress = _mvCollectionAddress;\r\n    }\r\n\r\n    function changeTechAddress(address _techAddress) external onlyAdmin{\r\n        techAddress = _techAddress;\r\n    }\r\n\r\n    function changeMarketAddress(address _marketAddress) external onlyAdmin{\r\n        marketAddress = _marketAddress;\r\n    }\r\n\r\n    function changePlatformAddress(address _platformAddress)external onlyAdmin {\r\n        platformAddress = _platformAddress;\r\n    }\r\n\r\n    function changeMonthDividenAddress(address _monthDividendAddress) external onlyAdmin {\r\n        monthDividendAddress = _monthDividendAddress;\r\n    }\r\n\r\n    function changeSwapRate(uint256 _swapRate)external onlyAdmin {\r\n        swapRate = _swapRate;\r\n    }\r\n\r\n    function changePlatformRate(uint256 _platformRate)external onlyAdmin {\r\n        platformRate = _platformRate;\r\n    }\r\n\r\n\r\n}"
			},
			"contracts/pair/IBTBPair.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\n\r\npragma solidity ^0.8.18;\r\n\r\ninterface IBTBPair {\r\n\r\n\r\n    event Mint(address indexed sender, uint amount0, uint amount1);\r\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n    event Swap(\r\n        address indexed sender,\r\n        uint amount0In,\r\n        uint amount1In,\r\n        uint amount0Out,\r\n        uint amount1Out,\r\n        address indexed to\r\n    );\r\n\r\n    event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n    function price0CumulativeLast() external view returns (uint);\r\n    function price1CumulativeLast() external view returns (uint);\r\n\r\n    function mint(address to) external returns (uint liquidity);\r\n    function burn(address to) external returns (uint amount0, uint amount1);\r\n    function swap(uint amount0Out, uint amount1Out, address to) external;\r\n    function sync() external;\r\n\r\n}"
			},
			"lib/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeTo(address newImplementation) external virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"lib/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.1) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(\n        address newImplementation,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(\n        address newBeacon,\n        bytes memory data,\n        bool forceCall\n    ) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            _functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {\n        require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"lib/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"lib/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/StorageSlot.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n}\n"
			},
			"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.3) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.9._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 10
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/ACConfig.sol": {
				"ACConfig": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acb",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "acbPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "airdropMachine",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimInterval",
									"type": "uint256"
								}
							],
							"name": "changeClaimInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_machineExpireTime",
									"type": "uint256"
								}
							],
							"name": "changeMachineExpireTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketAddress",
									"type": "address"
								}
							],
							"name": "changeMarketAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxComputingPower",
									"type": "uint256"
								}
							],
							"name": "changeMaxComputingPower",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minComputingPower",
									"type": "uint256"
								}
							],
							"name": "changeMinComputingPower",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_monthDividendAddress",
									"type": "address"
								}
							],
							"name": "changeMonthDividenAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_mvCollectionAddress",
									"type": "address"
								}
							],
							"name": "changeMvCollectionAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "changeOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_platformAddress",
									"type": "address"
								}
							],
							"name": "changePlatformAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_platformRate",
									"type": "uint256"
								}
							],
							"name": "changePlatformRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_oneRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_twoRate",
									"type": "uint256"
								}
							],
							"name": "changeRefRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_remainingAddress",
									"type": "address"
								}
							],
							"name": "changeRemainingAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sameLevelRewardRate",
									"type": "uint256"
								}
							],
							"name": "changeSameLevelRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shareHolderMinLimit",
									"type": "uint256"
								}
							],
							"name": "changeShareHolderMinLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_shareHolderRewardRate",
									"type": "uint256"
								}
							],
							"name": "changeShareHolderRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_swapRate",
									"type": "uint256"
								}
							],
							"name": "changeSwapRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_amount",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_rate",
									"type": "uint256[]"
								}
							],
							"name": "changeTeamLevel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_teamRewardAddress",
									"type": "address"
								}
							],
							"name": "changeTeamRewardAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_teamRewardRate",
									"type": "uint256"
								}
							],
							"name": "changeTeamRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_techAddress",
									"type": "address"
								}
							],
							"name": "changeTechAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRateConfig",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "rates",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTeamAddress",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "addressArr",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTeamLevel",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "rates",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getUserLevels",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "levels",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "machineExpireTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxComputingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minComputingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minePool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mmStore",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "monthDividendAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mv",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mvCollectionAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "platformRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refRewardOneRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refRewardTwoRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "remainingAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sameLevelRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "auth",
									"type": "bool"
								}
							],
							"name": "setAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_mv",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_acb",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_minePool",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_mmStore",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_acbPair",
									"type": "address"
								}
							],
							"name": "setConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "setUserLevel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shareHolderMinLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "shareHolderRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "teamLevel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamRewardAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "techAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "top",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userArr",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLevel",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ACConfig.sol\":513:8389  contract ACConfig is OwnableUpgradeable,UUPSUpgradeable{... */\n  mstore(0x40, 0xa0)\n    /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1332:1336  this */\n  address\n    /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1289:1337  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"contracts/ACConfig.sol\":513:8389  contract ACConfig is OwnableUpgradeable,UUPSUpgradeable{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x90a0a53a674dda23f50c6d7df8f61e9f3e3cf11a0ea21d6964915bb3c7f9b219\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/ACConfig.sol\":513:8389  contract ACConfig is OwnableUpgradeable,UUPSUpgradeable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x602e6623\n      gt\n      tag_67\n      jumpi\n      dup1\n      0x602e6623\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x669934a9\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x66bf8f83\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x698518e5\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x6b1a9c07\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x72765009\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x7634b070\n      eq\n      tag_41\n      jumpi\n      dup1\n      0x767608e2\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x796f838e\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x812df395\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x85adb294\n      eq\n      tag_45\n      jumpi\n      dup1\n      0x863be1ab\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x8a5705d4\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x8e10ef0b\n      eq\n      tag_49\n      jumpi\n      dup1\n      0x8f05cdf5\n      eq\n      tag_50\n      jumpi\n      dup1\n      0x95623641\n      eq\n      tag_51\n      jumpi\n      dup1\n      0x9a3135a8\n      eq\n      tag_52\n      jumpi\n      dup1\n      0xb2cf085e\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xc4d66de8\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xcde85744\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xdbe55e56\n      eq\n      tag_56\n      jumpi\n      dup1\n      0xe3d9aa05\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xe9d610e5\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xeb2266bc\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xee787b11\n      eq\n      tag_60\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_61\n      jumpi\n      dup1\n      0xf7656704\n      eq\n      tag_62\n      jumpi\n      dup1\n      0xf80183b2\n      eq\n      tag_63\n      jumpi\n      dup1\n      0xf97fe091\n      eq\n      tag_64\n      jumpi\n      dup1\n      0xfe6dcdba\n      eq\n      tag_65\n      jumpi\n      dup1\n      0xff858079\n      eq\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup1\n      0x057d7781\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06394c9b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x08f93bd8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0b433a12\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x182d326e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x19a2ef5f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1e56cfab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1e79aa0a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x21596c25\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x254720b7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x280e31cc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x2d8852ee\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3360364d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x33f5780e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x35aed778\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x36e0cac6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x39cbc405\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x3b2c2e55\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x3d08e5b3\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x434f9736\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x498c1e3c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x4b0bddd2\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x4b21ddec\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x4dd40234\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x5250c9b5\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x57629f82\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x5bff9787\n      eq\n      tag_33\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ACConfig.sol\":1685:1709  address[] public userArr */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":363:395   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":345:396   */\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/ACConfig.sol\":1685:1709  address[] public userArr */\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ACConfig.sol\":4864:4963  function changeOperator(address _operator)external onlyOwner{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/ACConfig.sol\":8158:8258  function changeSwapRate(uint256 _swapRate)external onlyAdmin {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_76\n      tag_82\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1757:1785  uint256 public claimInterval */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      sload(0xe3)\n      dup2\n      jump\n    tag_85:\n      mload(0x40)\n        /* \"#utility.yul\":922:947   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":910:912   */\n      0x20\n        /* \"#utility.yul\":895:913   */\n      add\n        /* \"contracts/ACConfig.sol\":1757:1785  uint256 public claimInterval */\n      tag_73\n        /* \"#utility.yul\":776:953   */\n      jump\n        /* \"contracts/ACConfig.sol\":4251:4461  function getTeamAddress()external view returns(address[] memory addressArr){... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":6284:6435  function changeShareHolderRewardRate(uint256 _shareHolderRewardRate)external onlyAdmin{... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_76\n      tag_96\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1090:1116  address public techAddress */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      sload(0xd4)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":3892:4243  function getRateConfig()external view returns(uint256[] memory rates){... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1542:1576  uint256 public shareHolderMinLimit */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_85\n      sload(0xde)\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":1585:1627  mapping(uint256 => Level) public teamLevel */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_113:\n      mstore(0x20, 0xdf)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_112:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2570:2595   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2626:2628   */\n      0x20\n        /* \"#utility.yul\":2611:2629   */\n      dup4\n      add\n        /* \"#utility.yul\":2604:2638   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2543:2561   */\n      add\n        /* \"contracts/ACConfig.sol\":1585:1627  mapping(uint256 => Level) public teamLevel */\n      tag_73\n        /* \"#utility.yul\":2396:2644   */\n      jump\n        /* \"contracts/ACConfig.sol\":1634:1678  mapping(address => uint256) public userLevel */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_85\n      tag_119\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_119:\n      mstore(0x20, 0xe0)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":1718:1750  uint256 public machineExpireTime */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_85\n      sload(0xe2)\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":656:675  address public usdt */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      sload(0xc9)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":7178:7314  function changeMinComputingPower(uint256 _minComputingPower) external onlyAdmin{... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_76\n      tag_132\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":5117:5260  function setUserLevel(address _user,uint256 _level)external onlyAdmin{... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_76\n      tag_136\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_136:\n      tag_138\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":7738:7858  function changeMarketAddress(address _marketAddress) external onlyAdmin{... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_76\n      tag_141\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3317:3514  function upgradeTo(address newImplementation) external virtual onlyProxy {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_76\n      tag_145\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":902:929  uint256 public platformRate */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n      tag_85\n      sload(0xd1)\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":1484:1520  uint256 public shareHolderRewardRate */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_85\n      sload(0xdd)\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":5838:6125  function changeTeamLevel(uint256[] memory _amount,uint256[] memory _rate)external onlyAdmin{... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_76\n      tag_157\n      calldatasize\n      0x04\n      tag_158\n      jump\t// in\n    tag_157:\n      tag_159\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1865:1897  uint256 public maxComputingPower */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_85\n      sload(0xe6)\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":1254:1285  uint256 public refRewardTwoRate */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_85\n      sload(0xd8)\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":6854:6997  function changeSameLevelRewardRate(uint256 _sameLevelRewardRate)external onlyAdmin{... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      tag_76\n      tag_170\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_170:\n      tag_171\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":4760:4856  function setAdmin(address user,bool auth)external onlyOwner{... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_76\n      tag_174\n      calldatasize\n      0x04\n      tag_175\n      jump\t// in\n    tag_174:\n      tag_176\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1405:1437  address public teamRewardAddress */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      sload(0xdb)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":731:753  address public mmStore */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      sload(0xcc)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3763:3985  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {... */\n    tag_28:\n      tag_76\n      tag_186\n      calldatasize\n      0x04\n      tag_187\n      jump\t// in\n    tag_186:\n      tag_188\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":790:812  address public acbPair */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      sload(0xce)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      tag_85\n      tag_195\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1794:1817  address public operator */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_198\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_198:\n      pop\n      sload(0xe4)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":4973:5109  function airdropMachine(address user,uint256 amount)external onlyAdmin{... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_202\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_202:\n      pop\n      tag_76\n      tag_204\n      calldatasize\n      0x04\n      tag_137\n      jump\t// in\n    tag_204:\n      tag_205\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":682:700  address public acb */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      sload(0xca)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":760:783  address public minePool */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      sload(0xcd)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":7618:7730  function changeTechAddress(address _techAddress) external onlyAdmin{... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      tag_76\n      tag_216\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_216:\n      tag_217\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":6133:6276  function changeShareHolderMinLimit(uint256 _shareHolderMinLimit)external onlyAdmin{... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      tag_76\n      tag_220\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_220:\n      tag_221\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":994:1017  uint256 public swapRate */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n      tag_85\n      sload(0xd2)\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":4469:4752  function getUserLevels()external view returns(address[] memory users,uint256[] memory levels){... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      tag_227\n      tag_228\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n      pop\n      tag_76\n      tag_233\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":8266:8382  function changePlatformRate(uint256 _platformRate)external onlyAdmin {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      tag_76\n      tag_236\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_236:\n      tag_237\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":5568:5703  function changeMachineExpireTime(uint256 _machineExpireTime)external onlyAdmin{... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n      pop\n      tag_76\n      tag_240\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_240:\n      tag_241\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":7322:7458  function changeMaxComputingPower(uint256 _maxComputingPower) external onlyAdmin{... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_242\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_242:\n      pop\n      tag_76\n      tag_244\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_244:\n      tag_245\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":5711:5830  function changeClaimInterval(uint256 _claimInterval)external onlyAdmin{... */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_246\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_246:\n      pop\n      tag_76\n      tag_248\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_248:\n      tag_249\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":5268:5556  function setConfig(address _usdt,address _mv,address _acb,address _minePool,address _mmStore,address _acbPair)external onlyAdmin{... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_250\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_250:\n      pop\n      tag_76\n      tag_252\n      calldatasize\n      0x04\n      tag_253\n      jump\t// in\n    tag_252:\n      tag_254\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1160:1192  uint256 public minComputingPower */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      pop\n      tag_85\n      sload(0xd6)\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":6725:6848  function changeTeamRewardRate(uint256 _teamRewardRate)external onlyAdmin{... */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      tag_76\n      tag_261\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_261:\n      tag_262\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1199:1230  uint256 public refRewardOneRate */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_263\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_263:\n      pop\n      tag_85\n      sload(0xd7)\n      dup2\n      jump\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_267\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_267:\n      pop\n      tag_69\n      tag_269\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1352:1381  uint256 public teamRewardRate */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_271\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_271:\n      pop\n      tag_85\n      sload(0xda)\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":707:724  address public mv */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_275\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_275:\n      pop\n      sload(0xcb)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":1123:1151  address public marketAddress */\n    tag_51:\n      callvalue\n      dup1\n      iszero\n      tag_279\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_279:\n      pop\n      sload(0xd5)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":3569:3884  function getTeamLevel()external view returns(uint256[] memory amounts,uint256[] memory rates){... */\n    tag_52:\n      callvalue\n      dup1\n      iszero\n      tag_283\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_283:\n      pop\n      tag_284\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      tag_73\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":860:895  address public monthDividendAddress */\n    tag_53:\n      callvalue\n      dup1\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      pop\n      sload(0xd0)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":2128:3448  function initialize(address _operator)external initializer{... */\n    tag_54:\n      callvalue\n      dup1\n      iszero\n      tag_292\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_292:\n      pop\n      tag_76\n      tag_294\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_294:\n      tag_295\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":7866:7994  function changePlatformAddress(address _platformAddress)external onlyAdmin {... */\n    tag_55:\n      callvalue\n      dup1\n      iszero\n      tag_296\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_296:\n      pop\n      tag_76\n      tag_298\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_298:\n      tag_299\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":823:853  address public platformAddress */\n    tag_56:\n      callvalue\n      dup1\n      iszero\n      tag_300\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_300:\n      pop\n      sload(0xcf)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":7005:7170  function changeRefRewardRate(uint256 _oneRate,uint256 _twoRate)external onlyAdmin{... */\n    tag_57:\n      callvalue\n      dup1\n      iszero\n      tag_304\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_304:\n      pop\n      tag_76\n      tag_306\n      calldatasize\n      0x04\n      tag_307\n      jump\t// in\n    tag_306:\n      tag_308\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1049:1083  address public mvCollectionAddress */\n    tag_58:\n      callvalue\n      dup1\n      iszero\n      tag_309\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_309:\n      pop\n      sload(0xd3)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":6443:6574  function changeRemainingAddress(address _remainingAddress)external onlyAdmin{... */\n    tag_59:\n      callvalue\n      dup1\n      iszero\n      tag_313\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_313:\n      pop\n      tag_76\n      tag_315\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_315:\n      tag_316\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1292:1326  uint256 public sameLevelRewardRate */\n    tag_60:\n      callvalue\n      dup1\n      iszero\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n      pop\n      tag_85\n      sload(0xd9)\n      dup2\n      jump\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_61:\n      callvalue\n      dup1\n      iszero\n      tag_321\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_321:\n      pop\n      tag_76\n      tag_323\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_323:\n      tag_324\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":8002:8150  function changeMonthDividenAddress(address _monthDividendAddress) external onlyAdmin {... */\n    tag_62:\n      callvalue\n      dup1\n      iszero\n      tag_325\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_325:\n      pop\n      tag_76\n      tag_327\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_327:\n      tag_328\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":7466:7610  function changeMvCollectionAddress(address _mvCollectionAddress) external onlyAdmin{... */\n    tag_63:\n      callvalue\n      dup1\n      iszero\n      tag_329\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_329:\n      pop\n      tag_76\n      tag_331\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_331:\n      tag_332\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1444:1475  address public remainingAddress */\n    tag_64:\n      callvalue\n      dup1\n      iszero\n      tag_333\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_333:\n      pop\n      sload(0xdc)\n      tag_69\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":575:647  address constant public top = 0xd220B3cf1E4660C5509418B42A86d7945E6E2e18 */\n    tag_65:\n      callvalue\n      dup1\n      iszero\n      tag_337\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_337:\n      pop\n      tag_69\n        /* \"contracts/ACConfig.sol\":605:647  0xd220B3cf1E4660C5509418B42A86d7945E6E2e18 */\n      0xd220b3cf1e4660c5509418b42a86d7945e6e2e18\n        /* \"contracts/ACConfig.sol\":575:647  address constant public top = 0xd220B3cf1E4660C5509418B42A86d7945E6E2e18 */\n      dup2\n      jump\n        /* \"contracts/ACConfig.sol\":6582:6717  function changeTeamRewardAddress(address _teamRewardAddress)external onlyAdmin{... */\n    tag_66:\n      callvalue\n      dup1\n      iszero\n      tag_341\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_341:\n      pop\n      tag_76\n      tag_343\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_343:\n      tag_344\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":1685:1709  address[] public userArr */\n    tag_72:\n      0xe1\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_345\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_345:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":4864:4963  function changeOperator(address _operator)external onlyOwner{... */\n    tag_79:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_348\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_349\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_348:\n        /* \"contracts/ACConfig.sol\":4935:4943  operator */\n      0xe4\n        /* \"contracts/ACConfig.sol\":4935:4955  operator = _operator */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":4864:4963  function changeOperator(address _operator)external onlyOwner{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":8158:8258  function changeSwapRate(uint256 _swapRate)external onlyAdmin {... */\n    tag_83:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_352\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_353\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_353:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_352:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_355:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_354:\n        /* \"contracts/ACConfig.sol\":8230:8238  swapRate */\n      0xd2\n        /* \"contracts/ACConfig.sol\":8230:8250  swapRate = _swapRate */\n      sstore\n        /* \"contracts/ACConfig.sol\":8158:8258  function changeSwapRate(uint256 _swapRate)external onlyAdmin {... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":4251:4461  function getTeamAddress()external view returns(address[] memory addressArr){... */\n    tag_91:\n        /* \"contracts/ACConfig.sol\":4350:4366  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ACConfig.sol\":4364:4365  2 */\n      0x02\n        /* \"contracts/ACConfig.sol\":4350:4366  new address[](2) */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/ACConfig.sol\":4298:4325  address[] memory addressArr */\n      0x60\n        /* \"contracts/ACConfig.sol\":4350:4366  new address[](2) */\n      dup1\n      dup4\n      add\n      dup5\n      mstore\n        /* \"contracts/ACConfig.sol\":4298:4325  address[] memory addressArr */\n      swap3\n        /* \"contracts/ACConfig.sol\":4350:4366  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":4393:4410  teamRewardAddress */\n      sload(0xdb)\n        /* \"contracts/ACConfig.sol\":4377:4390  addressArr[0] */\n      dup3\n      mload\n      swap3\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":4393:4410  teamRewardAddress */\n      and\n      swap2\n        /* \"contracts/ACConfig.sol\":4377:4390  addressArr[0] */\n      dup4\n      swap2\n      pop\n        /* \"contracts/ACConfig.sol\":4393:4410  teamRewardAddress */\n      0x00\n      swap1\n        /* \"contracts/ACConfig.sol\":4377:4390  addressArr[0] */\n      tag_364\n      jumpi\n      tag_364\n      tag_365\n      jump\t// in\n    tag_364:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":4377:4410  addressArr[0] = teamRewardAddress */\n      swap3\n      dup4\n      and\n        /* \"contracts/ACConfig.sol\":4377:4390  addressArr[0] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"contracts/ACConfig.sol\":4377:4410  addressArr[0] = teamRewardAddress */\n      mstore\n        /* \"contracts/ACConfig.sol\":4437:4453  remainingAddress */\n      sload(0xdc)\n        /* \"contracts/ACConfig.sol\":4421:4434  addressArr[1] */\n      dup3\n      mload\n        /* \"contracts/ACConfig.sol\":4437:4453  remainingAddress */\n      swap2\n      and\n      swap1\n        /* \"contracts/ACConfig.sol\":4421:4431  addressArr */\n      dup3\n      swap1\n        /* \"contracts/ACConfig.sol\":4437:4453  remainingAddress */\n      0x01\n      swap1\n        /* \"contracts/ACConfig.sol\":4421:4434  addressArr[1] */\n      dup2\n      lt\n      tag_367\n      jumpi\n      tag_367\n      tag_365\n      jump\t// in\n    tag_367:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ACConfig.sol\":4421:4453  addressArr[1] = remainingAddress */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":4251:4461  function getTeamAddress()external view returns(address[] memory addressArr){... */\n      swap1\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":6284:6435  function changeShareHolderRewardRate(uint256 _shareHolderRewardRate)external onlyAdmin{... */\n    tag_97:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_369\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_370\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_370:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_369:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_371\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_371:\n        /* \"contracts/ACConfig.sol\":6381:6402  shareHolderRewardRate */\n      0xdd\n        /* \"contracts/ACConfig.sol\":6381:6427  shareHolderRewardRate = _shareHolderRewardRate */\n      sstore\n        /* \"contracts/ACConfig.sol\":6284:6435  function changeShareHolderRewardRate(uint256 _shareHolderRewardRate)external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":3892:4243  function getRateConfig()external view returns(uint256[] memory rates){... */\n    tag_104:\n        /* \"contracts/ACConfig.sol\":3980:3996  new uint256[](6) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ACConfig.sol\":3994:3995  6 */\n      0x06\n        /* \"contracts/ACConfig.sol\":3980:3996  new uint256[](6) */\n      dup1\n      dup3\n      mstore\n      0xe0\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ACConfig.sol\":3938:3960  uint256[] memory rates */\n      0x60\n      swap2\n        /* \"contracts/ACConfig.sol\":3980:3996  new uint256[](6) */\n      0x20\n      dup3\n      add\n      0xc0\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":3972:3996  rates = new uint256[](6) */\n      swap1\n      pop\n        /* \"contracts/ACConfig.sol\":4020:4036  refRewardOneRate */\n      sload(0xd7)\n        /* \"contracts/ACConfig.sol\":4009:4014  rates */\n      dup2\n        /* \"contracts/ACConfig.sol\":4015:4016  0 */\n      0x00\n        /* \"contracts/ACConfig.sol\":4009:4017  rates[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_379\n      jumpi\n      tag_379\n      tag_365\n      jump\t// in\n    tag_379:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ACConfig.sol\":4009:4036  rates[0] = refRewardOneRate */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":4058:4074  refRewardTwoRate */\n      sload(0xd8)\n        /* \"contracts/ACConfig.sol\":4047:4052  rates */\n      dup2\n        /* \"contracts/ACConfig.sol\":4053:4054  1 */\n      0x01\n        /* \"contracts/ACConfig.sol\":4047:4055  rates[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_381\n      jumpi\n      tag_381\n      tag_365\n      jump\t// in\n    tag_381:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ACConfig.sol\":4047:4074  rates[1] = refRewardTwoRate */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":4096:4115  sameLevelRewardRate */\n      sload(0xd9)\n        /* \"contracts/ACConfig.sol\":4085:4090  rates */\n      dup2\n        /* \"contracts/ACConfig.sol\":4091:4092  2 */\n      0x02\n        /* \"contracts/ACConfig.sol\":4085:4093  rates[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_383\n      jumpi\n      tag_383\n      tag_365\n      jump\t// in\n    tag_383:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ACConfig.sol\":4085:4115  rates[2] = sameLevelRewardRate */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":4137:4151  teamRewardRate */\n      sload(0xda)\n        /* \"contracts/ACConfig.sol\":4126:4131  rates */\n      dup2\n        /* \"contracts/ACConfig.sol\":4132:4133  3 */\n      0x03\n        /* \"contracts/ACConfig.sol\":4126:4134  rates[3] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_385\n      jumpi\n      tag_385\n      tag_365\n      jump\t// in\n    tag_385:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ACConfig.sol\":4126:4151  rates[3] = teamRewardRate */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":4173:4194  shareHolderRewardRate */\n      sload(0xdd)\n        /* \"contracts/ACConfig.sol\":4162:4167  rates */\n      dup2\n        /* \"contracts/ACConfig.sol\":4168:4169  4 */\n      0x04\n        /* \"contracts/ACConfig.sol\":4162:4170  rates[4] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_387\n      jumpi\n      tag_387\n      tag_365\n      jump\t// in\n    tag_387:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ACConfig.sol\":4162:4194  rates[4] = shareHolderRewardRate */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":4216:4235  shareHolderMinLimit */\n      sload(0xde)\n        /* \"contracts/ACConfig.sol\":4205:4210  rates */\n      dup2\n        /* \"contracts/ACConfig.sol\":4211:4212  5 */\n      0x05\n        /* \"contracts/ACConfig.sol\":4205:4213  rates[5] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_389\n      jumpi\n      tag_389\n      tag_365\n      jump\t// in\n    tag_389:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ACConfig.sol\":4205:4235  rates[5] = shareHolderMinLimit */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":3892:4243  function getRateConfig()external view returns(uint256[] memory rates){... */\n      swap1\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":7178:7314  function changeMinComputingPower(uint256 _minComputingPower) external onlyAdmin{... */\n    tag_133:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_391\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_392\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_391:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_393\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_393:\n        /* \"contracts/ACConfig.sol\":7268:7285  minComputingPower */\n      0xd6\n        /* \"contracts/ACConfig.sol\":7268:7306  minComputingPower = _minComputingPower */\n      sstore\n        /* \"contracts/ACConfig.sol\":7178:7314  function changeMinComputingPower(uint256 _minComputingPower) external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":5117:5260  function setUserLevel(address _user,uint256 _level)external onlyAdmin{... */\n    tag_138:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_397\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_398\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_398:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_397:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_399:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":5197:5213  userLevel[_user] */\n      swap1\n      swap2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":5197:5206  userLevel */\n      0xe0\n        /* \"contracts/ACConfig.sol\":5197:5213  userLevel[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/ACConfig.sol\":5197:5222  userLevel[_user] = _level */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/ACConfig.sol\":5233:5240  userArr */\n      0xe1\n        /* \"contracts/ACConfig.sol\":5233:5252  userArr.push(_user) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_e3d46f142e20657c402ed08bdf439babdd6fbb8091e2708315f00847c0f52cc5\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":5117:5260  function setUserLevel(address _user,uint256 _level)external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":7738:7858  function changeMarketAddress(address _marketAddress) external onlyAdmin{... */\n    tag_142:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_404\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_405\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_405:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_404:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_406\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_406:\n        /* \"contracts/ACConfig.sol\":7820:7833  marketAddress */\n      0xd5\n        /* \"contracts/ACConfig.sol\":7820:7850  marketAddress = _marketAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":7738:7858  function changeMarketAddress(address _marketAddress) external onlyAdmin{... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3317:3514  function upgradeTo(address newImplementation) external virtual onlyProxy {... */\n    tag_146:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x90a0a53a674dda23f50c6d7df8f61e9f3e3cf11a0ea21d6964915bb3c7f9b219\")\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_410\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_412\n      jump\t// in\n    tag_410:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x90a0a53a674dda23f50c6d7df8f61e9f3e3cf11a0ea21d6964915bb3c7f9b219\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_413\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1989  _getImplementation */\n      tag_414\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      jump\t// in\n    tag_413:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_415\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_417\n      jump\t// in\n    tag_415:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3400:3436  _authorizeUpgrade(newImplementation) */\n      tag_419\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3418:3435  newImplementation */\n      dup2\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3400:3417  _authorizeUpgrade */\n      tag_420\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3400:3436  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_419:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3487:3499  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3497:3498  0 */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3487:3499  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3446:3507  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_421\n      swap2\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3468:3485  newImplementation */\n      dup4\n      swap2\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3487:3499  new bytes(0) */\n      swap1\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3446:3467  _upgradeToAndCallUUPS */\n      tag_425\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3446:3507  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_421:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3317:3514  function upgradeTo(address newImplementation) external virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":5838:6125  function changeTeamLevel(uint256[] memory _amount,uint256[] memory _rate)external onlyAdmin{... */\n    tag_159:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_427\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_428\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_428:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_427:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_429\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_429:\n        /* \"contracts/ACConfig.sol\":5966:5971  _rate */\n      dup1\n        /* \"contracts/ACConfig.sol\":5966:5978  _rate.length */\n      mload\n        /* \"contracts/ACConfig.sol\":5948:5955  _amount */\n      dup3\n        /* \"contracts/ACConfig.sol\":5948:5962  _amount.length */\n      mload\n        /* \"contracts/ACConfig.sol\":5948:5978  _amount.length == _rate.length */\n      eq\n        /* \"contracts/ACConfig.sol\":5940:5994  require(_amount.length == _rate.length,'length error') */\n      tag_432\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9267:9269   */\n      0x20\n        /* \"contracts/ACConfig.sol\":5940:5994  require(_amount.length == _rate.length,'length error') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9249:9270   */\n      mstore\n        /* \"#utility.yul\":9306:9308   */\n      0x0c\n        /* \"#utility.yul\":9286:9304   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9279:9309   */\n      mstore\n      shl(0xa1, 0x3632b733ba341032b93937b9)\n        /* \"#utility.yul\":9325:9343   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9318:9360   */\n      mstore\n        /* \"#utility.yul\":9377:9395   */\n      0x64\n      add\n        /* \"contracts/ACConfig.sol\":5940:5994  require(_amount.length == _rate.length,'length error') */\n      tag_355\n        /* \"#utility.yul\":9065:9401   */\n      jump\n        /* \"contracts/ACConfig.sol\":5940:5994  require(_amount.length == _rate.length,'length error') */\n    tag_432:\n        /* \"contracts/ACConfig.sol\":6011:6020  uint256 i */\n      0x00\n        /* \"contracts/ACConfig.sol\":6007:6118  for(uint256 i = 0; i < _amount.length; ++i){... */\n    tag_435:\n        /* \"contracts/ACConfig.sol\":6030:6037  _amount */\n      dup3\n        /* \"contracts/ACConfig.sol\":6030:6044  _amount.length */\n      mload\n        /* \"contracts/ACConfig.sol\":6026:6027  i */\n      dup2\n        /* \"contracts/ACConfig.sol\":6026:6044  i < _amount.length */\n      lt\n        /* \"contracts/ACConfig.sol\":6007:6118  for(uint256 i = 0; i < _amount.length; ++i){... */\n      iszero\n      tag_436\n      jumpi\n        /* \"contracts/ACConfig.sol\":6080:6106  Level(_amount[i],_rate[i]) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ACConfig.sol\":6086:6093  _amount */\n      dup5\n        /* \"contracts/ACConfig.sol\":6094:6095  i */\n      dup4\n        /* \"contracts/ACConfig.sol\":6086:6096  _amount[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_439\n      jumpi\n      tag_439\n      tag_365\n      jump\t// in\n    tag_439:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/ACConfig.sol\":6080:6106  Level(_amount[i],_rate[i]) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ACConfig.sol\":6097:6102  _rate */\n      dup4\n        /* \"contracts/ACConfig.sol\":6103:6104  i */\n      dup4\n        /* \"contracts/ACConfig.sol\":6097:6105  _rate[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_441\n      jumpi\n      tag_441\n      tag_365\n      jump\t// in\n    tag_441:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/ACConfig.sol\":6080:6106  Level(_amount[i],_rate[i]) */\n      swap1\n      swap2\n      mstore\n        /* \"contracts/ACConfig.sol\":6065:6077  teamLevel[i] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":6065:6074  teamLevel */\n      0xdf\n        /* \"contracts/ACConfig.sol\":6065:6077  teamLevel[i] */\n      dup3\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ACConfig.sol\":6065:6106  teamLevel[i] = Level(_amount[i],_rate[i]) */\n      dup3\n      mload\n      dup2\n      sstore\n      swap2\n      add\n      mload\n      0x01\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/ACConfig.sol\":6046:6049  ++i */\n      tag_442\n        /* \"contracts/ACConfig.sol\":6075:6076  i */\n      dup2\n        /* \"contracts/ACConfig.sol\":6046:6049  ++i */\n      tag_443\n      jump\t// in\n    tag_442:\n      swap1\n      pop\n        /* \"contracts/ACConfig.sol\":6007:6118  for(uint256 i = 0; i < _amount.length; ++i){... */\n      jump(tag_435)\n    tag_436:\n      pop\n        /* \"contracts/ACConfig.sol\":5838:6125  function changeTeamLevel(uint256[] memory _amount,uint256[] memory _rate)external onlyAdmin{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":6854:6997  function changeSameLevelRewardRate(uint256 _sameLevelRewardRate)external onlyAdmin{... */\n    tag_171:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_445\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_446\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_446:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_445:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_447\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_447:\n        /* \"contracts/ACConfig.sol\":6947:6966  sameLevelRewardRate */\n      0xd9\n        /* \"contracts/ACConfig.sol\":6947:6989  sameLevelRewardRate = _sameLevelRewardRate */\n      sstore\n        /* \"contracts/ACConfig.sol\":6854:6997  function changeSameLevelRewardRate(uint256 _sameLevelRewardRate)external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":4760:4856  function setAdmin(address user,bool auth)external onlyOwner{... */\n    tag_176:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_451\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_349\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_451:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":4830:4841  admin[user] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":4830:4835  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":4830:4841  admin[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ACConfig.sol\":4830:4848  admin[user] = auth */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":4760:4856  function setAdmin(address user,bool auth)external onlyOwner{... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3763:3985  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {... */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1898:1904  __self */\n      immutable(\"0x90a0a53a674dda23f50c6d7df8f61e9f3e3cf11a0ea21d6964915bb3c7f9b219\")\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1889:1893  this */\n      address\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1881:1904  address(this) != __self */\n      sub\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1873:1953  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_454\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_412\n      jump\t// in\n    tag_454:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1995:2001  __self */\n      immutable(\"0x90a0a53a674dda23f50c6d7df8f61e9f3e3cf11a0ea21d6964915bb3c7f9b219\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      tag_456\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1989  _getImplementation */\n      tag_414\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:1991  _getImplementation() */\n      jump\t// in\n    tag_456:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1971:2001  _getImplementation() == __self */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1963:2050  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_457\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_417\n      jump\t// in\n    tag_457:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3880:3916  _authorizeUpgrade(newImplementation) */\n      tag_460\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3898:3915  newImplementation */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3880:3897  _authorizeUpgrade */\n      tag_420\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3880:3916  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_460:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3926:3978  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_461\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3948:3965  newImplementation */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3967:3971  data */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3973:3977  true */\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3926:3947  _upgradeToAndCallUUPS */\n      tag_425\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3926:3978  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_461:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3763:3985  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_195:\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3084:3091  bytes32 */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2324:2328  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2333:2339  __self */\n      immutable(\"0x90a0a53a674dda23f50c6d7df8f61e9f3e3cf11a0ea21d6964915bb3c7f9b219\")\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2316:2339  address(this) == __self */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_463\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9845:9847   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9827:9848   */\n      mstore\n        /* \"#utility.yul\":9884:9886   */\n      0x38\n        /* \"#utility.yul\":9864:9882   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9857:9887   */\n      mstore\n        /* \"#utility.yul\":9923:9957   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":9903:9921   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9896:9958   */\n      mstore\n      shl(0x42, 0x1b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":9974:9992   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9967:10021   */\n      mstore\n        /* \"#utility.yul\":10038:10057   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_355\n        /* \"#utility.yul\":9643:10063   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2308:2400  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_463:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3006:3137  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":4973:5109  function airdropMachine(address user,uint256 amount)external onlyAdmin{... */\n    tag_205:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_468\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_469\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_469:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_468:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_470\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_470:\n        /* \"contracts/ACConfig.sol\":5064:5071  mmStore */\n      sload(0xcc)\n        /* \"contracts/ACConfig.sol\":5054:5101  IMMStore2(mmStore).airdropMachine(user, amount) */\n      mload(0x40)\n      shl(0xe1, 0x2bb14fc1)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10260:10292   */\n      dup5\n      dup2\n      and\n        /* \"contracts/ACConfig.sol\":5054:5101  IMMStore2(mmStore).airdropMachine(user, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":10242:10293   */\n      mstore\n        /* \"#utility.yul\":10309:10327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10302:10336   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/ACConfig.sol\":5064:5071  mmStore */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/ACConfig.sol\":5054:5087  IMMStore2(mmStore).airdropMachine */\n      0x57629f82\n      swap1\n        /* \"#utility.yul\":10215:10233   */\n      0x44\n      add\n        /* \"contracts/ACConfig.sol\":5054:5101  IMMStore2(mmStore).airdropMachine(user, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_475\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_475:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_477\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_477:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":4973:5109  function airdropMachine(address user,uint256 amount)external onlyAdmin{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":7618:7730  function changeTechAddress(address _techAddress) external onlyAdmin{... */\n    tag_217:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_479\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_480\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_480:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_479:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_481\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_481:\n        /* \"contracts/ACConfig.sol\":7696:7707  techAddress */\n      0xd4\n        /* \"contracts/ACConfig.sol\":7696:7722  techAddress = _techAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":7618:7730  function changeTechAddress(address _techAddress) external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":6133:6276  function changeShareHolderMinLimit(uint256 _shareHolderMinLimit)external onlyAdmin{... */\n    tag_221:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_485\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_486\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_486:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_485:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_487\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_487:\n        /* \"contracts/ACConfig.sol\":6226:6245  shareHolderMinLimit */\n      0xde\n        /* \"contracts/ACConfig.sol\":6226:6268  shareHolderMinLimit = _shareHolderMinLimit */\n      sstore\n        /* \"contracts/ACConfig.sol\":6133:6276  function changeShareHolderMinLimit(uint256 _shareHolderMinLimit)external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":4469:4752  function getUserLevels()external view returns(address[] memory users,uint256[] memory levels){... */\n    tag_228:\n        /* \"contracts/ACConfig.sol\":4515:4537  address[] memory users */\n      0x60\n        /* \"contracts/ACConfig.sol\":4538:4561  uint256[] memory levels */\n      dup1\n        /* \"contracts/ACConfig.sol\":4581:4588  userArr */\n      0xe1\n        /* \"contracts/ACConfig.sol\":4573:4588  users = userArr */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_491\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_492:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_492\n      jumpi\n    tag_491:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n        /* \"contracts/ACConfig.sol\":4622:4627  users */\n      dup2\n        /* \"contracts/ACConfig.sol\":4622:4634  users.length */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":4608:4635  new uint256[](users.length) */\n      dup2\n      gt\n      iszero\n      tag_494\n      jumpi\n      tag_494\n      tag_361\n      jump\t// in\n    tag_494:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_495\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_495:\n      pop\n        /* \"contracts/ACConfig.sol\":4599:4635  levels = new uint256[](users.length) */\n      swap1\n      pop\n        /* \"contracts/ACConfig.sol\":4650:4659  uint256 i */\n      0x00\n        /* \"contracts/ACConfig.sol\":4646:4745  for(uint256 i = 0; i < users.length; i++){... */\n    tag_496:\n        /* \"contracts/ACConfig.sol\":4669:4674  users */\n      dup3\n        /* \"contracts/ACConfig.sol\":4669:4681  users.length */\n      mload\n        /* \"contracts/ACConfig.sol\":4665:4666  i */\n      dup2\n        /* \"contracts/ACConfig.sol\":4665:4681  i < users.length */\n      lt\n        /* \"contracts/ACConfig.sol\":4646:4745  for(uint256 i = 0; i < users.length; i++){... */\n      iszero\n      tag_497\n      jumpi\n        /* \"contracts/ACConfig.sol\":4714:4723  userLevel */\n      0xe0\n        /* \"contracts/ACConfig.sol\":4714:4733  userLevel[users[i]] */\n      0x00\n        /* \"contracts/ACConfig.sol\":4724:4729  users */\n      dup5\n        /* \"contracts/ACConfig.sol\":4730:4731  i */\n      dup4\n        /* \"contracts/ACConfig.sol\":4724:4732  users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_500\n      jumpi\n      tag_500\n      tag_365\n      jump\t// in\n    tag_500:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":4714:4733  userLevel[users[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/ACConfig.sol\":4702:4708  levels */\n      dup3\n        /* \"contracts/ACConfig.sol\":4709:4710  i */\n      dup3\n        /* \"contracts/ACConfig.sol\":4702:4711  levels[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_502\n      jumpi\n      tag_502\n      tag_365\n      jump\t// in\n    tag_502:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ACConfig.sol\":4702:4733  levels[i] = userLevel[users[i]] */\n      mstore\n        /* \"contracts/ACConfig.sol\":4683:4686  i++ */\n      dup1\n      tag_503\n      dup2\n      tag_443\n      jump\t// in\n    tag_503:\n      swap2\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":4646:4745  for(uint256 i = 0; i < users.length; i++){... */\n      jump(tag_496)\n    tag_497:\n      pop\n        /* \"contracts/ACConfig.sol\":4469:4752  function getUserLevels()external view returns(address[] memory users,uint256[] memory levels){... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_233:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_505\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_349\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_505:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_507\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_508\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_507:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":8266:8382  function changePlatformRate(uint256 _platformRate)external onlyAdmin {... */\n    tag_237:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_510\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_511\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_511:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_510:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_512\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_512:\n        /* \"contracts/ACConfig.sol\":8346:8358  platformRate */\n      0xd1\n        /* \"contracts/ACConfig.sol\":8346:8374  platformRate = _platformRate */\n      sstore\n        /* \"contracts/ACConfig.sol\":8266:8382  function changePlatformRate(uint256 _platformRate)external onlyAdmin {... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":5568:5703  function changeMachineExpireTime(uint256 _machineExpireTime)external onlyAdmin{... */\n    tag_241:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_516\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_517\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_517:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_516:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_518\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_518:\n        /* \"contracts/ACConfig.sol\":5657:5674  machineExpireTime */\n      0xe2\n        /* \"contracts/ACConfig.sol\":5657:5695  machineExpireTime = _machineExpireTime */\n      sstore\n        /* \"contracts/ACConfig.sol\":5568:5703  function changeMachineExpireTime(uint256 _machineExpireTime)external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":7322:7458  function changeMaxComputingPower(uint256 _maxComputingPower) external onlyAdmin{... */\n    tag_245:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_522\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_523\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_523:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_522:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_524\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_524:\n        /* \"contracts/ACConfig.sol\":7412:7429  maxComputingPower */\n      0xe6\n        /* \"contracts/ACConfig.sol\":7412:7450  maxComputingPower = _maxComputingPower */\n      sstore\n        /* \"contracts/ACConfig.sol\":7322:7458  function changeMaxComputingPower(uint256 _maxComputingPower) external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":5711:5830  function changeClaimInterval(uint256 _claimInterval)external onlyAdmin{... */\n    tag_249:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_528\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_529\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_529:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_528:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_530\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_530:\n        /* \"contracts/ACConfig.sol\":5792:5805  claimInterval */\n      0xe3\n        /* \"contracts/ACConfig.sol\":5792:5822  claimInterval = _claimInterval */\n      sstore\n        /* \"contracts/ACConfig.sol\":5711:5830  function changeClaimInterval(uint256 _claimInterval)external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":5268:5556  function setConfig(address _usdt,address _mv,address _acb,address _minePool,address _mmStore,address _acbPair)external onlyAdmin{... */\n    tag_254:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_534\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_535\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_535:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_534:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_536\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_536:\n        /* \"contracts/ACConfig.sol\":5407:5411  usdt */\n      0xc9\n        /* \"contracts/ACConfig.sol\":5407:5419  usdt = _usdt */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap9\n      dup10\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ACConfig.sol\":5430:5432  mv */\n      0xcb\n        /* \"contracts/ACConfig.sol\":5430:5438  mv = _mv */\n      dup1\n      sload\n      dup3\n      and\n      swap7\n      dup9\n      and\n      swap7\n      swap1\n      swap7\n      or\n      swap1\n      swap6\n      sstore\n        /* \"contracts/ACConfig.sol\":5449:5452  acb */\n      0xca\n        /* \"contracts/ACConfig.sol\":5449:5459  acb = _acb */\n      dup1\n      sload\n      dup7\n      and\n      swap5\n      dup8\n      and\n      swap5\n      swap1\n      swap5\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/ACConfig.sol\":5470:5478  minePool */\n      0xcd\n        /* \"contracts/ACConfig.sol\":5470:5490  minePool = _minePool */\n      dup1\n      sload\n      dup6\n      and\n      swap3\n      dup7\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ACConfig.sol\":5501:5508  mmStore */\n      0xcc\n        /* \"contracts/ACConfig.sol\":5501:5519  mmStore = _mmStore */\n      dup1\n      sload\n      dup5\n      and\n      swap2\n      dup6\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":5530:5537  acbPair */\n      0xce\n        /* \"contracts/ACConfig.sol\":5530:5548  acbPair = _acbPair */\n      dup1\n      sload\n      swap1\n      swap3\n      and\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":5268:5556  function setConfig(address _usdt,address _mv,address _acb,address _minePool,address _mmStore,address _acbPair)external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":6725:6848  function changeTeamRewardRate(uint256 _teamRewardRate)external onlyAdmin{... */\n    tag_262:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_540\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_541\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_541:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_540:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_542\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_542:\n        /* \"contracts/ACConfig.sol\":6808:6822  teamRewardRate */\n      0xda\n        /* \"contracts/ACConfig.sol\":6808:6840  teamRewardRate = _teamRewardRate */\n      sstore\n        /* \"contracts/ACConfig.sol\":6725:6848  function changeTeamRewardRate(uint256 _teamRewardRate)external onlyAdmin{... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_269:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":3569:3884  function getTeamLevel()external view returns(uint256[] memory amounts,uint256[] memory rates){... */\n    tag_285:\n        /* \"contracts/ACConfig.sol\":3683:3699  new uint256[](4) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ACConfig.sol\":3697:3698  4 */\n      0x04\n        /* \"contracts/ACConfig.sol\":3683:3699  new uint256[](4) */\n      dup1\n      dup3\n      mstore\n      0xa0\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ACConfig.sol\":3614:3638  uint256[] memory amounts */\n      0x60\n      swap2\n      dup3\n      swap2\n        /* \"contracts/ACConfig.sol\":3683:3699  new uint256[](4) */\n      swap1\n      0x20\n      dup3\n      add\n      0x80\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":3718:3734  new uint256[](4) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/ACConfig.sol\":3732:3733  4 */\n      0x04\n        /* \"contracts/ACConfig.sol\":3718:3734  new uint256[](4) */\n      dup1\n      dup3\n      mstore\n      0xa0\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/ACConfig.sol\":3673:3699  amounts = new uint256[](4) */\n      swap3\n      swap5\n      pop\n        /* \"contracts/ACConfig.sol\":3732:3733  4 */\n      swap1\n      pop\n        /* \"contracts/ACConfig.sol\":3718:3734  new uint256[](4) */\n      0x20\n      dup3\n      add\n      0x80\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":3710:3734  rates = new uint256[](4) */\n      swap1\n      pop\n        /* \"contracts/ACConfig.sol\":3749:3758  uint256 i */\n      0x00\n        /* \"contracts/ACConfig.sol\":3745:3877  for(uint256 i = 0; i < 4; i++){... */\n    tag_553:\n        /* \"contracts/ACConfig.sol\":3768:3769  4 */\n      0x04\n        /* \"contracts/ACConfig.sol\":3764:3765  i */\n      dup2\n        /* \"contracts/ACConfig.sol\":3764:3769  i < 4 */\n      lt\n        /* \"contracts/ACConfig.sol\":3745:3877  for(uint256 i = 0; i < 4; i++){... */\n      iszero\n      tag_497\n      jumpi\n        /* \"contracts/ACConfig.sol\":3803:3815  teamLevel[i] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":3803:3812  teamLevel */\n      0xdf\n        /* \"contracts/ACConfig.sol\":3803:3815  teamLevel[i] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/ACConfig.sol\":3803:3822  teamLevel[i].amount */\n      sload\n        /* \"contracts/ACConfig.sol\":3790:3800  amounts[i] */\n      dup4\n      mload\n        /* \"contracts/ACConfig.sol\":3790:3797  amounts */\n      dup5\n      swap1\n        /* \"contracts/ACConfig.sol\":3813:3814  i */\n      dup4\n      swap1\n        /* \"contracts/ACConfig.sol\":3790:3800  amounts[i] */\n      dup2\n      lt\n      tag_557\n      jumpi\n      tag_557\n      tag_365\n      jump\t// in\n    tag_557:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/ACConfig.sol\":3790:3822  amounts[i] = teamLevel[i].amount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":3848:3857  teamLevel */\n      0xdf\n        /* \"contracts/ACConfig.sol\":3848:3860  teamLevel[i] */\n      0x00\n        /* \"contracts/ACConfig.sol\":3858:3859  i */\n      dup3\n        /* \"contracts/ACConfig.sol\":3848:3860  teamLevel[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/ACConfig.sol\":3848:3865  teamLevel[i].rate */\n      0x01\n      add\n      sload\n        /* \"contracts/ACConfig.sol\":3837:3842  rates */\n      dup3\n        /* \"contracts/ACConfig.sol\":3843:3844  i */\n      dup3\n        /* \"contracts/ACConfig.sol\":3837:3845  rates[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_559\n      jumpi\n      tag_559\n      tag_365\n      jump\t// in\n    tag_559:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/ACConfig.sol\":3837:3865  rates[i] = teamLevel[i].rate */\n      mstore\n        /* \"contracts/ACConfig.sol\":3771:3774  i++ */\n      dup1\n      tag_560\n      dup2\n      tag_443\n      jump\t// in\n    tag_560:\n      swap2\n      pop\n      pop\n        /* \"contracts/ACConfig.sol\":3745:3877  for(uint256 i = 0; i < 4; i++){... */\n      jump(tag_553)\n        /* \"contracts/ACConfig.sol\":2128:3448  function initialize(address _operator)external initializer{... */\n    tag_295:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3287  bool isTopLevelCall */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3291:3304  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3290:3304  !_initializing */\n      iszero\n      dup1\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_562\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3366  _initialized */\n      sload(0x00)\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3369:3370  1 */\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3366  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3354:3370  _initialized < 1 */\n      lt\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3336:3370  isTopLevelCall && _initialized < 1 */\n    tag_562:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3335:3443  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_566\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3421  AddressUpgradeable.isContract(address(this)) */\n      tag_564\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3415:3419  this */\n      address\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3406  AddressUpgradeable.isContract */\n      tag_565\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3377:3421  AddressUpgradeable.isContract(address(this)) */\n      jump\t// in\n    tag_564:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3421  !AddressUpgradeable.isContract(address(this)) */\n      iszero\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      dup1\n      iszero\n      tag_566\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3425:3437  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3425:3442  _initialized == 1 */\n      eq\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3376:3442  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_566:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      tag_567\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10549:10551   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10531:10552   */\n      mstore\n        /* \"#utility.yul\":10588:10590   */\n      0x2e\n        /* \"#utility.yul\":10568:10586   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10561:10591   */\n      mstore\n        /* \"#utility.yul\":10627:10661   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":10607:10625   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10600:10662   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":10678:10696   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10671:10715   */\n      mstore\n        /* \"#utility.yul\":10732:10751   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n      tag_355\n        /* \"#utility.yul\":10347:10757   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3314:3515  require(... */\n    tag_567:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3537  _initialized */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3541  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3540:3541  1 */\n      0x01\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3525:3541  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3616  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_570\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3585:3598  _initializing */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3585:3605  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3616  if (isTopLevelCall) {... */\n    tag_570:\n        /* \"contracts/ACConfig.sol\":2197:2213  __Ownable_init() */\n      tag_572\n        /* \"contracts/ACConfig.sol\":2197:2211  __Ownable_init */\n      tag_573\n        /* \"contracts/ACConfig.sol\":2197:2213  __Ownable_init() */\n      jump\t// in\n    tag_572:\n        /* \"contracts/ACConfig.sol\":2224:2232  operator */\n      0xe4\n        /* \"contracts/ACConfig.sol\":2224:2244  operator = _operator */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap2\n      dup3\n      and\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ACConfig.sol\":2257:2272  platformAddress */\n      0xcf\n        /* \"contracts/ACConfig.sol\":2257:2317  platformAddress = 0xdF9228FC02F4554CD80AF6D036dADe242022e4f2 */\n      dup1\n      sload\n      dup3\n      and\n        /* \"contracts/ACConfig.sol\":2275:2317  0xdF9228FC02F4554CD80AF6D036dADe242022e4f2 */\n      0xdf9228fc02f4554cd80af6d036dade242022e4f2\n        /* \"contracts/ACConfig.sol\":2257:2317  platformAddress = 0xdF9228FC02F4554CD80AF6D036dADe242022e4f2 */\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":2328:2348  monthDividendAddress */\n      0xd0\n        /* \"contracts/ACConfig.sol\":2328:2393  monthDividendAddress = 0x4076AF4556458cDd0ad25E86eD23B4dc8437DcE4 */\n      dup1\n      sload\n      dup3\n      and\n        /* \"contracts/ACConfig.sol\":2351:2393  0x4076AF4556458cDd0ad25E86eD23B4dc8437DcE4 */\n      0x4076af4556458cdd0ad25e86ed23b4dc8437dce4\n        /* \"contracts/ACConfig.sol\":2328:2393  monthDividendAddress = 0x4076AF4556458cDd0ad25E86eD23B4dc8437DcE4 */\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":2419:2422  900 */\n      0x0384\n        /* \"contracts/ACConfig.sol\":2404:2416  platformRate */\n      0xd1\n        /* \"contracts/ACConfig.sol\":2404:2422  platformRate = 900 */\n      sstore\n        /* \"contracts/ACConfig.sol\":2444:2448  1000 */\n      0x03e8\n        /* \"contracts/ACConfig.sol\":2433:2441  swapRate */\n      0xd2\n        /* \"contracts/ACConfig.sol\":2433:2448  swapRate = 1000 */\n      sstore\n        /* \"contracts/ACConfig.sol\":2461:2480  mvCollectionAddress */\n      0xd3\n        /* \"contracts/ACConfig.sol\":2461:2525  mvCollectionAddress = 0xFAe25F1Ae4B758D7C96D7Eb075B62af4F3398b89 */\n      dup1\n      sload\n      dup3\n      and\n        /* \"contracts/ACConfig.sol\":2483:2525  0xFAe25F1Ae4B758D7C96D7Eb075B62af4F3398b89 */\n      0xfae25f1ae4b758d7c96d7eb075b62af4f3398b89\n        /* \"contracts/ACConfig.sol\":2461:2525  mvCollectionAddress = 0xFAe25F1Ae4B758D7C96D7Eb075B62af4F3398b89 */\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":2536:2547  techAddress */\n      0xd4\n        /* \"contracts/ACConfig.sol\":2536:2592  techAddress = 0x7FbA7858083836D9169eb3bE21A48189E1798c8e */\n      dup1\n      sload\n      dup3\n      and\n        /* \"contracts/ACConfig.sol\":2550:2592  0x7FbA7858083836D9169eb3bE21A48189E1798c8e */\n      0x7fba7858083836d9169eb3be21a48189e1798c8e\n        /* \"contracts/ACConfig.sol\":2536:2592  techAddress = 0x7FbA7858083836D9169eb3bE21A48189E1798c8e */\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":2603:2616  marketAddress */\n      0xd5\n        /* \"contracts/ACConfig.sol\":2603:2661  marketAddress = 0x2737ac6359664096f22863088246d885F14E6FF2 */\n      dup1\n      sload\n      dup3\n      and\n        /* \"contracts/ACConfig.sol\":2619:2661  0x2737ac6359664096f22863088246d885F14E6FF2 */\n      0x2737ac6359664096f22863088246d885f14e6ff2\n        /* \"contracts/ACConfig.sol\":2603:2661  marketAddress = 0x2737ac6359664096f22863088246d885F14E6FF2 */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ACConfig.sol\":2702:2710  20 ether */\n      0x01158e460913d00000\n        /* \"contracts/ACConfig.sol\":2682:2699  minComputingPower */\n      0xd6\n        /* \"contracts/ACConfig.sol\":2682:2710  minComputingPower = 20 ether */\n      sstore\n        /* \"contracts/ACConfig.sol\":2741:2751  6000 ether */\n      0x014542ba12a337c00000\n        /* \"contracts/ACConfig.sol\":2721:2738  maxComputingPower */\n      0xe6\n        /* \"contracts/ACConfig.sol\":2721:2751  maxComputingPower = 6000 ether */\n      sstore\n        /* \"contracts/ACConfig.sol\":2781:2784  150 */\n      0x96\n        /* \"contracts/ACConfig.sol\":2762:2778  refRewardOneRate */\n      0xd7\n        /* \"contracts/ACConfig.sol\":2762:2784  refRewardOneRate = 150 */\n      sstore\n        /* \"contracts/ACConfig.sol\":2814:2817  100 */\n      0x64\n        /* \"contracts/ACConfig.sol\":2795:2811  refRewardTwoRate */\n      0xd8\n        /* \"contracts/ACConfig.sol\":2795:2817  refRewardTwoRate = 100 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":2828:2847  sameLevelRewardRate */\n      0xd9\n        /* \"contracts/ACConfig.sol\":2828:2853  sameLevelRewardRate = 100 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":2864:2878  teamRewardRate */\n      0xda\n        /* \"contracts/ACConfig.sol\":2864:2884  teamRewardRate = 100 */\n      sstore\n        /* \"contracts/ACConfig.sol\":2895:2912  teamRewardAddress */\n      0xdb\n        /* \"contracts/ACConfig.sol\":2895:2957  teamRewardAddress = 0x2737ac6359664096f22863088246d885F14E6FF2 */\n      dup1\n      sload\n      dup4\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":2968:2984  remainingAddress */\n      0xdc\n        /* \"contracts/ACConfig.sol\":2968:3029  remainingAddress = 0xb36F6361dCf31D0D7956E9e826a9915A5ddEC272 */\n      dup1\n      sload\n      dup3\n      and\n        /* \"contracts/ACConfig.sol\":2987:3029  0xb36F6361dCf31D0D7956E9e826a9915A5ddEC272 */\n      0xb36f6361dcf31d0d7956e9e826a9915a5ddec272\n        /* \"contracts/ACConfig.sol\":2968:3029  remainingAddress = 0xb36F6361dCf31D0D7956E9e826a9915A5ddEC272 */\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":3064:3066  50 */\n      0x32\n        /* \"contracts/ACConfig.sol\":3040:3061  shareHolderRewardRate */\n      0xdd\n        /* \"contracts/ACConfig.sol\":3040:3066  shareHolderRewardRate = 50 */\n      sstore\n        /* \"contracts/ACConfig.sol\":3099:3110  20000 ether */\n      0x043c33c1937564800000\n        /* \"contracts/ACConfig.sol\":3077:3096  shareHolderMinLimit */\n      0xde\n        /* \"contracts/ACConfig.sol\":3077:3110  shareHolderMinLimit = 20000 ether */\n      sstore\n        /* \"contracts/ACConfig.sol\":3138:3148  Level(0,0) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n        /* \"contracts/ACConfig.sol\":2224:2232  operator */\n      0x00\n        /* \"contracts/ACConfig.sol\":3138:3148  Level(0,0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":3123:3135  teamLevel[0] */\n      dup3\n      dup1\n      mstore\n        /* \"contracts/ACConfig.sol\":3123:3132  teamLevel */\n      0xdf\n        /* \"contracts/ACConfig.sol\":3123:3135  teamLevel[0] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/ACConfig.sol\":3123:3148  teamLevel[0] = Level(0,0) */\n      swap4\n      mload\n        /* \"contracts/ACConfig.sol\":3123:3135  teamLevel[0] */\n      0x4b917336ba36fefa23b90074e126fe5413f0e3fc800e7ab1da217d9a2807b711\n        /* \"contracts/ACConfig.sol\":3123:3148  teamLevel[0] = Level(0,0) */\n      sstore\n      mload\n      0x4b917336ba36fefa23b90074e126fe5413f0e3fc800e7ab1da217d9a2807b712\n      sstore\n        /* \"contracts/ACConfig.sol\":3174:3196  Level(10000 ether,200) */\n      dup4\n      mload\n      dup1\n      dup6\n      add\n      dup6\n      mstore\n        /* \"contracts/ACConfig.sol\":3180:3191  10000 ether */\n      0x021e19e0c9bab2400000\n        /* \"contracts/ACConfig.sol\":3174:3196  Level(10000 ether,200) */\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":3192:3195  200 */\n      0xc8\n        /* \"contracts/ACConfig.sol\":3174:3196  Level(10000 ether,200) */\n      dup2\n      dup4\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2224:2244  operator = _operator */\n      0x01\n        /* \"contracts/ACConfig.sol\":3159:3171  teamLevel[1] */\n      dup1\n      dup6\n      mstore\n      dup6\n      dup5\n      mstore\n        /* \"contracts/ACConfig.sol\":3159:3196  teamLevel[1] = Level(10000 ether,200) */\n      swap2\n      mload\n        /* \"contracts/ACConfig.sol\":3159:3171  teamLevel[1] */\n      0x55c38c42e971eeb957b61422467f67fa3b212021ac50a6b2b3d5acd9d01cb97d\n        /* \"contracts/ACConfig.sol\":3159:3196  teamLevel[1] = Level(10000 ether,200) */\n      sstore\n      mload\n      0x55c38c42e971eeb957b61422467f67fa3b212021ac50a6b2b3d5acd9d01cb97e\n      sstore\n        /* \"contracts/ACConfig.sol\":3222:3244  Level(30000 ether,350) */\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      dup7\n      mstore\n        /* \"contracts/ACConfig.sol\":3228:3239  30000 ether */\n      0x065a4da25d3016c00000\n        /* \"contracts/ACConfig.sol\":3222:3244  Level(30000 ether,350) */\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":3240:3243  350 */\n      0x015e\n        /* \"contracts/ACConfig.sol\":3222:3244  Level(30000 ether,350) */\n      dup2\n      dup5\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":3217:3218  2 */\n      0x02\n        /* \"contracts/ACConfig.sol\":3207:3219  teamLevel[2] */\n      dup6\n      mstore\n      dup6\n      dup5\n      mstore\n        /* \"contracts/ACConfig.sol\":3207:3244  teamLevel[2] = Level(30000 ether,350) */\n      swap1\n      mload\n        /* \"contracts/ACConfig.sol\":3207:3219  teamLevel[2] */\n      0x36d20378f308040d39a8a5e0299048c5eb6a3e2af0aad6fc5cbd63dba6084c75\n        /* \"contracts/ACConfig.sol\":3207:3244  teamLevel[2] = Level(30000 ether,350) */\n      sstore\n      mload\n      0x36d20378f308040d39a8a5e0299048c5eb6a3e2af0aad6fc5cbd63dba6084c76\n      sstore\n        /* \"contracts/ACConfig.sol\":3270:3293  Level(100000 ether,500) */\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      swap1\n      swap6\n      mstore\n        /* \"contracts/ACConfig.sol\":3276:3288  100000 ether */\n      0x152d02c7e14af6800000\n        /* \"contracts/ACConfig.sol\":3270:3293  Level(100000 ether,500) */\n      dup6\n      mstore\n        /* \"contracts/ACConfig.sol\":3289:3292  500 */\n      0x01f4\n        /* \"contracts/ACConfig.sol\":3270:3293  Level(100000 ether,500) */\n      dup6\n      dup4\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":3265:3266  3 */\n      0x03\n        /* \"contracts/ACConfig.sol\":3255:3267  teamLevel[3] */\n      dup1\n      dup6\n      mstore\n      swap5\n      dup4\n      mstore\n        /* \"contracts/ACConfig.sol\":3255:3293  teamLevel[3] = Level(100000 ether,500) */\n      swap5\n      mload\n        /* \"contracts/ACConfig.sol\":3255:3267  teamLevel[3] */\n      0x780609eda5e52d7936e75ead8ec77fc018859646a90304d10fb581006956b09e\n        /* \"contracts/ACConfig.sol\":3255:3293  teamLevel[3] = Level(100000 ether,500) */\n      sstore\n      swap4\n      mload\n      0x780609eda5e52d7936e75ead8ec77fc018859646a90304d10fb581006956b09f\n      sstore\n        /* \"contracts/ACConfig.sol\":3306:3315  userLevel */\n      0xe0\n        /* \"contracts/ACConfig.sol\":3306:3320  userLevel[top] */\n      swap1\n      mstore\n      0x29f40cf27a854b63617043f10b660b0f327b8234f55a91e6b6f6e8a2fa39678b\n        /* \"contracts/ACConfig.sol\":3306:3324  userLevel[top] = 3 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ACConfig.sol\":3335:3342  userArr */\n      0xe1\n        /* \"contracts/ACConfig.sol\":3335:3352  userArr.push(top) */\n      dup1\n      sload\n      swap3\n      dup4\n      add\n      dup2\n      sstore\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_e3d46f142e20657c402ed08bdf439babdd6fbb8091e2708315f00847c0f52cc5\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      add\n      dup1\n      sload\n      swap1\n      swap2\n      and\n        /* \"contracts/ACConfig.sol\":605:647  0xd220B3cf1E4660C5509418B42A86d7945E6E2e18 */\n      0xd220b3cf1e4660c5509418b42a86d7945e6e2e18\n        /* \"contracts/ACConfig.sol\":3335:3352  userArr.push(top) */\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":3385:3393  365 days */\n      0x01e13380\n        /* \"contracts/ACConfig.sol\":3365:3382  machineExpireTime */\n      0xe2\n        /* \"contracts/ACConfig.sol\":3365:3393  machineExpireTime = 365 days */\n      sstore\n        /* \"contracts/ACConfig.sol\":3420:3429  1 minutes */\n      0x3c\n        /* \"contracts/ACConfig.sol\":3404:3417  claimInterval */\n      0xe3\n        /* \"contracts/ACConfig.sol\":3404:3429  claimInterval = 1 minutes */\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3636:3735  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_461\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3686:3691  false */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3670:3691  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":10914:10950   */\n      dup2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":10902:10904   */\n      0x20\n        /* \"#utility.yul\":10887:10905   */\n      add\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3710:3724  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3741  {... */\n      pop\n        /* \"contracts/ACConfig.sol\":2128:3448  function initialize(address _operator)external initializer{... */\n      pop\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":7866:7994  function changePlatformAddress(address _platformAddress)external onlyAdmin {... */\n    tag_299:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_579\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_580\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_580:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_579:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_581\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_581:\n        /* \"contracts/ACConfig.sol\":7952:7967  platformAddress */\n      0xcf\n        /* \"contracts/ACConfig.sol\":7952:7986  platformAddress = _platformAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":7866:7994  function changePlatformAddress(address _platformAddress)external onlyAdmin {... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":7005:7170  function changeRefRewardRate(uint256 _oneRate,uint256 _twoRate)external onlyAdmin{... */\n    tag_308:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_585\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_586\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_586:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_585:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_587\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_587:\n        /* \"contracts/ACConfig.sol\":7097:7113  refRewardOneRate */\n      0xd7\n        /* \"contracts/ACConfig.sol\":7097:7124  refRewardOneRate = _oneRate */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/ACConfig.sol\":7135:7151  refRewardTwoRate */\n      0xd8\n        /* \"contracts/ACConfig.sol\":7135:7162  refRewardTwoRate = _twoRate */\n      sstore\n        /* \"contracts/ACConfig.sol\":7005:7170  function changeRefRewardRate(uint256 _oneRate,uint256 _twoRate)external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":6443:6574  function changeRemainingAddress(address _remainingAddress)external onlyAdmin{... */\n    tag_316:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_591\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_592\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_592:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_591:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_593\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_593:\n        /* \"contracts/ACConfig.sol\":6530:6546  remainingAddress */\n      0xdc\n        /* \"contracts/ACConfig.sol\":6530:6566  remainingAddress = _remainingAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":6443:6574  function changeRemainingAddress(address _remainingAddress)external onlyAdmin{... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_324:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_597\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_349\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_597:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      dup2\n      and\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_599\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11163:11165   */\n      0x20\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11145:11166   */\n      mstore\n        /* \"#utility.yul\":11202:11204   */\n      0x26\n        /* \"#utility.yul\":11182:11200   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11175:11205   */\n      mstore\n        /* \"#utility.yul\":11241:11275   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11221:11239   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11214:11276   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11292:11310   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11285:11321   */\n      mstore\n        /* \"#utility.yul\":11338:11357   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_355\n        /* \"#utility.yul\":10961:11363   */\n      jump\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_599:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_421\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_508\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/ACConfig.sol\":8002:8150  function changeMonthDividenAddress(address _monthDividendAddress) external onlyAdmin {... */\n    tag_328:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_604\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_605\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_605:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_604:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_606\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_606:\n        /* \"contracts/ACConfig.sol\":8098:8118  monthDividendAddress */\n      0xd0\n        /* \"contracts/ACConfig.sol\":8098:8142  monthDividendAddress = _monthDividendAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":8002:8150  function changeMonthDividenAddress(address _monthDividendAddress) external onlyAdmin {... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":7466:7610  function changeMvCollectionAddress(address _mvCollectionAddress) external onlyAdmin{... */\n    tag_332:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_610\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_611\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_611:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_610:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_612\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_612:\n        /* \"contracts/ACConfig.sol\":7560:7579  mvCollectionAddress */\n      0xd3\n        /* \"contracts/ACConfig.sol\":7560:7602  mvCollectionAddress = _mvCollectionAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":7466:7610  function changeMvCollectionAddress(address _mvCollectionAddress) external onlyAdmin{... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":6582:6717  function changeTeamRewardAddress(address _teamRewardAddress)external onlyAdmin{... */\n    tag_344:\n        /* \"contracts/ACConfig.sol\":2047:2057  msg.sender */\n      caller\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/ACConfig.sol\":2041:2046  admin */\n      0xe5\n        /* \"contracts/ACConfig.sol\":2041:2058  admin[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n      tag_616\n      jumpi\n      pop\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      tag_617\n        /* \"contracts/ACConfig.sol\":2076:2081  owner */\n      tag_269\n        /* \"contracts/ACConfig.sol\":2076:2083  owner() */\n      jump\t// in\n    tag_617:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n        /* \"contracts/ACConfig.sol\":2062:2072  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/ACConfig.sol\":2062:2083  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/ACConfig.sol\":2041:2083  admin[msg.sender] || msg.sender == owner() */\n    tag_616:\n        /* \"contracts/ACConfig.sol\":2033:2096  require(admin[msg.sender] || msg.sender == owner(),'not admin') */\n      tag_618\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_356\n      jump\t// in\n    tag_618:\n        /* \"contracts/ACConfig.sol\":6671:6688  teamRewardAddress */\n      0xdb\n        /* \"contracts/ACConfig.sol\":6671:6709  teamRewardAddress = _teamRewardAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/ACConfig.sol\":6582:6717  function changeTeamRewardAddress(address _teamRewardAddress)external onlyAdmin{... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_349:\n        /* \"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      tag_624\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1667  owner */\n      tag_269\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1669  owner() */\n      jump\t// in\n    tag_624:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      and\n      eq\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_507\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11570:11572   */\n      0x20\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11552:11573   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11589:11607   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11582:11612   */\n      mstore\n        /* \"#utility.yul\":11648:11682   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11628:11646   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11621:11683   */\n      mstore\n        /* \"#utility.yul\":11700:11718   */\n      0x64\n      add\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_355\n        /* \"#utility.yul\":11368:11724   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1509:1660  function _getImplementation() internal view returns (address) {... */\n    tag_414:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1588:1653  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1509:1660  function _getImplementation() internal view returns (address) {... */\n      jump\t// out\n        /* \"contracts/ACConfig.sol\":3495:3561  function _authorizeUpgrade(address) internal override onlyOwner {} */\n    tag_420:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_421\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_349\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2884:3858  function _upgradeToAndCallUUPS(... */\n    tag_425:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1023:1089  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3330:3389  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value */\n      sload\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3326:3852  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_637\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3405:3442  _setImplementation(newImplementation) */\n      tag_436\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3424:3441  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3405:3423  _setImplementation */\n      tag_639\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3405:3442  _setImplementation(newImplementation) */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3326:3852  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_637:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3506:3523  newImplementation */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3477:3538  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3477:3540  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_641\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_642\n      swap2\n      dup2\n      add\n      swap1\n      tag_643\n      jump\t// in\n    tag_642:\n      0x01\n    tag_641:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3473:3775  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_644\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3704:3760  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12120:12122   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3704:3760  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12102:12123   */\n      mstore\n        /* \"#utility.yul\":12159:12161   */\n      0x2e\n        /* \"#utility.yul\":12139:12157   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12132:12162   */\n      mstore\n        /* \"#utility.yul\":12198:12232   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":12178:12196   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12171:12233   */\n      mstore\n      shl(0x90, 0x6f6e206973206e6f742055555053)\n        /* \"#utility.yul\":12249:12267   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12242:12286   */\n      mstore\n        /* \"#utility.yul\":12303:12322   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3704:3760  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      tag_355\n        /* \"#utility.yul\":11918:12328   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3473:3775  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_644:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3590:3618  slot == _IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_651\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12535:12537   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12517:12538   */\n      mstore\n        /* \"#utility.yul\":12574:12576   */\n      0x29\n        /* \"#utility.yul\":12554:12572   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12547:12577   */\n      mstore\n        /* \"#utility.yul\":12613:12647   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":12593:12611   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12586:12648   */\n      mstore\n      shl(0xba, 0x1a58589b1955555251)\n        /* \"#utility.yul\":12664:12682   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12657:12696   */\n      mstore\n        /* \"#utility.yul\":12713:12732   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_355\n        /* \"#utility.yul\":12333:12738   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3582:3664  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n    tag_651:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3541:3679  returns (bytes32 slot) {... */\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3788:3841  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_436\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3806:3823  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3825:3829  data */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3831:3840  forceCall */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3788:3805  _upgradeToAndCall */\n      tag_655\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3788:3841  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_508:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      swap2\n      and\n      swap2\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      dup3\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n      swap1\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n    tag_565:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      and\n      extcodesize\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":1186:1506  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_573:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5363:5376  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5355:5424  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_659\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_661\n      jump\t// in\n    tag_659:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_507\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_664\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1751:2032  function _setImplementation(address newImplementation) private {... */\n    tag_639:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1832:1880  AddressUpgradeable.isContract(newImplementation) */\n      tag_669\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1862:1879  newImplementation */\n      dup2\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1832:1861  AddressUpgradeable.isContract */\n      tag_565\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1832:1880  AddressUpgradeable.isContract(newImplementation) */\n      jump\t// in\n    tag_669:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_670\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13357:13359   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13339:13360   */\n      mstore\n        /* \"#utility.yul\":13396:13398   */\n      0x2d\n        /* \"#utility.yul\":13376:13394   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13369:13399   */\n      mstore\n        /* \"#utility.yul\":13435:13469   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":13415:13433   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13408:13470   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":13486:13504   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13479:13522   */\n      mstore\n        /* \"#utility.yul\":13539:13558   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_355\n        /* \"#utility.yul\":13155:13564   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1824:1930  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_670:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1940:2025  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1751:2032  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2424:2712  function _upgradeToAndCall(... */\n    tag_655:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2562:2591  _upgradeTo(newImplementation) */\n      tag_675\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2573:2590  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2562:2572  _upgradeTo */\n      tag_676\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2562:2591  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_675:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2619:2620  0 */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2609  data */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2616  data.length */\n      mload\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2620  data.length > 0 */\n      gt\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2633  data.length > 0 || forceCall */\n      dup1\n      tag_677\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2624:2633  forceCall */\n      dup1\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2605:2633  data.length > 0 || forceCall */\n    tag_677:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2601:2706  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_436\n      jumpi\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2649:2695  _functionDelegateCall(newImplementation, data) */\n      tag_679\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2671:2688  newImplementation */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2690:2694  data */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2649:2670  _functionDelegateCall */\n      tag_680\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2649:2695  _functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_679:\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2424:2712  function _upgradeToAndCall(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_664:\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5363:5376  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":5355:5424  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_682\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap1\n      tag_661\n      jump\t// in\n    tag_682:\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_507\n        /* \"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_508\n        /* \"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2138:2290  function _upgradeTo(address newImplementation) internal {... */\n    tag_676:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2241  _setImplementation(newImplementation) */\n      tag_688\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2223:2240  newImplementation */\n      dup2\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2222  _setImplementation */\n      tag_639\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2204:2241  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_688:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2256:2283  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2138:2290  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6780:7235  function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {... */\n    tag_680:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6863:6875  bytes memory */\n      0x60\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6895:6932  AddressUpgradeable.isContract(target) */\n      tag_690\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6925:6931  target */\n      dup4\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6895:6924  AddressUpgradeable.isContract */\n      tag_565\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6895:6932  AddressUpgradeable.isContract(target) */\n      jump\t// in\n    tag_690:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n      tag_691\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13771:13773   */\n      0x20\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13753:13774   */\n      mstore\n        /* \"#utility.yul\":13810:13812   */\n      0x26\n        /* \"#utility.yul\":13790:13808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13783:13813   */\n      mstore\n        /* \"#utility.yul\":13849:13883   */\n      0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n        /* \"#utility.yul\":13829:13847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13822:13884   */\n      mstore\n      shl(0xd2, 0x1b9d1c9858dd)\n        /* \"#utility.yul\":13900:13918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13893:13929   */\n      mstore\n        /* \"#utility.yul\":13946:13965   */\n      0x84\n      add\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n      tag_355\n        /* \"#utility.yul\":13569:13971   */\n      jump\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6887:6975  require(AddressUpgradeable.isContract(target), \"Address: delegate call to non-contract\") */\n    tag_691:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7046:7058  bool success */\n      0x00\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7060:7083  bytes memory returndata */\n      dup1\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7087:7093  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7087:7106  target.delegatecall */\n      and\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7107:7111  data */\n      dup5\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7087:7112  target.delegatecall(data) */\n      mload(0x40)\n      tag_694\n      swap2\n      swap1\n      tag_695\n      jump\t// in\n    tag_694:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_698\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_697)\n    tag_698:\n      0x60\n      swap2\n      pop\n    tag_697:\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7045:7112  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7228  AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      tag_699\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7165:7172  success */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7174:7184  returndata */\n      dup3\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7228  AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7164  AddressUpgradeable.verifyCallResult */\n      tag_700\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7129:7228  AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_699:\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":7122:7228  return AddressUpgradeable.verifyCallResult(success, returndata, \"Address: low-level delegate call failed\") */\n      swap6\n        /* \"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":6780:7235  function _functionDelegateCall(address target, bytes memory data) private returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7438:7733  function verifyCallResult(... */\n    tag_700:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7584:7596  bytes memory */\n      0x60\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7612:7619  success */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7608:7727  if (success) {... */\n      iszero\n      tag_702\n      jumpi\n      pop\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7642:7652  returndata */\n      dup2\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7635:7652  return returndata */\n      jump(tag_704)\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7608:7727  if (success) {... */\n    tag_702:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7683:7716  _revert(returndata, errorMessage) */\n      tag_704\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7691:7701  returndata */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7703:7715  errorMessage */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7683:7690  _revert */\n      tag_705\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7683:7716  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_704:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7438:7733  function verifyCallResult(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7739:8279  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_705:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7898:7915  returndata.length */\n      dup2\n      mload\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7898:7919  returndata.length > 0 */\n      iszero\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7894:8273  if (returndata.length > 0) {... */\n      tag_707\n      jumpi\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8126:8136  returndata */\n      dup2\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8120:8137  mload(returndata) */\n      mload\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8182:8197  returndata_size */\n      dup1\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8169:8179  returndata */\n      dup4\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8165:8167  32 */\n      0x20\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8161:8180  add(32, returndata) */\n      add\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8154:8198  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":7894:8273  if (returndata.length > 0) {... */\n    tag_707:\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8249:8261  errorMessage */\n      dup1\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":8242:8262  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_355\n      swap2\n      swap1\n      tag_710\n      jump\t// in\n        /* \"#utility.yul\":14:194   */\n    tag_71:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_719\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_719:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":407:580   */\n    tag_711:\n        /* \"#utility.yul\":475:495   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":524:555   */\n      dup2\n      and\n        /* \"#utility.yul\":514:556   */\n      dup2\n      eq\n        /* \"#utility.yul\":504:574   */\n      tag_722\n      jumpi\n        /* \"#utility.yul\":570:571   */\n      0x00\n        /* \"#utility.yul\":567:568   */\n      dup1\n        /* \"#utility.yul\":560:572   */\n      revert\n        /* \"#utility.yul\":504:574   */\n    tag_722:\n        /* \"#utility.yul\":407:580   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":585:771   */\n    tag_78:\n        /* \"#utility.yul\":644:650   */\n      0x00\n        /* \"#utility.yul\":697:699   */\n      0x20\n        /* \"#utility.yul\":685:694   */\n      dup3\n        /* \"#utility.yul\":676:683   */\n      dup5\n        /* \"#utility.yul\":672:695   */\n      sub\n        /* \"#utility.yul\":668:700   */\n      slt\n        /* \"#utility.yul\":665:717   */\n      iszero\n      tag_724\n      jumpi\n        /* \"#utility.yul\":713:714   */\n      0x00\n        /* \"#utility.yul\":710:711   */\n      dup1\n        /* \"#utility.yul\":703:715   */\n      revert\n        /* \"#utility.yul\":665:717   */\n    tag_724:\n        /* \"#utility.yul\":736:765   */\n      tag_704\n        /* \"#utility.yul\":755:764   */\n      dup3\n        /* \"#utility.yul\":736:765   */\n      tag_711\n      jump\t// in\n        /* \"#utility.yul\":958:1419   */\n    tag_712:\n        /* \"#utility.yul\":1011:1014   */\n      0x00\n        /* \"#utility.yul\":1049:1054   */\n      dup2\n        /* \"#utility.yul\":1043:1055   */\n      mload\n        /* \"#utility.yul\":1076:1082   */\n      dup1\n        /* \"#utility.yul\":1071:1074   */\n      dup5\n        /* \"#utility.yul\":1064:1083   */\n      mstore\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1131:1133   */\n      dup1\n        /* \"#utility.yul\":1126:1129   */\n      dup6\n        /* \"#utility.yul\":1122:1134   */\n      add\n        /* \"#utility.yul\":1115:1134   */\n      swap5\n      pop\n        /* \"#utility.yul\":1168:1170   */\n      dup1\n        /* \"#utility.yul\":1161:1166   */\n      dup5\n        /* \"#utility.yul\":1157:1171   */\n      add\n        /* \"#utility.yul\":1189:1190   */\n      0x00\n        /* \"#utility.yul\":1199:1394   */\n    tag_728:\n        /* \"#utility.yul\":1213:1219   */\n      dup4\n        /* \"#utility.yul\":1210:1211   */\n      dup2\n        /* \"#utility.yul\":1207:1220   */\n      lt\n        /* \"#utility.yul\":1199:1394   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":1278:1291   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1274:1313   */\n      and\n        /* \"#utility.yul\":1262:1314   */\n      dup8\n      mstore\n        /* \"#utility.yul\":1334:1346   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":1369:1384   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1310:1311   */\n      0x01\n        /* \"#utility.yul\":1228:1237   */\n      add\n        /* \"#utility.yul\":1199:1394   */\n      jump(tag_728)\n    tag_730:\n      pop\n        /* \"#utility.yul\":1410:1413   */\n      swap5\n      swap6\n        /* \"#utility.yul\":958:1419   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1424:1685   */\n    tag_93:\n        /* \"#utility.yul\":1603:1605   */\n      0x20\n        /* \"#utility.yul\":1592:1601   */\n      dup2\n        /* \"#utility.yul\":1585:1606   */\n      mstore\n        /* \"#utility.yul\":1566:1570   */\n      0x00\n        /* \"#utility.yul\":1623:1679   */\n      tag_704\n        /* \"#utility.yul\":1675:1677   */\n      0x20\n        /* \"#utility.yul\":1664:1673   */\n      dup4\n        /* \"#utility.yul\":1660:1678   */\n      add\n        /* \"#utility.yul\":1652:1658   */\n      dup5\n        /* \"#utility.yul\":1623:1679   */\n      tag_712\n      jump\t// in\n        /* \"#utility.yul\":1690:2125   */\n    tag_713:\n        /* \"#utility.yul\":1743:1746   */\n      0x00\n        /* \"#utility.yul\":1781:1786   */\n      dup2\n        /* \"#utility.yul\":1775:1787   */\n      mload\n        /* \"#utility.yul\":1808:1814   */\n      dup1\n        /* \"#utility.yul\":1803:1806   */\n      dup5\n        /* \"#utility.yul\":1796:1815   */\n      mstore\n        /* \"#utility.yul\":1834:1838   */\n      0x20\n        /* \"#utility.yul\":1863:1865   */\n      dup1\n        /* \"#utility.yul\":1858:1861   */\n      dup6\n        /* \"#utility.yul\":1854:1866   */\n      add\n        /* \"#utility.yul\":1847:1866   */\n      swap5\n      pop\n        /* \"#utility.yul\":1900:1902   */\n      dup1\n        /* \"#utility.yul\":1893:1898   */\n      dup5\n        /* \"#utility.yul\":1889:1903   */\n      add\n        /* \"#utility.yul\":1921:1922   */\n      0x00\n        /* \"#utility.yul\":1931:2100   */\n    tag_734:\n        /* \"#utility.yul\":1945:1951   */\n      dup4\n        /* \"#utility.yul\":1942:1943   */\n      dup2\n        /* \"#utility.yul\":1939:1952   */\n      lt\n        /* \"#utility.yul\":1931:2100   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":2006:2019   */\n      dup2\n      mload\n        /* \"#utility.yul\":1994:2020   */\n      dup8\n      mstore\n        /* \"#utility.yul\":2040:2052   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":2075:2090   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1967:1968   */\n      0x01\n        /* \"#utility.yul\":1960:1969   */\n      add\n        /* \"#utility.yul\":1931:2100   */\n      jump(tag_734)\n        /* \"#utility.yul\":2130:2391   */\n    tag_106:\n        /* \"#utility.yul\":2309:2311   */\n      0x20\n        /* \"#utility.yul\":2298:2307   */\n      dup2\n        /* \"#utility.yul\":2291:2312   */\n      mstore\n        /* \"#utility.yul\":2272:2276   */\n      0x00\n        /* \"#utility.yul\":2329:2385   */\n      tag_704\n        /* \"#utility.yul\":2381:2383   */\n      0x20\n        /* \"#utility.yul\":2370:2379   */\n      dup4\n        /* \"#utility.yul\":2366:2384   */\n      add\n        /* \"#utility.yul\":2358:2364   */\n      dup5\n        /* \"#utility.yul\":2329:2385   */\n      tag_713\n      jump\t// in\n        /* \"#utility.yul\":2649:2903   */\n    tag_137:\n        /* \"#utility.yul\":2717:2723   */\n      0x00\n        /* \"#utility.yul\":2725:2731   */\n      dup1\n        /* \"#utility.yul\":2778:2780   */\n      0x40\n        /* \"#utility.yul\":2766:2775   */\n      dup4\n        /* \"#utility.yul\":2757:2764   */\n      dup6\n        /* \"#utility.yul\":2753:2776   */\n      sub\n        /* \"#utility.yul\":2749:2781   */\n      slt\n        /* \"#utility.yul\":2746:2798   */\n      iszero\n      tag_741\n      jumpi\n        /* \"#utility.yul\":2794:2795   */\n      0x00\n        /* \"#utility.yul\":2791:2792   */\n      dup1\n        /* \"#utility.yul\":2784:2796   */\n      revert\n        /* \"#utility.yul\":2746:2798   */\n    tag_741:\n        /* \"#utility.yul\":2817:2846   */\n      tag_742\n        /* \"#utility.yul\":2836:2845   */\n      dup4\n        /* \"#utility.yul\":2817:2846   */\n      tag_711\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":2807:2846   */\n      swap5\n        /* \"#utility.yul\":2893:2895   */\n      0x20\n        /* \"#utility.yul\":2878:2896   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2865:2897   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2649:2903   */\n      jump\t// out\n        /* \"#utility.yul\":2908:3035   */\n    tag_361:\n        /* \"#utility.yul\":2969:2979   */\n      0x4e487b71\n        /* \"#utility.yul\":2964:2967   */\n      0xe0\n        /* \"#utility.yul\":2960:2980   */\n      shl\n        /* \"#utility.yul\":2957:2958   */\n      0x00\n        /* \"#utility.yul\":2950:2981   */\n      mstore\n        /* \"#utility.yul\":3000:3004   */\n      0x41\n        /* \"#utility.yul\":2997:2998   */\n      0x04\n        /* \"#utility.yul\":2990:3005   */\n      mstore\n        /* \"#utility.yul\":3024:3028   */\n      0x24\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3014:3029   */\n      revert\n        /* \"#utility.yul\":3040:3315   */\n    tag_714:\n        /* \"#utility.yul\":3111:3113   */\n      0x40\n        /* \"#utility.yul\":3105:3114   */\n      mload\n        /* \"#utility.yul\":3176:3178   */\n      0x1f\n        /* \"#utility.yul\":3157:3170   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3153:3180   */\n      and\n        /* \"#utility.yul\":3141:3181   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3196:3230   */\n      dup2\n      gt\n        /* \"#utility.yul\":3232:3254   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3193:3255   */\n      or\n        /* \"#utility.yul\":3190:3278   */\n      iszero\n      tag_746\n      jumpi\n        /* \"#utility.yul\":3258:3276   */\n      tag_746\n      tag_361\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":3294:3296   */\n      0x40\n        /* \"#utility.yul\":3287:3309   */\n      mstore\n        /* \"#utility.yul\":3040:3315   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3320:4032   */\n    tag_715:\n        /* \"#utility.yul\":3374:3379   */\n      0x00\n        /* \"#utility.yul\":3427:3430   */\n      dup3\n        /* \"#utility.yul\":3420:3424   */\n      0x1f\n        /* \"#utility.yul\":3412:3418   */\n      dup4\n        /* \"#utility.yul\":3408:3425   */\n      add\n        /* \"#utility.yul\":3404:3431   */\n      slt\n        /* \"#utility.yul\":3394:3449   */\n      tag_748\n      jumpi\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      dup1\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3394:3449   */\n    tag_748:\n        /* \"#utility.yul\":3468:3488   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":3507:3511   */\n      0x20\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3523:3549   */\n      dup3\n      gt\n        /* \"#utility.yul\":3520:3572   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":3552:3570   */\n      tag_750\n      tag_361\n      jump\t// in\n    tag_750:\n        /* \"#utility.yul\":3598:3600   */\n      dup2\n        /* \"#utility.yul\":3595:3596   */\n      0x05\n        /* \"#utility.yul\":3591:3601   */\n      shl\n        /* \"#utility.yul\":3621:3649   */\n      tag_751\n        /* \"#utility.yul\":3645:3647   */\n      dup3\n        /* \"#utility.yul\":3641:3643   */\n      dup3\n        /* \"#utility.yul\":3637:3648   */\n      add\n        /* \"#utility.yul\":3621:3649   */\n      tag_714\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":3683:3698   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3753:3768   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":3749:3773   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3714:3726   */\n      dup3\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3785:3800   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":3782:3817   */\n      iszero\n      tag_752\n      jumpi\n        /* \"#utility.yul\":3813:3814   */\n      0x00\n        /* \"#utility.yul\":3810:3811   */\n      dup1\n        /* \"#utility.yul\":3803:3815   */\n      revert\n        /* \"#utility.yul\":3782:3817   */\n    tag_752:\n        /* \"#utility.yul\":3849:3851   */\n      dup4\n        /* \"#utility.yul\":3841:3847   */\n      dup8\n        /* \"#utility.yul\":3837:3852   */\n      add\n        /* \"#utility.yul\":3826:3852   */\n      swap3\n      pop\n        /* \"#utility.yul\":3861:4003   */\n    tag_753:\n        /* \"#utility.yul\":3877:3883   */\n      dup5\n        /* \"#utility.yul\":3872:3875   */\n      dup4\n        /* \"#utility.yul\":3869:3884   */\n      lt\n        /* \"#utility.yul\":3861:4003   */\n      iszero\n      tag_755\n      jumpi\n        /* \"#utility.yul\":3943:3960   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":3931:3961   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3894:3906   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3981:3993   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":3861:4003   */\n      jump(tag_753)\n    tag_755:\n        /* \"#utility.yul\":4021:4026   */\n      swap8\n        /* \"#utility.yul\":3320:4032   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4037:4632   */\n    tag_158:\n        /* \"#utility.yul\":4155:4161   */\n      0x00\n        /* \"#utility.yul\":4163:4169   */\n      dup1\n        /* \"#utility.yul\":4216:4218   */\n      0x40\n        /* \"#utility.yul\":4204:4213   */\n      dup4\n        /* \"#utility.yul\":4195:4202   */\n      dup6\n        /* \"#utility.yul\":4191:4214   */\n      sub\n        /* \"#utility.yul\":4187:4219   */\n      slt\n        /* \"#utility.yul\":4184:4236   */\n      iszero\n      tag_757\n      jumpi\n        /* \"#utility.yul\":4232:4233   */\n      0x00\n        /* \"#utility.yul\":4229:4230   */\n      dup1\n        /* \"#utility.yul\":4222:4234   */\n      revert\n        /* \"#utility.yul\":4184:4236   */\n    tag_757:\n        /* \"#utility.yul\":4259:4282   */\n      dup3\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":4331:4345   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4328:4362   */\n      iszero\n      tag_758\n      jumpi\n        /* \"#utility.yul\":4358:4359   */\n      0x00\n        /* \"#utility.yul\":4355:4356   */\n      dup1\n        /* \"#utility.yul\":4348:4360   */\n      revert\n        /* \"#utility.yul\":4328:4362   */\n    tag_758:\n        /* \"#utility.yul\":4381:4442   */\n      tag_759\n        /* \"#utility.yul\":4434:4441   */\n      dup7\n        /* \"#utility.yul\":4425:4431   */\n      dup4\n        /* \"#utility.yul\":4414:4423   */\n      dup8\n        /* \"#utility.yul\":4410:4432   */\n      add\n        /* \"#utility.yul\":4381:4442   */\n      tag_715\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":4371:4442   */\n      swap4\n      pop\n        /* \"#utility.yul\":4495:4497   */\n      0x20\n        /* \"#utility.yul\":4484:4493   */\n      dup6\n        /* \"#utility.yul\":4480:4498   */\n      add\n        /* \"#utility.yul\":4467:4499   */\n      calldataload\n        /* \"#utility.yul\":4451:4499   */\n      swap2\n      pop\n        /* \"#utility.yul\":4524:4526   */\n      dup1\n        /* \"#utility.yul\":4514:4522   */\n      dup3\n        /* \"#utility.yul\":4511:4527   */\n      gt\n        /* \"#utility.yul\":4508:4544   */\n      iszero\n      tag_760\n      jumpi\n        /* \"#utility.yul\":4540:4541   */\n      0x00\n        /* \"#utility.yul\":4537:4538   */\n      dup1\n        /* \"#utility.yul\":4530:4542   */\n      revert\n        /* \"#utility.yul\":4508:4544   */\n    tag_760:\n      pop\n        /* \"#utility.yul\":4563:4626   */\n      tag_761\n        /* \"#utility.yul\":4618:4625   */\n      dup6\n        /* \"#utility.yul\":4607:4615   */\n      dup3\n        /* \"#utility.yul\":4596:4605   */\n      dup7\n        /* \"#utility.yul\":4592:4616   */\n      add\n        /* \"#utility.yul\":4563:4626   */\n      tag_715\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":4553:4626   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4037:4632   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4637:4984   */\n    tag_175:\n        /* \"#utility.yul\":4702:4708   */\n      0x00\n        /* \"#utility.yul\":4710:4716   */\n      dup1\n        /* \"#utility.yul\":4763:4765   */\n      0x40\n        /* \"#utility.yul\":4751:4760   */\n      dup4\n        /* \"#utility.yul\":4742:4749   */\n      dup6\n        /* \"#utility.yul\":4738:4761   */\n      sub\n        /* \"#utility.yul\":4734:4766   */\n      slt\n        /* \"#utility.yul\":4731:4783   */\n      iszero\n      tag_763\n      jumpi\n        /* \"#utility.yul\":4779:4780   */\n      0x00\n        /* \"#utility.yul\":4776:4777   */\n      dup1\n        /* \"#utility.yul\":4769:4781   */\n      revert\n        /* \"#utility.yul\":4731:4783   */\n    tag_763:\n        /* \"#utility.yul\":4802:4831   */\n      tag_764\n        /* \"#utility.yul\":4821:4830   */\n      dup4\n        /* \"#utility.yul\":4802:4831   */\n      tag_711\n      jump\t// in\n    tag_764:\n        /* \"#utility.yul\":4792:4831   */\n      swap2\n      pop\n        /* \"#utility.yul\":4881:4883   */\n      0x20\n        /* \"#utility.yul\":4870:4879   */\n      dup4\n        /* \"#utility.yul\":4866:4884   */\n      add\n        /* \"#utility.yul\":4853:4885   */\n      calldataload\n        /* \"#utility.yul\":4928:4933   */\n      dup1\n        /* \"#utility.yul\":4921:4934   */\n      iszero\n        /* \"#utility.yul\":4914:4935   */\n      iszero\n        /* \"#utility.yul\":4907:4912   */\n      dup2\n        /* \"#utility.yul\":4904:4936   */\n      eq\n        /* \"#utility.yul\":4894:4954   */\n      tag_765\n      jumpi\n        /* \"#utility.yul\":4950:4951   */\n      0x00\n        /* \"#utility.yul\":4947:4948   */\n      dup1\n        /* \"#utility.yul\":4940:4952   */\n      revert\n        /* \"#utility.yul\":4894:4954   */\n    tag_765:\n        /* \"#utility.yul\":4973:4978   */\n      dup1\n        /* \"#utility.yul\":4963:4978   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4637:4984   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4989:5826   */\n    tag_187:\n        /* \"#utility.yul\":5066:5072   */\n      0x00\n        /* \"#utility.yul\":5074:5080   */\n      dup1\n        /* \"#utility.yul\":5127:5129   */\n      0x40\n        /* \"#utility.yul\":5115:5124   */\n      dup4\n        /* \"#utility.yul\":5106:5113   */\n      dup6\n        /* \"#utility.yul\":5102:5125   */\n      sub\n        /* \"#utility.yul\":5098:5130   */\n      slt\n        /* \"#utility.yul\":5095:5147   */\n      iszero\n      tag_767\n      jumpi\n        /* \"#utility.yul\":5143:5144   */\n      0x00\n        /* \"#utility.yul\":5140:5141   */\n      dup1\n        /* \"#utility.yul\":5133:5145   */\n      revert\n        /* \"#utility.yul\":5095:5147   */\n    tag_767:\n        /* \"#utility.yul\":5166:5195   */\n      tag_768\n        /* \"#utility.yul\":5185:5194   */\n      dup4\n        /* \"#utility.yul\":5166:5195   */\n      tag_711\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":5156:5195   */\n      swap2\n      pop\n        /* \"#utility.yul\":5214:5216   */\n      0x20\n        /* \"#utility.yul\":5252:5270   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":5239:5271   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5320:5334   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5317:5351   */\n      iszero\n      tag_769\n      jumpi\n        /* \"#utility.yul\":5347:5348   */\n      0x00\n        /* \"#utility.yul\":5344:5345   */\n      dup1\n        /* \"#utility.yul\":5337:5349   */\n      revert\n        /* \"#utility.yul\":5317:5351   */\n    tag_769:\n        /* \"#utility.yul\":5385:5391   */\n      dup2\n        /* \"#utility.yul\":5374:5383   */\n      dup7\n        /* \"#utility.yul\":5370:5392   */\n      add\n        /* \"#utility.yul\":5360:5392   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5437   */\n      dup7\n        /* \"#utility.yul\":5423:5427   */\n      0x1f\n        /* \"#utility.yul\":5419:5421   */\n      dup4\n        /* \"#utility.yul\":5415:5428   */\n      add\n        /* \"#utility.yul\":5411:5438   */\n      slt\n        /* \"#utility.yul\":5401:5456   */\n      tag_770\n      jumpi\n        /* \"#utility.yul\":5452:5453   */\n      0x00\n        /* \"#utility.yul\":5449:5450   */\n      dup1\n        /* \"#utility.yul\":5442:5454   */\n      revert\n        /* \"#utility.yul\":5401:5456   */\n    tag_770:\n        /* \"#utility.yul\":5488:5490   */\n      dup2\n        /* \"#utility.yul\":5475:5491   */\n      calldataload\n        /* \"#utility.yul\":5510:5512   */\n      dup2\n        /* \"#utility.yul\":5506:5508   */\n      dup2\n        /* \"#utility.yul\":5503:5513   */\n      gt\n        /* \"#utility.yul\":5500:5536   */\n      iszero\n      tag_772\n      jumpi\n        /* \"#utility.yul\":5516:5534   */\n      tag_772\n      tag_361\n      jump\t// in\n    tag_772:\n        /* \"#utility.yul\":5558:5611   */\n      tag_773\n        /* \"#utility.yul\":5601:5603   */\n      0x1f\n        /* \"#utility.yul\":5582:5595   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5578:5605   */\n      and\n        /* \"#utility.yul\":5574:5610   */\n      dup6\n      add\n        /* \"#utility.yul\":5558:5611   */\n      tag_714\n      jump\t// in\n    tag_773:\n        /* \"#utility.yul\":5545:5611   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5636   */\n      dup1\n        /* \"#utility.yul\":5627:5632   */\n      dup3\n        /* \"#utility.yul\":5620:5637   */\n      mstore\n        /* \"#utility.yul\":5674:5681   */\n      dup8\n        /* \"#utility.yul\":5669:5671   */\n      dup5\n        /* \"#utility.yul\":5664:5666   */\n      dup3\n        /* \"#utility.yul\":5660:5662   */\n      dup6\n        /* \"#utility.yul\":5656:5667   */\n      add\n        /* \"#utility.yul\":5652:5672   */\n      add\n        /* \"#utility.yul\":5649:5682   */\n      gt\n        /* \"#utility.yul\":5646:5699   */\n      iszero\n      tag_774\n      jumpi\n        /* \"#utility.yul\":5695:5696   */\n      0x00\n        /* \"#utility.yul\":5692:5693   */\n      dup1\n        /* \"#utility.yul\":5685:5697   */\n      revert\n        /* \"#utility.yul\":5646:5699   */\n    tag_774:\n        /* \"#utility.yul\":5750:5752   */\n      dup1\n        /* \"#utility.yul\":5745:5747   */\n      dup5\n        /* \"#utility.yul\":5741:5743   */\n      dup5\n        /* \"#utility.yul\":5737:5748   */\n      add\n        /* \"#utility.yul\":5732:5734   */\n      dup6\n        /* \"#utility.yul\":5725:5730   */\n      dup5\n        /* \"#utility.yul\":5721:5735   */\n      add\n        /* \"#utility.yul\":5708:5753   */\n      calldatacopy\n        /* \"#utility.yul\":5794:5795   */\n      0x00\n        /* \"#utility.yul\":5789:5791   */\n      dup5\n        /* \"#utility.yul\":5784:5786   */\n      dup3\n        /* \"#utility.yul\":5777:5782   */\n      dup5\n        /* \"#utility.yul\":5773:5787   */\n      add\n        /* \"#utility.yul\":5769:5792   */\n      add\n        /* \"#utility.yul\":5762:5796   */\n      mstore\n      pop\n        /* \"#utility.yul\":5815:5820   */\n      dup1\n        /* \"#utility.yul\":5805:5820   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4989:5826   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6013:6478   */\n    tag_230:\n        /* \"#utility.yul\":6270:6272   */\n      0x40\n        /* \"#utility.yul\":6259:6268   */\n      dup2\n        /* \"#utility.yul\":6252:6273   */\n      mstore\n        /* \"#utility.yul\":6233:6237   */\n      0x00\n        /* \"#utility.yul\":6296:6352   */\n      tag_777\n        /* \"#utility.yul\":6348:6350   */\n      0x40\n        /* \"#utility.yul\":6337:6346   */\n      dup4\n        /* \"#utility.yul\":6333:6351   */\n      add\n        /* \"#utility.yul\":6325:6331   */\n      dup6\n        /* \"#utility.yul\":6296:6352   */\n      tag_712\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":6400:6409   */\n      dup3\n        /* \"#utility.yul\":6392:6398   */\n      dup2\n        /* \"#utility.yul\":6388:6410   */\n      sub\n        /* \"#utility.yul\":6383:6385   */\n      0x20\n        /* \"#utility.yul\":6372:6381   */\n      dup5\n        /* \"#utility.yul\":6368:6386   */\n      add\n        /* \"#utility.yul\":6361:6411   */\n      mstore\n        /* \"#utility.yul\":6428:6472   */\n      tag_699\n        /* \"#utility.yul\":6465:6471   */\n      dup2\n        /* \"#utility.yul\":6457:6463   */\n      dup6\n        /* \"#utility.yul\":6428:6472   */\n      tag_713\n      jump\t// in\n        /* \"#utility.yul\":6483:7042   */\n    tag_253:\n        /* \"#utility.yul\":6587:6593   */\n      0x00\n        /* \"#utility.yul\":6595:6601   */\n      dup1\n        /* \"#utility.yul\":6603:6609   */\n      0x00\n        /* \"#utility.yul\":6611:6617   */\n      dup1\n        /* \"#utility.yul\":6619:6625   */\n      0x00\n        /* \"#utility.yul\":6627:6633   */\n      dup1\n        /* \"#utility.yul\":6680:6683   */\n      0xc0\n        /* \"#utility.yul\":6668:6677   */\n      dup8\n        /* \"#utility.yul\":6659:6666   */\n      dup10\n        /* \"#utility.yul\":6655:6678   */\n      sub\n        /* \"#utility.yul\":6651:6684   */\n      slt\n        /* \"#utility.yul\":6648:6701   */\n      iszero\n      tag_780\n      jumpi\n        /* \"#utility.yul\":6697:6698   */\n      0x00\n        /* \"#utility.yul\":6694:6695   */\n      dup1\n        /* \"#utility.yul\":6687:6699   */\n      revert\n        /* \"#utility.yul\":6648:6701   */\n    tag_780:\n        /* \"#utility.yul\":6720:6749   */\n      tag_781\n        /* \"#utility.yul\":6739:6748   */\n      dup8\n        /* \"#utility.yul\":6720:6749   */\n      tag_711\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":6710:6749   */\n      swap6\n      pop\n        /* \"#utility.yul\":6768:6806   */\n      tag_782\n        /* \"#utility.yul\":6802:6804   */\n      0x20\n        /* \"#utility.yul\":6791:6800   */\n      dup9\n        /* \"#utility.yul\":6787:6805   */\n      add\n        /* \"#utility.yul\":6768:6806   */\n      tag_711\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":6758:6806   */\n      swap5\n      pop\n        /* \"#utility.yul\":6825:6863   */\n      tag_783\n        /* \"#utility.yul\":6859:6861   */\n      0x40\n        /* \"#utility.yul\":6848:6857   */\n      dup9\n        /* \"#utility.yul\":6844:6862   */\n      add\n        /* \"#utility.yul\":6825:6863   */\n      tag_711\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":6815:6863   */\n      swap4\n      pop\n        /* \"#utility.yul\":6882:6920   */\n      tag_784\n        /* \"#utility.yul\":6916:6918   */\n      0x60\n        /* \"#utility.yul\":6905:6914   */\n      dup9\n        /* \"#utility.yul\":6901:6919   */\n      add\n        /* \"#utility.yul\":6882:6920   */\n      tag_711\n      jump\t// in\n    tag_784:\n        /* \"#utility.yul\":6872:6920   */\n      swap3\n      pop\n        /* \"#utility.yul\":6939:6978   */\n      tag_785\n        /* \"#utility.yul\":6973:6976   */\n      0x80\n        /* \"#utility.yul\":6962:6971   */\n      dup9\n        /* \"#utility.yul\":6958:6977   */\n      add\n        /* \"#utility.yul\":6939:6978   */\n      tag_711\n      jump\t// in\n    tag_785:\n        /* \"#utility.yul\":6929:6978   */\n      swap2\n      pop\n        /* \"#utility.yul\":6997:7036   */\n      tag_786\n        /* \"#utility.yul\":7031:7034   */\n      0xa0\n        /* \"#utility.yul\":7020:7029   */\n      dup9\n        /* \"#utility.yul\":7016:7035   */\n      add\n        /* \"#utility.yul\":6997:7036   */\n      tag_711\n      jump\t// in\n    tag_786:\n        /* \"#utility.yul\":6987:7036   */\n      swap1\n      pop\n        /* \"#utility.yul\":6483:7042   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":7047:7512   */\n    tag_287:\n        /* \"#utility.yul\":7304:7306   */\n      0x40\n        /* \"#utility.yul\":7293:7302   */\n      dup2\n        /* \"#utility.yul\":7286:7307   */\n      mstore\n        /* \"#utility.yul\":7267:7271   */\n      0x00\n        /* \"#utility.yul\":7330:7386   */\n      tag_777\n        /* \"#utility.yul\":7382:7384   */\n      0x40\n        /* \"#utility.yul\":7371:7380   */\n      dup4\n        /* \"#utility.yul\":7367:7385   */\n      add\n        /* \"#utility.yul\":7359:7365   */\n      dup6\n        /* \"#utility.yul\":7330:7386   */\n      tag_713\n      jump\t// in\n        /* \"#utility.yul\":7517:7765   */\n    tag_307:\n        /* \"#utility.yul\":7585:7591   */\n      0x00\n        /* \"#utility.yul\":7593:7599   */\n      dup1\n        /* \"#utility.yul\":7646:7648   */\n      0x40\n        /* \"#utility.yul\":7634:7643   */\n      dup4\n        /* \"#utility.yul\":7625:7632   */\n      dup6\n        /* \"#utility.yul\":7621:7644   */\n      sub\n        /* \"#utility.yul\":7617:7649   */\n      slt\n        /* \"#utility.yul\":7614:7666   */\n      iszero\n      tag_791\n      jumpi\n        /* \"#utility.yul\":7662:7663   */\n      0x00\n        /* \"#utility.yul\":7659:7660   */\n      dup1\n        /* \"#utility.yul\":7652:7664   */\n      revert\n        /* \"#utility.yul\":7614:7666   */\n    tag_791:\n      pop\n      pop\n        /* \"#utility.yul\":7685:7708   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":7755:7757   */\n      0x20\n        /* \"#utility.yul\":7740:7758   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7727:7759   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":7517:7765   */\n      jump\t// out\n        /* \"#utility.yul\":7770:8102   */\n    tag_356:\n        /* \"#utility.yul\":7972:7974   */\n      0x20\n        /* \"#utility.yul\":7954:7975   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8011:8012   */\n      0x09\n        /* \"#utility.yul\":7991:8009   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7984:8013   */\n      mstore\n      shl(0xb9, 0x3737ba1030b236b4b7)\n        /* \"#utility.yul\":8044:8046   */\n      0x40\n        /* \"#utility.yul\":8029:8047   */\n      dup3\n      add\n        /* \"#utility.yul\":8022:8061   */\n      mstore\n        /* \"#utility.yul\":8093:8095   */\n      0x60\n        /* \"#utility.yul\":8078:8096   */\n      add\n      swap1\n        /* \"#utility.yul\":7770:8102   */\n      jump\t// out\n        /* \"#utility.yul\":8107:8234   */\n    tag_365:\n        /* \"#utility.yul\":8168:8178   */\n      0x4e487b71\n        /* \"#utility.yul\":8163:8166   */\n      0xe0\n        /* \"#utility.yul\":8159:8179   */\n      shl\n        /* \"#utility.yul\":8156:8157   */\n      0x00\n        /* \"#utility.yul\":8149:8180   */\n      mstore\n        /* \"#utility.yul\":8199:8203   */\n      0x32\n        /* \"#utility.yul\":8196:8197   */\n      0x04\n        /* \"#utility.yul\":8189:8204   */\n      mstore\n        /* \"#utility.yul\":8223:8227   */\n      0x24\n        /* \"#utility.yul\":8220:8221   */\n      0x00\n        /* \"#utility.yul\":8213:8228   */\n      revert\n        /* \"#utility.yul\":8239:8647   */\n    tag_412:\n        /* \"#utility.yul\":8441:8443   */\n      0x20\n        /* \"#utility.yul\":8423:8444   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8480:8482   */\n      0x2c\n        /* \"#utility.yul\":8460:8478   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8453:8483   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_662a7ba1d8fb60beff3d02117181416eb800676fa4d6f1ebc4c3fea5cd79ec88\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":8514:8516   */\n      0x40\n        /* \"#utility.yul\":8499:8517   */\n      dup3\n      add\n        /* \"#utility.yul\":8492:8554   */\n      mstore\n      shl(0xa2, 0x19195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":8585:8587   */\n      0x60\n        /* \"#utility.yul\":8570:8588   */\n      dup3\n      add\n        /* \"#utility.yul\":8563:8605   */\n      mstore\n        /* \"#utility.yul\":8637:8640   */\n      0x80\n        /* \"#utility.yul\":8622:8641   */\n      add\n      swap1\n        /* \"#utility.yul\":8239:8647   */\n      jump\t// out\n        /* \"#utility.yul\":8652:9060   */\n    tag_417:\n        /* \"#utility.yul\":8854:8856   */\n      0x20\n        /* \"#utility.yul\":8836:8857   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8893:8895   */\n      0x2c\n        /* \"#utility.yul\":8873:8891   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8866:8896   */\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_662a7ba1d8fb60beff3d02117181416eb800676fa4d6f1ebc4c3fea5cd79ec88\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"#utility.yul\":8927:8929   */\n      0x40\n        /* \"#utility.yul\":8912:8930   */\n      dup3\n      add\n        /* \"#utility.yul\":8905:8967   */\n      mstore\n      shl(0xa0, 0x6163746976652070726f7879)\n        /* \"#utility.yul\":8998:9000   */\n      0x60\n        /* \"#utility.yul\":8983:9001   */\n      dup3\n      add\n        /* \"#utility.yul\":8976:9018   */\n      mstore\n        /* \"#utility.yul\":9050:9053   */\n      0x80\n        /* \"#utility.yul\":9035:9054   */\n      add\n      swap1\n        /* \"#utility.yul\":8652:9060   */\n      jump\t// out\n        /* \"#utility.yul\":9406:9638   */\n    tag_443:\n        /* \"#utility.yul\":9445:9448   */\n      0x00\n        /* \"#utility.yul\":9466:9483   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9463:9603   */\n      tag_798\n      jumpi\n        /* \"#utility.yul\":9525:9535   */\n      0x4e487b71\n        /* \"#utility.yul\":9520:9523   */\n      0xe0\n        /* \"#utility.yul\":9516:9536   */\n      shl\n        /* \"#utility.yul\":9513:9514   */\n      0x00\n        /* \"#utility.yul\":9506:9537   */\n      mstore\n        /* \"#utility.yul\":9560:9564   */\n      0x11\n        /* \"#utility.yul\":9557:9558   */\n      0x04\n        /* \"#utility.yul\":9550:9565   */\n      mstore\n        /* \"#utility.yul\":9588:9592   */\n      0x24\n        /* \"#utility.yul\":9585:9586   */\n      0x00\n        /* \"#utility.yul\":9578:9593   */\n      revert\n        /* \"#utility.yul\":9463:9603   */\n    tag_798:\n      pop\n        /* \"#utility.yul\":9630:9631   */\n      0x01\n        /* \"#utility.yul\":9619:9632   */\n      add\n      swap1\n        /* \"#utility.yul\":9406:9638   */\n      jump\t// out\n        /* \"#utility.yul\":11729:11913   */\n    tag_643:\n        /* \"#utility.yul\":11799:11805   */\n      0x00\n        /* \"#utility.yul\":11852:11854   */\n      0x20\n        /* \"#utility.yul\":11840:11849   */\n      dup3\n        /* \"#utility.yul\":11831:11838   */\n      dup5\n        /* \"#utility.yul\":11827:11850   */\n      sub\n        /* \"#utility.yul\":11823:11855   */\n      slt\n        /* \"#utility.yul\":11820:11872   */\n      iszero\n      tag_806\n      jumpi\n        /* \"#utility.yul\":11868:11869   */\n      0x00\n        /* \"#utility.yul\":11865:11866   */\n      dup1\n        /* \"#utility.yul\":11858:11870   */\n      revert\n        /* \"#utility.yul\":11820:11872   */\n    tag_806:\n      pop\n        /* \"#utility.yul\":11891:11907   */\n      mload\n      swap2\n        /* \"#utility.yul\":11729:11913   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12743:13150   */\n    tag_661:\n        /* \"#utility.yul\":12945:12947   */\n      0x20\n        /* \"#utility.yul\":12927:12948   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12984:12986   */\n      0x2b\n        /* \"#utility.yul\":12964:12982   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12957:12987   */\n      mstore\n        /* \"#utility.yul\":13023:13057   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":13018:13020   */\n      0x40\n        /* \"#utility.yul\":13003:13021   */\n      dup3\n      add\n        /* \"#utility.yul\":12996:13058   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":13089:13091   */\n      0x60\n        /* \"#utility.yul\":13074:13092   */\n      dup3\n      add\n        /* \"#utility.yul\":13067:13108   */\n      mstore\n        /* \"#utility.yul\":13140:13143   */\n      0x80\n        /* \"#utility.yul\":13125:13144   */\n      add\n      swap1\n        /* \"#utility.yul\":12743:13150   */\n      jump\t// out\n        /* \"#utility.yul\":13976:14226   */\n    tag_716:\n        /* \"#utility.yul\":14061:14062   */\n      0x00\n        /* \"#utility.yul\":14071:14184   */\n    tag_813:\n        /* \"#utility.yul\":14085:14091   */\n      dup4\n        /* \"#utility.yul\":14082:14083   */\n      dup2\n        /* \"#utility.yul\":14079:14092   */\n      lt\n        /* \"#utility.yul\":14071:14184   */\n      iszero\n      tag_815\n      jumpi\n        /* \"#utility.yul\":14161:14172   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":14155:14173   */\n      mload\n        /* \"#utility.yul\":14142:14153   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":14135:14174   */\n      mstore\n        /* \"#utility.yul\":14107:14109   */\n      0x20\n        /* \"#utility.yul\":14100:14110   */\n      add\n        /* \"#utility.yul\":14071:14184   */\n      jump(tag_813)\n    tag_815:\n      pop\n      pop\n        /* \"#utility.yul\":14218:14219   */\n      0x00\n        /* \"#utility.yul\":14200:14216   */\n      swap2\n      add\n        /* \"#utility.yul\":14193:14220   */\n      mstore\n        /* \"#utility.yul\":13976:14226   */\n      jump\t// out\n        /* \"#utility.yul\":14231:14518   */\n    tag_695:\n        /* \"#utility.yul\":14360:14363   */\n      0x00\n        /* \"#utility.yul\":14398:14404   */\n      dup3\n        /* \"#utility.yul\":14392:14405   */\n      mload\n        /* \"#utility.yul\":14414:14480   */\n      tag_817\n        /* \"#utility.yul\":14473:14479   */\n      dup2\n        /* \"#utility.yul\":14468:14471   */\n      dup5\n        /* \"#utility.yul\":14461:14465   */\n      0x20\n        /* \"#utility.yul\":14453:14459   */\n      dup8\n        /* \"#utility.yul\":14449:14466   */\n      add\n        /* \"#utility.yul\":14414:14480   */\n      tag_716\n      jump\t// in\n    tag_817:\n        /* \"#utility.yul\":14496:14512   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":14231:14518   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14523:14919   */\n    tag_710:\n        /* \"#utility.yul\":14672:14674   */\n      0x20\n        /* \"#utility.yul\":14661:14670   */\n      dup2\n        /* \"#utility.yul\":14654:14675   */\n      mstore\n        /* \"#utility.yul\":14635:14639   */\n      0x00\n        /* \"#utility.yul\":14704:14710   */\n      dup3\n        /* \"#utility.yul\":14698:14711   */\n      mload\n        /* \"#utility.yul\":14747:14753   */\n      dup1\n        /* \"#utility.yul\":14742:14744   */\n      0x20\n        /* \"#utility.yul\":14731:14740   */\n      dup5\n        /* \"#utility.yul\":14727:14745   */\n      add\n        /* \"#utility.yul\":14720:14754   */\n      mstore\n        /* \"#utility.yul\":14763:14842   */\n      tag_819\n        /* \"#utility.yul\":14835:14841   */\n      dup2\n        /* \"#utility.yul\":14830:14832   */\n      0x40\n        /* \"#utility.yul\":14819:14828   */\n      dup6\n        /* \"#utility.yul\":14815:14833   */\n      add\n        /* \"#utility.yul\":14810:14812   */\n      0x20\n        /* \"#utility.yul\":14802:14808   */\n      dup8\n        /* \"#utility.yul\":14798:14813   */\n      add\n        /* \"#utility.yul\":14763:14842   */\n      tag_716\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":14903:14905   */\n      0x1f\n        /* \"#utility.yul\":14882:14897   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":14878:14907   */\n      and\n        /* \"#utility.yul\":14863:14908   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":14910:14912   */\n      0x40\n        /* \"#utility.yul\":14859:14913   */\n      add\n      swap3\n        /* \"#utility.yul\":14523:14919   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_662a7ba1d8fb60beff3d02117181416eb800676fa4d6f1ebc4c3fea5cd79ec88 46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n    data_e3d46f142e20657c402ed08bdf439babdd6fbb8091e2708315f00847c0f52cc5 3efdd7a884ff9e18c9e5711c185aa6c5e413b68f23197997da5b1665ca978f99\n\n    auxdata: 0xa26469706673582212209fb3eef1a7e8dfd481c6fe090fec9d605b631080bf75fee713d3f374a9a0c71c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b50608051612ab16100485f395f8181610e9801528181610ed8015281816110fc0152818161113c01526111b70152612ab15ff3fe6080604052600436106102ec575f3560e01c8063602e66231161018b578063602e6623146106d8578063669934a9146106f757806366bf8f8314610716578063698518e5146107355780636b1a9c071461074a578063715018a61461076c57806372765009146107805780637634b0701461079f578063767608e2146107be578063796f838e146107dd578063812df395146107fc57806385adb2941461081b578063863be1ab146108305780638a5705d41461084f5780638da5cb5b146108645780638e10ef0b146108785780638f05cdf51461088d57806395623641146108ac5780639a3135a8146108cb578063b2cf085e146108ed578063c4d66de81461090c578063cde857441461092b578063dbe55e561461094a578063e3d9aa0514610969578063e9d610e514610988578063eb2266bc146109a7578063ee787b11146109c6578063f2fde38b146109db578063f7656704146109fa578063f80183b214610a19578063f97fe09114610a38578063fe6dcdba14610a57578063ff85807914610a7e575f80fd5b8063057d7781146102f057806306394c9b1461032c57806308f93bd81461034d5780630b433a121461036c578063182d326e1461038f57806319a2ef5f146103b05780631e56cfab146103cf5780631e79aa0a146103ee57806321596c251461040f578063254720b714610424578063280e31cc1461046b5780632d8852ee146104965780632f48ab7d146104ab5780633360364d146104ca57806333f5780e146104e957806335aed778146105085780633659cfe61461052757806336e0cac61461054657806339cbc4051461055b5780633b2c2e55146105705780633d08e5b31461058f578063434f9736146105a4578063498c1e3c146105b95780634b0bddd2146105d85780634b21ddec146105f75780634dd40234146106165780634f1ef286146106355780635250c9b51461064857806352d1902d14610667578063570ca7351461067b57806357629f821461069a5780635bff9787146106b9575b5f80fd5b3480156102fb575f80fd5b5061030f61030a366004612492565b610a9d565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610337575f80fd5b5061034b6103463660046124c4565b610ac5565b005b348015610358575f80fd5b5061034b610367366004612492565b610aef565b348015610377575f80fd5b5061038160e35481565b604051908152602001610323565b34801561039a575f80fd5b506103a3610b4e565b604051610323919061251f565b3480156103bb575f80fd5b5061034b6103ca366004612492565b610be1565b3480156103da575f80fd5b5060d45461030f906001600160a01b031681565b3480156103f9575f80fd5b50610402610c37565b604051610323919061255f565b34801561041a575f80fd5b5061038160de5481565b34801561042f575f80fd5b5061045661043e366004612492565b60df6020525f90815260409020805460019091015482565b60408051928352602083019190915201610323565b348015610476575f80fd5b506103816104853660046124c4565b60e06020525f908152604090205481565b3480156104a1575f80fd5b5061038160e25481565b3480156104b6575f80fd5b5060c95461030f906001600160a01b031681565b3480156104d5575f80fd5b5061034b6104e4366004612492565b610d28565b3480156104f4575f80fd5b5061034b610503366004612571565b610d7e565b348015610513575f80fd5b5061034b6105223660046124c4565b610e1b565b348015610532575f80fd5b5061034b6105413660046124c4565b610e8e565b348015610551575f80fd5b5061038160d15481565b348015610566575f80fd5b5061038160dd5481565b34801561057b575f80fd5b5061034b61058a366004612659565b610f55565b34801561059a575f80fd5b5061038160e65481565b3480156105af575f80fd5b5061038160d85481565b3480156105c4575f80fd5b5061034b6105d3366004612492565b61106a565b3480156105e3575f80fd5b5061034b6105f23660046126b8565b6110c0565b348015610602575f80fd5b5060db5461030f906001600160a01b031681565b348015610621575f80fd5b5060cc5461030f906001600160a01b031681565b61034b6106433660046126f1565b6110f2565b348015610653575f80fd5b5060ce5461030f906001600160a01b031681565b348015610672575f80fd5b506103816111ab565b348015610686575f80fd5b5060e45461030f906001600160a01b031681565b3480156106a5575f80fd5b5061034b6106b4366004612571565b611257565b3480156106c4575f80fd5b5060ca5461030f906001600160a01b031681565b3480156106e3575f80fd5b5060cd5461030f906001600160a01b031681565b348015610702575f80fd5b5061034b6107113660046124c4565b61130d565b348015610721575f80fd5b5061034b610730366004612492565b611380565b348015610740575f80fd5b5061038160d25481565b348015610755575f80fd5b5061075e6113d6565b604051610323929190612790565b348015610777575f80fd5b5061034b6114f5565b34801561078b575f80fd5b5061034b61079a366004612492565b611508565b3480156107aa575f80fd5b5061034b6107b9366004612492565b61155e565b3480156107c9575f80fd5b5061034b6107d8366004612492565b6115b4565b3480156107e8575f80fd5b5061034b6107f7366004612492565b61160a565b348015610807575f80fd5b5061034b6108163660046127b4565b611660565b348015610826575f80fd5b5061038160d65481565b34801561083b575f80fd5b5061034b61084a366004612492565b611720565b34801561085a575f80fd5b5061038160d75481565b34801561086f575f80fd5b5061030f611776565b348015610883575f80fd5b5061038160da5481565b348015610898575f80fd5b5060cb5461030f906001600160a01b031681565b3480156108b7575f80fd5b5060d55461030f906001600160a01b031681565b3480156108d6575f80fd5b506108df611785565b604051610323929190612824565b3480156108f8575f80fd5b5060d05461030f906001600160a01b031681565b348015610917575f80fd5b5061034b6109263660046124c4565b611849565b348015610936575f80fd5b5061034b6109453660046124c4565b611c9e565b348015610955575f80fd5b5060cf5461030f906001600160a01b031681565b348015610974575f80fd5b5061034b610983366004612836565b611d11565b348015610993575f80fd5b5060d35461030f906001600160a01b031681565b3480156109b2575f80fd5b5061034b6109c13660046124c4565b611d6d565b3480156109d1575f80fd5b5061038160d95481565b3480156109e6575f80fd5b5061034b6109f53660046124c4565b611de0565b348015610a05575f80fd5b5061034b610a143660046124c4565b611e56565b348015610a24575f80fd5b5061034b610a333660046124c4565b611ec9565b348015610a43575f80fd5b5060dc5461030f906001600160a01b031681565b348015610a62575f80fd5b5061030f73d220b3cf1e4660c5509418b42a86d7945e6e2e1881565b348015610a89575f80fd5b5061034b610a983660046124c4565b611f3c565b60e18181548110610aac575f80fd5b5f918252602090912001546001600160a01b0316905081565b610acd611faf565b60e480546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff1680610b245750610b0f611776565b6001600160a01b0316336001600160a01b0316145b610b495760405162461bcd60e51b8152600401610b4090612856565b60405180910390fd5b60d255565b6040805160028082526060808301845292602083019080368337505060db5482519293506001600160a01b0316918391505f90610b8d57610b8d612879565b6001600160a01b03928316602091820292909201015260dc54825191169082906001908110610bbe57610bbe612879565b60200260200101906001600160a01b031690816001600160a01b03168152505090565b335f90815260e5602052604090205460ff1680610c165750610c01611776565b6001600160a01b0316336001600160a01b0316145b610c325760405162461bcd60e51b8152600401610b4090612856565b60dd55565b60408051600680825260e082019092526060916020820160c08036833701905050905060d754815f81518110610c6f57610c6f612879565b60200260200101818152505060d85481600181518110610c9157610c91612879565b60200260200101818152505060d95481600281518110610cb357610cb3612879565b60200260200101818152505060da5481600381518110610cd557610cd5612879565b60200260200101818152505060dd5481600481518110610cf757610cf7612879565b60200260200101818152505060de5481600581518110610d1957610d19612879565b60200260200101818152505090565b335f90815260e5602052604090205460ff1680610d5d5750610d48611776565b6001600160a01b0316336001600160a01b0316145b610d795760405162461bcd60e51b8152600401610b4090612856565b60d655565b335f90815260e5602052604090205460ff1680610db35750610d9e611776565b6001600160a01b0316336001600160a01b0316145b610dcf5760405162461bcd60e51b8152600401610b4090612856565b6001600160a01b039091165f81815260e0602052604081209290925560e1805460018101825592525f80516020612a5c83398151915290910180546001600160a01b0319169091179055565b335f90815260e5602052604090205460ff1680610e505750610e3b611776565b6001600160a01b0316336001600160a01b0316145b610e6c5760405162461bcd60e51b8152600401610b4090612856565b60d580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ed65760405162461bcd60e51b8152600401610b409061288d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f0861200e565b6001600160a01b031614610f2e5760405162461bcd60e51b8152600401610b40906128c6565b610f3781612029565b604080515f80825260208201909252610f5291839190612031565b50565b335f90815260e5602052604090205460ff1680610f8a5750610f75611776565b6001600160a01b0316336001600160a01b0316145b610fa65760405162461bcd60e51b8152600401610b4090612856565b8051825114610fe65760405162461bcd60e51b815260206004820152600c60248201526b3632b733ba341032b93937b960a11b6044820152606401610b40565b5f5b825181101561106557604051806040016040528084838151811061100e5761100e612879565b6020026020010151815260200183838151811061102d5761102d612879565b6020908102919091018101519091525f83815260df8252604090208251815591015160019091015561105e816128ff565b9050610fe8565b505050565b335f90815260e5602052604090205460ff168061109f575061108a611776565b6001600160a01b0316336001600160a01b0316145b6110bb5760405162461bcd60e51b8152600401610b4090612856565b60d955565b6110c8611faf565b6001600160a01b03919091165f90815260e560205260409020805460ff1916911515919091179055565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361113a5760405162461bcd60e51b8152600401610b409061288d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661116c61200e565b6001600160a01b0316146111925760405162461bcd60e51b8152600401610b40906128c6565b61119b82612029565b6111a782826001612031565b5050565b5f306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112455760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610b40565b505f80516020612a1583398151915290565b335f90815260e5602052604090205460ff168061128c5750611277611776565b6001600160a01b0316336001600160a01b0316145b6112a85760405162461bcd60e51b8152600401610b4090612856565b60cc54604051632bb14fc160e11b81526001600160a01b03848116600483015260248201849052909116906357629f82906044015f604051808303815f87803b1580156112f3575f80fd5b505af1158015611305573d5f803e3d5ffd5b505050505050565b335f90815260e5602052604090205460ff1680611342575061132d611776565b6001600160a01b0316336001600160a01b0316145b61135e5760405162461bcd60e51b8152600401610b4090612856565b60d480546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff16806113b557506113a0611776565b6001600160a01b0316336001600160a01b0316145b6113d15760405162461bcd60e51b8152600401610b4090612856565b60de55565b60608060e180548060200260200160405190810160405280929190818152602001828054801561142d57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161140f575b5050505050915081516001600160401b0381111561144d5761144d612599565b604051908082528060200260200182016040528015611476578160200160208202803683370190505b5090505f5b82518110156114f05760e05f84838151811061149957611499612879565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20548282815181106114d3576114d3612879565b6020908102919091010152806114e8816128ff565b91505061147b565b509091565b6114fd611faf565b6115065f61219b565b565b335f90815260e5602052604090205460ff168061153d5750611528611776565b6001600160a01b0316336001600160a01b0316145b6115595760405162461bcd60e51b8152600401610b4090612856565b60d155565b335f90815260e5602052604090205460ff1680611593575061157e611776565b6001600160a01b0316336001600160a01b0316145b6115af5760405162461bcd60e51b8152600401610b4090612856565b60e255565b335f90815260e5602052604090205460ff16806115e957506115d4611776565b6001600160a01b0316336001600160a01b0316145b6116055760405162461bcd60e51b8152600401610b4090612856565b60e655565b335f90815260e5602052604090205460ff168061163f575061162a611776565b6001600160a01b0316336001600160a01b0316145b61165b5760405162461bcd60e51b8152600401610b4090612856565b60e355565b335f90815260e5602052604090205460ff16806116955750611680611776565b6001600160a01b0316336001600160a01b0316145b6116b15760405162461bcd60e51b8152600401610b4090612856565b60c980546001600160a01b03199081166001600160a01b039889161790915560cb805482169688169690961790955560ca805486169487169490941790935560cd805485169286169290921790915560cc8054841691851691909117905560ce80549092169216919091179055565b335f90815260e5602052604090205460ff16806117555750611740611776565b6001600160a01b0316336001600160a01b0316145b6117715760405162461bcd60e51b8152600401610b4090612856565b60da55565b6033546001600160a01b031690565b60408051600480825260a0820190925260609182919060208201608080368337505060408051600480825260a082019092529294509050602082016080803683370190505090505f5b60048110156114f0575f81815260df602052604090205483518490839081106117f9576117f9612879565b60200260200101818152505060df5f8281526020019081526020015f206001015482828151811061182c5761182c612879565b602090810291909101015280611841816128ff565b9150506117ce565b5f54610100900460ff161580801561186757505f54600160ff909116105b806118875750611876306121ec565b15801561188757505f5460ff166001145b6118ea5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b40565b5f805460ff19166001179055801561190b575f805461ff0019166101001790555b6119136121fb565b60e480546001600160a01b0384166001600160a01b03199182161790915560cf8054821673df9228fc02f4554cd80af6d036dade242022e4f217905560d080548216734076af4556458cdd0ad25e86ed23b4dc8437dce417905561038460d1556103e860d25560d38054821673fae25f1ae4b758d7c96d7eb075b62af4f3398b8917905560d480548216737fba7858083836d9169eb3be21a48189e1798c8e17905560d580548216732737ac6359664096f22863088246d885f14e6ff29081179091556801158e460913d0000060d65569014542ba12a337c0000060e655609660d755606460d881905560d981905560da5560db80548316909117905560dc8054821673b36f6361dcf31d0d7956e9e826a9915a5ddec272179055603260dd5569043c33c193756480000060de556040805180820182525f808252602080830182815282805260df80835293517f4b917336ba36fefa23b90074e126fe5413f0e3fc800e7ab1da217d9a2807b71155517f4b917336ba36fefa23b90074e126fe5413f0e3fc800e7ab1da217d9a2807b712558351808501855269021e19e0c9bab2400000815260c8818301908152600180855285845291517f55c38c42e971eeb957b61422467f67fa3b212021ac50a6b2b3d5acd9d01cb97d55517f55c38c42e971eeb957b61422467f67fa3b212021ac50a6b2b3d5acd9d01cb97e558451808601865269065a4da25d3016c00000815261015e8184019081526002855285845290517f36d20378f308040d39a8a5e0299048c5eb6a3e2af0aad6fc5cbd63dba6084c7555517f36d20378f308040d39a8a5e0299048c5eb6a3e2af0aad6fc5cbd63dba6084c7655845180860190955269152d02c7e14af680000085526101f4858301908152600380855294835294517f780609eda5e52d7936e75ead8ec77fc018859646a90304d10fb581006956b09e5593517f780609eda5e52d7936e75ead8ec77fc018859646a90304d10fb581006956b09f5560e090527f29f40cf27a854b63617043f10b660b0f327b8234f55a91e6b6f6e8a2fa39678b9190915560e18054928301815590525f80516020612a5c83398151915201805490911673d220b3cf1e4660c5509418b42a86d7945e6e2e181790556301e1338060e255603c60e35580156111a7575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b335f90815260e5602052604090205460ff1680611cd35750611cbe611776565b6001600160a01b0316336001600160a01b0316145b611cef5760405162461bcd60e51b8152600401610b4090612856565b60cf80546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff1680611d465750611d31611776565b6001600160a01b0316336001600160a01b0316145b611d625760405162461bcd60e51b8152600401610b4090612856565b60d79190915560d855565b335f90815260e5602052604090205460ff1680611da25750611d8d611776565b6001600160a01b0316336001600160a01b0316145b611dbe5760405162461bcd60e51b8152600401610b4090612856565b60dc80546001600160a01b0319166001600160a01b0392909216919091179055565b611de8611faf565b6001600160a01b038116611e4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b40565b610f528161219b565b335f90815260e5602052604090205460ff1680611e8b5750611e76611776565b6001600160a01b0316336001600160a01b0316145b611ea75760405162461bcd60e51b8152600401610b4090612856565b60d080546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff1680611efe5750611ee9611776565b6001600160a01b0316336001600160a01b0316145b611f1a5760405162461bcd60e51b8152600401610b4090612856565b60d380546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff1680611f715750611f5c611776565b6001600160a01b0316336001600160a01b0316145b611f8d5760405162461bcd60e51b8152600401610b4090612856565b60db80546001600160a01b0319166001600160a01b0392909216919091179055565b33611fb8611776565b6001600160a01b0316146115065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b40565b5f80516020612a15833981519152546001600160a01b031690565b610f52611faf565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156120645761106583612229565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156120be575060408051601f3d908101601f191682019092526120bb91810190612923565b60015b6121215760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610b40565b5f80516020612a15833981519152811461218f5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610b40565b506110658383836122c2565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03163b151590565b5f54610100900460ff166122215760405162461bcd60e51b8152600401610b409061293a565b6115066122ec565b612232816121ec565b6122945760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610b40565b5f80516020612a1583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6122cb8361231b565b5f825111806122d75750805b15611065576122e6838361235a565b50505050565b5f54610100900460ff166123125760405162461bcd60e51b8152600401610b409061293a565b6115063361219b565b61232481612229565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b6060612365836121ec565b6123c05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610b40565b5f80846001600160a01b0316846040516123da91906129a7565b5f60405180830381855af49150503d805f8114612412576040519150601f19603f3d011682016040523d82523d5f602084013e612417565b606091505b509150915061243f8282604051806060016040528060278152602001612a3560279139612448565b95945050505050565b60608315612457575081612461565b6124618383612468565b9392505050565b8151156124785781518083602001fd5b8060405162461bcd60e51b8152600401610b4091906129c2565b5f602082840312156124a2575f80fd5b5035919050565b80356001600160a01b03811681146124bf575f80fd5b919050565b5f602082840312156124d4575f80fd5b612461826124a9565b5f8151808452602080850194508084015f5b838110156125145781516001600160a01b0316875295820195908201906001016124ef565b509495945050505050565b602081525f61246160208301846124dd565b5f8151808452602080850194508084015f5b8381101561251457815187529582019590820190600101612543565b602081525f6124616020830184612531565b5f8060408385031215612582575f80fd5b61258b836124a9565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156125d5576125d5612599565b604052919050565b5f82601f8301126125ec575f80fd5b813560206001600160401b0382111561260757612607612599565b8160051b6126168282016125ad565b928352848101820192828101908785111561262f575f80fd5b83870192505b8483101561264e57823582529183019190830190612635565b979650505050505050565b5f806040838503121561266a575f80fd5b82356001600160401b0380821115612680575f80fd5b61268c868387016125dd565b935060208501359150808211156126a1575f80fd5b506126ae858286016125dd565b9150509250929050565b5f80604083850312156126c9575f80fd5b6126d2836124a9565b9150602083013580151581146126e6575f80fd5b809150509250929050565b5f8060408385031215612702575f80fd5b61270b836124a9565b91506020838101356001600160401b0380821115612727575f80fd5b818601915086601f83011261273a575f80fd5b81358181111561274c5761274c612599565b61275e601f8201601f191685016125ad565b91508082528784828501011115612773575f80fd5b80848401858401375f848284010152508093505050509250929050565b604081525f6127a260408301856124dd565b828103602084015261243f8185612531565b5f805f805f8060c087890312156127c9575f80fd5b6127d2876124a9565b95506127e0602088016124a9565b94506127ee604088016124a9565b93506127fc606088016124a9565b925061280a608088016124a9565b915061281860a088016124a9565b90509295509295509295565b604081525f6127a26040830185612531565b5f8060408385031215612847575f80fd5b50508035926020909101359150565b6020808252600990820152683737ba1030b236b4b760b91b604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b6020808252602c908201525f805160206129f583398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201525f805160206129f583398151915260408201526b6163746976652070726f787960a01b606082015260800190565b5f6001820161291c57634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f60208284031215612933575f80fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f5b8381101561299f578181015183820152602001612987565b50505f910152565b5f82516129b8818460208701612985565b9190910192915050565b602081525f82518060208401526129e0816040850160208701612985565b601f01601f1916919091016040019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65643efdd7a884ff9e18c9e5711c185aa6c5e413b68f23197997da5b1665ca978f99a26469706673582212209fb3eef1a7e8dfd481c6fe090fec9d605b631080bf75fee713d3f374a9a0c71c64736f6c63430008140033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x2AB1 PUSH2 0x48 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xE98 ADD MSTORE DUP2 DUP2 PUSH2 0xED8 ADD MSTORE DUP2 DUP2 PUSH2 0x10FC ADD MSTORE DUP2 DUP2 PUSH2 0x113C ADD MSTORE PUSH2 0x11B7 ADD MSTORE PUSH2 0x2AB1 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2EC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x602E6623 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x602E6623 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0x669934A9 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0x66BF8F83 EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0x698518E5 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0x6B1A9C07 EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0x72765009 EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0x7634B070 EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0x767608E2 EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0x796F838E EQ PUSH2 0x7DD JUMPI DUP1 PUSH4 0x812DF395 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0x85ADB294 EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0x863BE1AB EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0x8A5705D4 EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x864 JUMPI DUP1 PUSH4 0x8E10EF0B EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0x8F05CDF5 EQ PUSH2 0x88D JUMPI DUP1 PUSH4 0x95623641 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0x9A3135A8 EQ PUSH2 0x8CB JUMPI DUP1 PUSH4 0xB2CF085E EQ PUSH2 0x8ED JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x90C JUMPI DUP1 PUSH4 0xCDE85744 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0xDBE55E56 EQ PUSH2 0x94A JUMPI DUP1 PUSH4 0xE3D9AA05 EQ PUSH2 0x969 JUMPI DUP1 PUSH4 0xE9D610E5 EQ PUSH2 0x988 JUMPI DUP1 PUSH4 0xEB2266BC EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xEE787B11 EQ PUSH2 0x9C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9DB JUMPI DUP1 PUSH4 0xF7656704 EQ PUSH2 0x9FA JUMPI DUP1 PUSH4 0xF80183B2 EQ PUSH2 0xA19 JUMPI DUP1 PUSH4 0xF97FE091 EQ PUSH2 0xA38 JUMPI DUP1 PUSH4 0xFE6DCDBA EQ PUSH2 0xA57 JUMPI DUP1 PUSH4 0xFF858079 EQ PUSH2 0xA7E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57D7781 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x6394C9B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8F93BD8 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xB433A12 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x182D326E EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x19A2EF5F EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x1E56CFAB EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x1E79AA0A EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x21596C25 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x254720B7 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x280E31CC EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x2D8852EE EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x3360364D EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x33F5780E EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x35AED778 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x36E0CAC6 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x39CBC405 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x3B2C2E55 EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0x3D08E5B3 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x434F9736 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x498C1E3C EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x4B0BDDD2 EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0x4B21DDEC EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0x4DD40234 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0x5250C9B5 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0x57629F82 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0x5BFF9787 EQ PUSH2 0x6B9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xE3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xBE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD4 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x402 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x255F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xDE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x456 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0xDF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x323 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xE2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x2571 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xDD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x2659 JUMP JUMPDEST PUSH2 0xF55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xE6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x5F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B8 JUMP JUMPDEST PUSH2 0x10C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xDB SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x34B PUSH2 0x643 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F1 JUMP JUMPDEST PUSH2 0x10F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCE SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x11AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x686 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE4 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x6B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2571 JUMP JUMPDEST PUSH2 0x1257 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x711 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x730 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1380 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x75E PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP3 SWAP2 SWAP1 PUSH2 0x2790 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x777 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x14F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x79A CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1508 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x7B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x7D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x7F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x160A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x807 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x816 CALLDATASIZE PUSH1 0x4 PUSH2 0x27B4 JUMP JUMPDEST PUSH2 0x1660 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1720 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x1776 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x883 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xDA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x898 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCB SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD5 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8DF PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP3 SWAP2 SWAP1 PUSH2 0x2824 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD0 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x917 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x926 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1849 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x936 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x945 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x955 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x974 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x983 CALLDATASIZE PUSH1 0x4 PUSH2 0x2836 JUMP JUMPDEST PUSH2 0x1D11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x993 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD3 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x9C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1D6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x9F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1DE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0xA14 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1E56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA24 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0xA33 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1EC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xDC SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH20 0xD220B3CF1E4660C5509418B42A86D7945E6E2E18 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0xA98 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0xE1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xACD PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0xE4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xB24 JUMPI POP PUSH2 0xB0F PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD2 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0xDB SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH0 SWAP1 PUSH2 0xB8D JUMPI PUSH2 0xB8D PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xDC SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xBBE JUMPI PUSH2 0xBBE PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xC16 JUMPI POP PUSH2 0xC01 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDD SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xC0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0xD7 SLOAD DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xC6F JUMPI PUSH2 0xC6F PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xD8 SLOAD DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC91 JUMPI PUSH2 0xC91 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xD9 SLOAD DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH2 0xCB3 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xDA SLOAD DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xCD5 JUMPI PUSH2 0xCD5 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xDD SLOAD DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xDE SLOAD DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0xD19 JUMPI PUSH2 0xD19 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xD5D JUMPI POP PUSH2 0xD48 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD6 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xDB3 JUMPI POP PUSH2 0xD9E PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xDCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xE1 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xE50 JUMPI POP PUSH2 0xE3B PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF08 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF52 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x2031 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xF8A JUMPI POP PUSH2 0xF75 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xFA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x3632B733BA341032B93937B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x100E JUMPI PUSH2 0x100E PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x102D JUMPI PUSH2 0x102D PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP1 SWAP2 MSTORE PUSH0 DUP4 DUP2 MSTORE PUSH1 0xDF DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH2 0x105E DUP2 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP PUSH2 0xFE8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x109F JUMPI POP PUSH2 0x108A PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD9 SSTORE JUMP JUMPDEST PUSH2 0x10C8 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x116C PUSH2 0x200E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH2 0x119B DUP3 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x11A7 DUP3 DUP3 PUSH1 0x1 PUSH2 0x2031 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x128C JUMPI POP PUSH2 0x1277 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB14FC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x57629F82 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1305 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1342 JUMPI POP PUSH2 0x132D PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x13B5 JUMPI POP PUSH2 0x13A0 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDE SSTORE JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0xE1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x142D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x140F JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x144D JUMPI PUSH2 0x144D PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1476 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x14F0 JUMPI PUSH1 0xE0 PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1499 JUMPI PUSH2 0x1499 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14D3 JUMPI PUSH2 0x14D3 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x14E8 DUP2 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x147B JUMP JUMPDEST POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x1FAF JUMP JUMPDEST PUSH2 0x1506 PUSH0 PUSH2 0x219B JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x153D JUMPI POP PUSH2 0x1528 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1559 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1593 JUMPI POP PUSH2 0x157E PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x15AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xE2 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x15E9 JUMPI POP PUSH2 0x15D4 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xE6 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x163F JUMPI POP PUSH2 0x162A PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xE3 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1695 JUMPI POP PUSH2 0x1680 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xCB DUP1 SLOAD DUP3 AND SWAP7 DUP9 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH1 0xCA DUP1 SLOAD DUP7 AND SWAP5 DUP8 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xCD DUP1 SLOAD DUP6 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xCC DUP1 SLOAD DUP5 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xCE DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1755 JUMPI POP PUSH2 0x1740 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDA SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x80 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 POP PUSH1 0x20 DUP3 ADD PUSH1 0x80 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x14F0 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0xDF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x17F9 JUMPI PUSH2 0x17F9 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xDF PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x182C JUMPI PUSH2 0x182C PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x1841 DUP2 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17CE JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1867 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x1887 JUMPI POP PUSH2 0x1876 ADDRESS PUSH2 0x21EC JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1887 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x18EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x190B JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1913 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0xE4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xCF DUP1 SLOAD DUP3 AND PUSH20 0xDF9228FC02F4554CD80AF6D036DADE242022E4F2 OR SWAP1 SSTORE PUSH1 0xD0 DUP1 SLOAD DUP3 AND PUSH20 0x4076AF4556458CDD0AD25E86ED23B4DC8437DCE4 OR SWAP1 SSTORE PUSH2 0x384 PUSH1 0xD1 SSTORE PUSH2 0x3E8 PUSH1 0xD2 SSTORE PUSH1 0xD3 DUP1 SLOAD DUP3 AND PUSH20 0xFAE25F1AE4B758D7C96D7EB075B62AF4F3398B89 OR SWAP1 SSTORE PUSH1 0xD4 DUP1 SLOAD DUP3 AND PUSH20 0x7FBA7858083836D9169EB3BE21A48189E1798C8E OR SWAP1 SSTORE PUSH1 0xD5 DUP1 SLOAD DUP3 AND PUSH20 0x2737AC6359664096F22863088246D885F14E6FF2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH9 0x1158E460913D00000 PUSH1 0xD6 SSTORE PUSH10 0x14542BA12A337C00000 PUSH1 0xE6 SSTORE PUSH1 0x96 PUSH1 0xD7 SSTORE PUSH1 0x64 PUSH1 0xD8 DUP2 SWAP1 SSTORE PUSH1 0xD9 DUP2 SWAP1 SSTORE PUSH1 0xDA SSTORE PUSH1 0xDB DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xDC DUP1 SLOAD DUP3 AND PUSH20 0xB36F6361DCF31D0D7956E9E826A9915A5DDEC272 OR SWAP1 SSTORE PUSH1 0x32 PUSH1 0xDD SSTORE PUSH10 0x43C33C1937564800000 PUSH1 0xDE SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP3 DUP1 MSTORE PUSH1 0xDF DUP1 DUP4 MSTORE SWAP4 MLOAD PUSH32 0x4B917336BA36FEFA23B90074E126FE5413F0E3FC800E7AB1DA217D9A2807B711 SSTORE MLOAD PUSH32 0x4B917336BA36FEFA23B90074E126FE5413F0E3FC800E7AB1DA217D9A2807B712 SSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE PUSH1 0xC8 DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 MSTORE DUP6 DUP5 MSTORE SWAP2 MLOAD PUSH32 0x55C38C42E971EEB957B61422467F67FA3B212021AC50A6B2B3D5ACD9D01CB97D SSTORE MLOAD PUSH32 0x55C38C42E971EEB957B61422467F67FA3B212021AC50A6B2B3D5ACD9D01CB97E SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH10 0x65A4DA25D3016C00000 DUP2 MSTORE PUSH2 0x15E DUP2 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE DUP6 DUP5 MSTORE SWAP1 MLOAD PUSH32 0x36D20378F308040D39A8A5E0299048C5EB6A3E2AF0AAD6FC5CBD63DBA6084C75 SSTORE MLOAD PUSH32 0x36D20378F308040D39A8A5E0299048C5EB6A3E2AF0AAD6FC5CBD63DBA6084C76 SSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH10 0x152D02C7E14AF6800000 DUP6 MSTORE PUSH2 0x1F4 DUP6 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP1 DUP6 MSTORE SWAP5 DUP4 MSTORE SWAP5 MLOAD PUSH32 0x780609EDA5E52D7936E75EAD8EC77FC018859646A90304D10FB581006956B09E SSTORE SWAP4 MLOAD PUSH32 0x780609EDA5E52D7936E75EAD8EC77FC018859646A90304D10FB581006956B09F SSTORE PUSH1 0xE0 SWAP1 MSTORE PUSH32 0x29F40CF27A854B63617043F10B660B0F327B8234F55A91E6B6F6E8A2FA39678B SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xE1 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xD220B3CF1E4660C5509418B42A86D7945E6E2E18 OR SWAP1 SSTORE PUSH4 0x1E13380 PUSH1 0xE2 SSTORE PUSH1 0x3C PUSH1 0xE3 SSTORE DUP1 ISZERO PUSH2 0x11A7 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1CD3 JUMPI POP PUSH2 0x1CBE PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1CEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xCF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1D46 JUMPI POP PUSH2 0x1D31 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xD8 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1DA2 JUMPI POP PUSH2 0x1D8D PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1DBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1DE8 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH2 0xF52 DUP2 PUSH2 0x219B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1E8B JUMPI POP PUSH2 0x1E76 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1EA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1EFE JUMPI POP PUSH2 0x1EE9 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1F71 JUMPI POP PUSH2 0x1F5C PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x1FB8 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF52 PUSH2 0x1FAF JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2064 JUMPI PUSH2 0x1065 DUP4 PUSH2 0x2229 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x20BE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x20BB SWAP2 DUP2 ADD SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x218F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST POP PUSH2 0x1065 DUP4 DUP4 DUP4 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH2 0x1506 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x2232 DUP2 PUSH2 0x21EC JUMP JUMPDEST PUSH2 0x2294 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x22CB DUP4 PUSH2 0x231B JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x22D7 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1065 JUMPI PUSH2 0x22E6 DUP4 DUP4 PUSH2 0x235A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH2 0x1506 CALLER PUSH2 0x219B JUMP JUMPDEST PUSH2 0x2324 DUP2 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2365 DUP4 PUSH2 0x21EC JUMP JUMPDEST PUSH2 0x23C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x23DA SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2412 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x243F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A35 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2448 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2457 JUMPI POP DUP2 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x2461 DUP4 DUP4 PUSH2 0x2468 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2478 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x29C2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x24BF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2461 DUP3 PUSH2 0x24A9 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2514 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x24EF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x2461 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24DD JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2514 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2543 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x2461 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2531 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x258B DUP4 PUSH2 0x24A9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x25D5 JUMPI PUSH2 0x25D5 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2607 JUMPI PUSH2 0x2607 PUSH2 0x2599 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x2616 DUP3 DUP3 ADD PUSH2 0x25AD JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x262F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x264E JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x2635 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x266A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2680 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x268C DUP7 DUP4 DUP8 ADD PUSH2 0x25DD JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26AE DUP6 DUP3 DUP7 ADD PUSH2 0x25DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26D2 DUP4 PUSH2 0x24A9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x26E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2702 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x270B DUP4 PUSH2 0x24A9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2727 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x273A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x274C JUMPI PUSH2 0x274C PUSH2 0x2599 JUMP JUMPDEST PUSH2 0x275E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x25AD JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2773 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x27A2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x24DD JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x243F DUP2 DUP6 PUSH2 0x2531 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x27C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27D2 DUP8 PUSH2 0x24A9 JUMP JUMPDEST SWAP6 POP PUSH2 0x27E0 PUSH1 0x20 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP5 POP PUSH2 0x27EE PUSH1 0x40 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x27FC PUSH1 0x60 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x280A PUSH1 0x80 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2818 PUSH1 0xA0 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x27A2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2531 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2847 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x3737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29F5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29F5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x291C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2933 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x299F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2987 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x29B8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2985 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x29E0 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CHAINID PUSH22 0x6E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x65643EFDD7A884FF9E18C9E571 SHR XOR GAS 0xA6 0xC5 0xE4 SGT 0xB6 DUP16 0x23 NOT PUSH26 0x97DA5B1665CA978F99A26469706673582212209FB3EEF1A7E8DF 0xD4 DUP2 0xC6 INVALID MULMOD 0xF 0xEC SWAP14 PUSH1 0x5B PUSH4 0x1080BF75 INVALID 0xE7 SGT 0xD3 RETURN PUSH21 0xA9A0C71C64736F6C63430008140033000000000000 ",
							"sourceMap": "513:7876:0:-:0;;;1332:4:8;1289:48;;513:7876:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__Ownable_init_953": {
									"entryPoint": 8699,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_964": {
									"entryPoint": 8940,
									"id": 964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_263": {
									"entryPoint": 8233,
									"id": 263,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_995": {
									"entryPoint": 8111,
									"id": 995,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_functionDelegateCall_1438": {
									"entryPoint": 9050,
									"id": 1438,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getImplementation_1134": {
									"entryPoint": 8206,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_2148": {
									"entryPoint": null,
									"id": 2148,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2120": {
									"entryPoint": 9320,
									"id": 2120,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_1158": {
									"entryPoint": 8745,
									"id": 1158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1052": {
									"entryPoint": 8603,
									"id": 1052,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_1254": {
									"entryPoint": 8241,
									"id": 1254,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_1201": {
									"entryPoint": 8898,
									"id": 1201,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_1173": {
									"entryPoint": 8987,
									"id": 1173,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acbPair_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acb_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@airdropMachine_489": {
									"entryPoint": 4695,
									"id": 489,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@changeClaimInterval_577": {
									"entryPoint": 5642,
									"id": 577,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMachineExpireTime_565": {
									"entryPoint": 5470,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMarketAddress_774": {
									"entryPoint": 3611,
									"id": 774,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMaxComputingPower_738": {
									"entryPoint": 5556,
									"id": 738,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMinComputingPower_726": {
									"entryPoint": 3368,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMonthDividenAddress_798": {
									"entryPoint": 7766,
									"id": 798,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMvCollectionAddress_750": {
									"entryPoint": 7881,
									"id": 750,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeOperator_471": {
									"entryPoint": 2757,
									"id": 471,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePlatformAddress_786": {
									"entryPoint": 7326,
									"id": 786,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changePlatformRate_822": {
									"entryPoint": 5384,
									"id": 822,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeRefRewardRate_714": {
									"entryPoint": 7441,
									"id": 714,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@changeRemainingAddress_660": {
									"entryPoint": 7533,
									"id": 660,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeSameLevelRewardRate_696": {
									"entryPoint": 4202,
									"id": 696,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeShareHolderMinLimit_636": {
									"entryPoint": 4992,
									"id": 636,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeShareHolderRewardRate_648": {
									"entryPoint": 3041,
									"id": 648,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeSwapRate_810": {
									"entryPoint": 2799,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeTeamLevel_624": {
									"entryPoint": 3925,
									"id": 624,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@changeTeamRewardAddress_672": {
									"entryPoint": 7996,
									"id": 672,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeTeamRewardRate_684": {
									"entryPoint": 5920,
									"id": 684,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeTechAddress_762": {
									"entryPoint": 4877,
									"id": 762,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimInterval_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAddressSlot_2189": {
									"entryPoint": null,
									"id": 2189,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_2200": {
									"entryPoint": null,
									"id": 2200,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRateConfig_370": {
									"entryPoint": 3127,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTeamAddress_397": {
									"entryPoint": 2894,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTeamLevel_319": {
									"entryPoint": 6021,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getUserLevels_443": {
									"entryPoint": 5078,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@initialize_254": {
									"entryPoint": 6217,
									"id": 254,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_1855": {
									"entryPoint": 8684,
									"id": 1855,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@machineExpireTime_82": {
									"entryPoint": null,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@marketAddress_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxComputingPower_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minComputingPower_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minePool_34": {
									"entryPoint": null,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mmStore_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@monthDividendAddress_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mvCollectionAddress_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mv_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@operator_86": {
									"entryPoint": null,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_981": {
									"entryPoint": 6006,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@platformAddress_38": {
									"entryPoint": null,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@platformRate_42": {
									"entryPoint": null,
									"id": 42,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proxiableUUID_1704": {
									"entryPoint": 4523,
									"id": 1704,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@refRewardOneRate_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@refRewardTwoRate_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@remainingAddress_64": {
									"entryPoint": null,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_1009": {
									"entryPoint": 5365,
									"id": 1009,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sameLevelRewardRate_58": {
									"entryPoint": null,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setAdmin_459": {
									"entryPoint": 4288,
									"id": 459,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setConfig_553": {
									"entryPoint": 5728,
									"id": 553,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@setUserLevel_511": {
									"entryPoint": 3454,
									"id": 511,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@shareHolderMinLimit_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@shareHolderRewardRate_66": {
									"entryPoint": null,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapRate_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@teamLevel_73": {
									"entryPoint": null,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@teamRewardAddress_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@teamRewardRate_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@techAddress_48": {
									"entryPoint": null,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@top_24": {
									"entryPoint": null,
									"id": 24,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1032": {
									"entryPoint": 7648,
									"id": 1032,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1747": {
									"entryPoint": 4338,
									"id": 1747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_1726": {
									"entryPoint": 3726,
									"id": 1726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@usdt_26": {
									"entryPoint": null,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userArr_80": {
									"entryPoint": 2717,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userLevel_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_2100": {
									"entryPoint": 9288,
									"id": 2100,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 9385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 9693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address": {
									"entryPoint": 10164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 9969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 10531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 10294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 9437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 9521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10128,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10276,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1211e291a5fc226ff84735b78da6a491026596463c2cdd910d52e39d6bfe3839__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10629,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 10495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 10361,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 9625,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14921:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:13"
															},
															"nodeType": "YulIf",
															"src": "94:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:13",
														"type": ""
													}
												],
												"src": "14:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "367:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "383:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "388:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "379:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "379:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "392:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "375:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "375:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "363:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "363:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:13",
														"type": ""
													}
												],
												"src": "199:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "456:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "466:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "488:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "475:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "475:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "466:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "558:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "567:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "570:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "560:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "560:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "560:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "517:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "528:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "543:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "548:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "539:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "539:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "552:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "535:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "535:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "524:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "524:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "514:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "514:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "507:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:50:13"
															},
															"nodeType": "YulIf",
															"src": "504:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "435:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "446:5:13",
														"type": ""
													}
												],
												"src": "407:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "701:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "713:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "703:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "703:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "676:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "685:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "672:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "672:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "697:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "668:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "668:32:13"
															},
															"nodeType": "YulIf",
															"src": "665:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "726:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "755:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "736:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "621:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "632:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													}
												],
												"src": "585:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "877:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "887:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "899:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "910:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "895:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "887:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "929:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "940:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "922:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "922:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "846:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "857:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "868:4:13",
														"type": ""
													}
												],
												"src": "776:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1019:400:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1029:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1049:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1043:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1033:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1071:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1076:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1064:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1064:19:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1092:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1102:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1096:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1115:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1126:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1131:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1115:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1143:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1161:5:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1168:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1157:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1157:14:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1147:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1189:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1184:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1248:146:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1269:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1284:6:13"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1278:5:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1278:13:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1301:3:13",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1306:1:13",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "1297:3:13"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1297:11:13"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1310:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1293:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1293:19:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1274:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1274:39:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1262:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1262:52:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1262:52:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1327:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1338:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1343:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1334:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1334:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1327:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1359:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1373:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1381:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1369:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1369:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1359:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1210:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1213:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1207:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1207:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1221:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1223:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1232:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1235:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1228:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1228:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1223:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1203:3:13",
																"statements": []
															},
															"src": "1199:195:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1403:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1410:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1403:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "996:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1003:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1011:3:13",
														"type": ""
													}
												],
												"src": "958:461:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1575:110:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1592:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1603:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1585:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1615:64:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1652:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1664:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1675:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1660:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1660:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "1623:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1623:56:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1615:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1544:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1555:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1566:4:13",
														"type": ""
													}
												],
												"src": "1424:261:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1751:374:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1761:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1781:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1775:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1765:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1803:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1808:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1796:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1796:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1796:19:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1824:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1834:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1828:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1847:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1858:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1863:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1854:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1854:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1847:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1875:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1893:5:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1900:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1889:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:14:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1879:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1912:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1921:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1916:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1980:120:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2001:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "2012:6:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2006:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2006:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1994:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1994:26:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1994:26:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2033:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2044:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2049:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2040:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2040:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2033:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2065:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2079:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2087:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2075:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2075:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1942:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1945:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1939:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1939:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1953:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1955:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1964:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1967:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1960:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1960:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1955:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1935:3:13",
																"statements": []
															},
															"src": "1931:169:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2109:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2116:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2109:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1728:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1735:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1743:3:13",
														"type": ""
													}
												],
												"src": "1690:435:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2281:110:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2298:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2309:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2291:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2291:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2291:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2321:64:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2358:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2370:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2381:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2329:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:56:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2321:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2250:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2261:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2272:4:13",
														"type": ""
													}
												],
												"src": "2130:261:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2525:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2535:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2547:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2558:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2543:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2535:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2577:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2588:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2570:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2570:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2570:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2615:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2626:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2611:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2611:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2631:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2604:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2604:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2486:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2497:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2505:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2516:4:13",
														"type": ""
													}
												],
												"src": "2396:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2736:167:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2782:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2791:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2794:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2784:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2784:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2784:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2757:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2766:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2753:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2753:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2749:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:32:13"
															},
															"nodeType": "YulIf",
															"src": "2746:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2807:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2836:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2817:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2855:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2882:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2893:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2878:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2878:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2865:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2855:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2694:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2705:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2717:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2725:6:13",
														"type": ""
													}
												],
												"src": "2649:254:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2940:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2957:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2964:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2969:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2960:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2960:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2950:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2950:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2950:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2997:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3000:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2990:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2990:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2990:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3021:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3024:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3014:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3014:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3014:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2908:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3085:230:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3095:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3111:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3105:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3105:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3095:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3123:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3145:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "3161:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3167:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3157:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3157:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3176:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3172:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3172:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3153:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3153:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3141:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3141:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3127:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3256:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3258:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3258:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3258:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3199:10:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3219:2:13",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3223:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3215:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3215:10:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3227:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3211:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3211:18:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3196:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3235:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3247:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3232:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3232:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3193:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3193:62:13"
															},
															"nodeType": "YulIf",
															"src": "3190:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3294:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3298:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3287:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3287:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3065:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3074:6:13",
														"type": ""
													}
												],
												"src": "3040:275:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3384:648:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3433:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3442:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3445:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3435:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3435:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3435:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3412:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3420:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3408:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3427:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3404:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3404:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3397:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3397:35:13"
															},
															"nodeType": "YulIf",
															"src": "3394:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3458:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3481:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3468:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3462:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3497:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3507:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3501:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3550:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3552:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3552:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3526:2:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3538:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3542:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3534:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3534:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3546:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:26:13"
															},
															"nodeType": "YulIf",
															"src": "3520:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3581:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3595:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3598:2:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "3591:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3591:10:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3585:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3610:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3641:2:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3645:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3637:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3637:11:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3621:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:28:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3614:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3658:16:13",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "3671:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3662:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3690:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3695:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3683:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3683:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3683:15:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3707:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3718:3:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3723:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3714:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3707:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3735:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3757:6:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3765:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:15:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3770:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3739:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3788:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3796:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3785:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:15:13"
															},
															"nodeType": "YulIf",
															"src": "3782:35:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3826:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3841:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3849:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3837:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:15:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3830:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3917:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3938:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3956:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3943:12:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3943:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3931:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3931:30:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3931:30:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3974:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3985:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3990:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3981:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3981:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3974:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3872:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3877:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3869:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3869:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3885:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3887:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3898:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3903:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3894:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3894:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3887:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3865:3:13",
																"statements": []
															},
															"src": "3861:142:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4012:14:13",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "4021:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4012:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3358:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3366:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3374:5:13",
														"type": ""
													}
												],
												"src": "3320:712:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4174:458:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4220:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4229:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4232:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4222:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4222:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4222:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4195:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4204:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4191:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4191:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4216:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4187:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:32:13"
															},
															"nodeType": "YulIf",
															"src": "4184:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4245:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4272:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4259:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4259:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4249:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4291:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4309:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4313:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4305:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4305:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4317:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4301:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4301:18:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4295:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4346:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4355:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4358:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4348:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4348:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4348:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4334:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4342:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4331:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4331:14:13"
															},
															"nodeType": "YulIf",
															"src": "4328:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4371:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4414:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4425:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4434:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4381:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4371:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4451:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4484:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4495:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4480:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4480:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4467:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4467:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4455:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4528:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4537:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4540:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4530:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4530:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4530:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4514:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4524:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4511:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:16:13"
															},
															"nodeType": "YulIf",
															"src": "4508:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4553:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4596:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4607:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4592:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4592:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4618:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4563:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:63:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4553:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4132:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4143:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4155:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4163:6:13",
														"type": ""
													}
												],
												"src": "4037:595:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4721:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4767:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4776:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4779:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4769:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4769:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4769:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4742:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4751:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4738:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4738:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4763:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4734:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4734:32:13"
															},
															"nodeType": "YulIf",
															"src": "4731:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4792:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4821:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4802:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4802:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4792:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4840:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4870:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4881:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4866:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4866:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4853:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4853:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4844:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4938:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4947:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4950:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4940:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4940:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4940:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4907:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4928:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4921:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4921:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4914:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4914:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4904:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4904:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4897:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4897:40:13"
															},
															"nodeType": "YulIf",
															"src": "4894:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4963:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4973:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4679:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4690:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4702:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4710:6:13",
														"type": ""
													}
												],
												"src": "4637:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5085:741:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5131:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5140:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5143:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5133:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5133:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5133:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5106:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5115:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5102:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5102:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5127:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5098:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5098:32:13"
															},
															"nodeType": "YulIf",
															"src": "5095:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5156:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5185:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5166:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5204:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5214:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5208:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5225:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5256:9:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5267:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5252:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5252:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5239:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5239:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5229:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5280:28:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5298:2:13",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5302:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5294:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5294:10:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5306:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5290:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5290:18:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5284:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5335:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5344:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5347:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5337:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5337:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5337:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5323:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5331:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5320:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:14:13"
															},
															"nodeType": "YulIf",
															"src": "5317:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5360:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5374:9:13"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5385:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5370:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5370:22:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5364:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5440:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5449:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5452:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5442:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5442:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5442:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5419:2:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5423:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5415:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5415:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5430:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5411:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5411:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5404:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5404:35:13"
															},
															"nodeType": "YulIf",
															"src": "5401:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5465:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5488:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5475:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5475:16:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5469:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5514:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5516:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5516:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5516:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5506:2:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5510:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5503:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5503:10:13"
															},
															"nodeType": "YulIf",
															"src": "5500:36:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5545:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "5586:2:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5590:4:13",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5582:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5582:13:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5601:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5597:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5597:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5578:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5578:27:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5607:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5574:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5574:36:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5558:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5558:53:13"
															},
															"variables": [
																{
																	"name": "array",
																	"nodeType": "YulTypedName",
																	"src": "5549:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5627:5:13"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5634:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5620:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5620:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5620:17:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5683:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5692:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5695:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5685:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5685:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5685:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5660:2:13"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "5664:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5656:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5656:11:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5669:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5652:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5652:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5674:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5649:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5649:33:13"
															},
															"nodeType": "YulIf",
															"src": "5646:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "5725:5:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5732:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5721:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5721:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5741:2:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5745:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5737:11:13"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5750:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5708:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5708:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5708:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nodeType": "YulIdentifier",
																						"src": "5777:5:13"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "5784:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5773:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5773:14:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5789:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5769:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5769:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5762:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5762:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5762:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5805:15:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "5815:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5805:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5043:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5054:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5066:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5074:6:13",
														"type": ""
													}
												],
												"src": "4989:837:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5932:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5942:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5954:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5965:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5950:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5942:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5984:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5995:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5901:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5912:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5923:4:13",
														"type": ""
													}
												],
												"src": "5831:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6259:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6270:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6252:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6252:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6282:70:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6325:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6337:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6348:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6333:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6333:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6296:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6296:56:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "6286:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6372:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6383:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6368:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6368:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "6392:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6400:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6388:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6361:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6361:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6420:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6457:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "6465:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6428:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6428:44:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6420:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6203:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6214:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6222:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6233:4:13",
														"type": ""
													}
												],
												"src": "6013:465:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6638:404:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6685:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6694:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6697:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6687:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6687:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6687:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6659:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6668:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6655:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6655:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6680:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6651:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6651:33:13"
															},
															"nodeType": "YulIf",
															"src": "6648:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6710:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6739:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6720:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6720:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6710:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6758:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6791:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6802:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6787:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6787:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6768:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6768:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6758:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6815:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6848:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6859:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6844:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6844:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6825:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6825:38:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6815:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6872:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6905:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6916:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6901:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6882:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:38:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6872:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6929:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6962:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6973:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6939:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6939:39:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6987:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7020:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7031:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7016:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7016:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6997:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6997:39:13"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6564:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6575:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6587:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6595:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6603:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6611:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6619:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6627:6:13",
														"type": ""
													}
												],
												"src": "6483:559:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7276:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7293:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7304:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7286:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7286:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7286:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7316:70:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7359:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7371:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7382:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7367:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7367:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7330:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7330:56:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "7320:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7406:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7417:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7402:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7402:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "7426:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7434:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7422:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7422:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7395:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7395:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7395:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7454:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7462:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:44:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7454:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7237:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7248:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7256:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7267:4:13",
														"type": ""
													}
												],
												"src": "7047:465:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7604:161:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7650:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7659:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7662:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7652:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7652:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7652:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7625:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7621:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7621:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7646:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7617:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7617:32:13"
															},
															"nodeType": "YulIf",
															"src": "7614:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7675:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7698:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7675:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7717:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7744:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7755:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7740:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7740:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7727:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7727:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7717:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7562:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7573:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7585:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7593:6:13",
														"type": ""
													}
												],
												"src": "7517:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7944:158:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7961:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7972:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7954:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7954:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7954:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7995:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8006:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7991:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7991:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8011:1:13",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7984:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7984:29:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7984:29:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8033:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8044:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8029:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8029:18:13"
																	},
																	{
																		"hexValue": "6e6f742061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8049:11:13",
																		"type": "",
																		"value": "not admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8022:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8022:39:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8022:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8070:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8082:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8093:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8078:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8078:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8070:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7921:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7935:4:13",
														"type": ""
													}
												],
												"src": "7770:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8139:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8156:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8163:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8168:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8159:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8159:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8149:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8149:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8149:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8196:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8199:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8189:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8189:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8189:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8220:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8223:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8213:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "8107:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8413:234:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8430:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8441:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8423:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8423:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8423:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8464:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8475:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8460:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8460:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8480:2:13",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8453:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8453:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8453:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8503:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8514:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8499:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8499:18:13"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8519:34:13",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8492:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8492:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8492:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8574:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8585:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8570:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:18:13"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8590:14:13",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8563:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8563:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8563:42:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8614:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8626:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8637:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8622:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8622:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8614:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8390:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8404:4:13",
														"type": ""
													}
												],
												"src": "8239:408:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8826:234:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8843:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8854:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8836:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8836:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8836:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8877:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8888:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8873:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8873:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8893:2:13",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8866:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8866:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8916:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8927:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8912:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8912:18:13"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8932:34:13",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8905:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8905:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8905:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8987:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8998:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8983:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8983:18:13"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9003:14:13",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8976:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8976:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8976:42:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9027:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9039:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9035:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9035:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9027:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8803:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8817:4:13",
														"type": ""
													}
												],
												"src": "8652:408:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9239:162:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9256:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9267:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9249:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9249:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9290:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9301:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9286:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9286:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9306:2:13",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9279:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9279:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9329:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9340:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9325:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9325:18:13"
																	},
																	{
																		"hexValue": "6c656e677468206572726f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9345:14:13",
																		"type": "",
																		"value": "length error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9318:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9318:42:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9318:42:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9369:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9381:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9392:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9377:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9377:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9369:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1211e291a5fc226ff84735b78da6a491026596463c2cdd910d52e39d6bfe3839__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9216:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9230:4:13",
														"type": ""
													}
												],
												"src": "9065:336:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9453:185:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9492:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9513:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9520:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9525:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9516:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9516:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9506:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9506:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9506:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9557:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9560:4:13",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9550:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9550:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9550:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9585:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9588:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9578:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9578:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9578:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9469:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9480:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9476:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9476:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9466:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9466:17:13"
															},
															"nodeType": "YulIf",
															"src": "9463:140:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9612:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9623:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9630:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9619:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9619:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9612:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9435:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9445:3:13",
														"type": ""
													}
												],
												"src": "9406:232:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9817:246:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9834:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9845:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9827:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9827:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9827:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9868:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9879:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9864:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9864:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9884:2:13",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9857:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9857:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9857:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9907:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9918:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9903:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9903:18:13"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9923:34:13",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9896:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9896:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9978:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9989:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9974:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9974:18:13"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9994:26:13",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9967:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9967:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9967:54:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10030:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10042:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10053:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10038:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10038:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10030:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9794:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9808:4:13",
														"type": ""
													}
												],
												"src": "9643:420:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10197:145:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10207:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10219:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10230:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10215:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10215:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10207:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10249:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10264:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10280:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10285:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10276:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10276:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10289:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10272:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10272:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10260:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10260:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10242:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10242:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10242:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10313:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10324:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10309:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10309:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10329:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10302:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10302:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10302:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10158:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10169:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10177:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10188:4:13",
														"type": ""
													}
												],
												"src": "10068:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10521:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10538:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10549:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10531:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10531:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10531:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10572:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10583:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10568:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10568:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10588:2:13",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10561:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10561:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10561:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10611:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10622:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10607:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10607:18:13"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10627:34:13",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10600:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10600:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10600:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10682:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10693:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10678:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10678:18:13"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10698:16:13",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10671:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10671:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10671:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10724:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10736:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10747:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10732:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10732:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10724:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10498:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10512:4:13",
														"type": ""
													}
												],
												"src": "10347:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10869:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10879:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10891:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10902:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10887:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10887:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10879:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10921:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10936:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10944:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10932:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10932:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10914:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10914:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10914:36:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10838:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10849:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10860:4:13",
														"type": ""
													}
												],
												"src": "10762:194:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11135:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11152:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11163:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11145:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11145:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11145:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11186:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11197:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11182:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11182:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11202:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11175:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11175:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11175:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11225:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11236:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11221:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11221:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11241:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11214:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11214:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11214:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11296:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11307:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11292:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11292:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11312:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11285:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11285:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11285:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11330:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11342:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11353:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11338:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11338:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11330:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11112:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11126:4:13",
														"type": ""
													}
												],
												"src": "10961:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11542:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11559:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11570:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11552:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11552:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11552:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11593:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11604:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11589:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11589:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11609:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11582:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11582:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11582:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11632:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11643:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11628:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11648:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11621:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11621:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11621:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11692:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11704:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11715:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11700:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11700:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11692:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11519:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11533:4:13",
														"type": ""
													}
												],
												"src": "11368:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11810:103:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11856:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11865:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11868:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11858:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11858:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11858:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11831:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11840:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11827:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11827:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11852:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11823:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11823:32:13"
															},
															"nodeType": "YulIf",
															"src": "11820:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11881:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11897:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11891:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11891:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11881:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11776:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11787:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11799:6:13",
														"type": ""
													}
												],
												"src": "11729:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12092:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12109:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12120:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12102:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12102:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12102:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12143:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12154:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12139:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12139:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12159:2:13",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12132:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12132:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12132:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12182:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12193:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12178:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12178:18:13"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12198:34:13",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12171:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12171:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12171:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12253:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12264:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12249:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12249:18:13"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12269:16:13",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12242:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12242:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12242:44:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12295:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12307:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12318:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12303:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12303:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12295:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12069:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12083:4:13",
														"type": ""
													}
												],
												"src": "11918:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12507:231:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12524:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12535:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12517:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12517:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12517:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12558:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12569:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12554:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12554:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12574:2:13",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12547:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12547:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12547:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12597:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12608:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12593:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12593:18:13"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12613:34:13",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12586:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12586:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12586:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12668:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12679:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12664:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12664:18:13"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12684:11:13",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12657:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12657:39:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12657:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12705:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12717:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12728:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12713:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12713:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12705:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12484:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12498:4:13",
														"type": ""
													}
												],
												"src": "12333:405:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12917:233:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12934:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12945:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12927:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12927:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12927:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12968:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12979:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12964:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12964:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12984:2:13",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12957:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12957:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12957:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13007:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13018:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13003:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13003:18:13"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13023:34:13",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12996:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12996:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12996:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13078:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13089:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13074:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13074:18:13"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13094:13:13",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13067:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13067:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13067:41:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13117:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13129:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13140:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13125:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13125:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13117:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12894:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12908:4:13",
														"type": ""
													}
												],
												"src": "12743:407:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13329:235:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13346:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13357:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13339:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13339:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13339:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13380:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13391:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13376:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13376:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13396:2:13",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13369:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13369:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13369:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13419:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13430:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13415:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13415:18:13"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13435:34:13",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13408:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13408:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13408:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13490:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13501:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13486:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13486:18:13"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13506:15:13",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13479:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13479:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13479:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13531:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13543:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13554:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13539:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13531:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13306:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13320:4:13",
														"type": ""
													}
												],
												"src": "13155:409:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13743:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13760:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13771:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13753:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13753:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13753:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13794:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13805:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13790:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13790:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13810:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13783:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13783:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13783:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13833:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13844:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13829:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13829:18:13"
																	},
																	{
																		"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13849:34:13",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13822:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13822:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13822:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13904:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13915:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13900:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13900:18:13"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13920:8:13",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13893:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13893:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13893:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13938:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13950:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13961:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13946:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13946:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13938:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13720:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13734:4:13",
														"type": ""
													}
												],
												"src": "13569:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14042:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14052:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14061:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14056:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14121:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "14146:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "14151:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14142:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14142:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "14165:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "14170:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14161:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14161:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "14155:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14155:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14135:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14135:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14135:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14082:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14085:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14079:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14079:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14093:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14095:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "14104:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14107:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14100:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14100:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14095:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14075:3:13",
																"statements": []
															},
															"src": "14071:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14204:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14209:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14200:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14200:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14218:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14193:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14193:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14193:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14020:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14025:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14030:6:13",
														"type": ""
													}
												],
												"src": "13976:250:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14368:150:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14378:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14398:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14392:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14392:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14382:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14453:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14461:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14449:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14449:17:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14468:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14473:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14414:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14414:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14414:66:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14489:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14500:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14505:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14496:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14496:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14489:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14344:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14349:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14360:3:13",
														"type": ""
													}
												],
												"src": "14231:287:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14644:275:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14661:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14672:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14654:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14654:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14654:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14684:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14704:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14698:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14698:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14688:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14731:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14742:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14727:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14727:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14747:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14720:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14720:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14720:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14802:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14810:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14798:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14798:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14819:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14830:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14815:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14815:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14835:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "14763:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14763:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14763:79:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14851:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14867:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "14886:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14894:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "14882:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14882:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14903:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "14899:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14899:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "14878:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14878:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14863:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14863:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14910:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14859:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14859:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14851:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14613:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14624:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14635:4:13",
														"type": ""
													}
												],
												"src": "14523:396:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n        value5 := abi_decode_address(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"not admin\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1211e291a5fc226ff84735b78da6a491026596463c2cdd910d52e39d6bfe3839__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"length error\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1654": [
									{
										"length": 32,
										"start": 3736
									},
									{
										"length": 32,
										"start": 3800
									},
									{
										"length": 32,
										"start": 4348
									},
									{
										"length": 32,
										"start": 4412
									},
									{
										"length": 32,
										"start": 4535
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106102ec575f3560e01c8063602e66231161018b578063602e6623146106d8578063669934a9146106f757806366bf8f8314610716578063698518e5146107355780636b1a9c071461074a578063715018a61461076c57806372765009146107805780637634b0701461079f578063767608e2146107be578063796f838e146107dd578063812df395146107fc57806385adb2941461081b578063863be1ab146108305780638a5705d41461084f5780638da5cb5b146108645780638e10ef0b146108785780638f05cdf51461088d57806395623641146108ac5780639a3135a8146108cb578063b2cf085e146108ed578063c4d66de81461090c578063cde857441461092b578063dbe55e561461094a578063e3d9aa0514610969578063e9d610e514610988578063eb2266bc146109a7578063ee787b11146109c6578063f2fde38b146109db578063f7656704146109fa578063f80183b214610a19578063f97fe09114610a38578063fe6dcdba14610a57578063ff85807914610a7e575f80fd5b8063057d7781146102f057806306394c9b1461032c57806308f93bd81461034d5780630b433a121461036c578063182d326e1461038f57806319a2ef5f146103b05780631e56cfab146103cf5780631e79aa0a146103ee57806321596c251461040f578063254720b714610424578063280e31cc1461046b5780632d8852ee146104965780632f48ab7d146104ab5780633360364d146104ca57806333f5780e146104e957806335aed778146105085780633659cfe61461052757806336e0cac61461054657806339cbc4051461055b5780633b2c2e55146105705780633d08e5b31461058f578063434f9736146105a4578063498c1e3c146105b95780634b0bddd2146105d85780634b21ddec146105f75780634dd40234146106165780634f1ef286146106355780635250c9b51461064857806352d1902d14610667578063570ca7351461067b57806357629f821461069a5780635bff9787146106b9575b5f80fd5b3480156102fb575f80fd5b5061030f61030a366004612492565b610a9d565b6040516001600160a01b0390911681526020015b60405180910390f35b348015610337575f80fd5b5061034b6103463660046124c4565b610ac5565b005b348015610358575f80fd5b5061034b610367366004612492565b610aef565b348015610377575f80fd5b5061038160e35481565b604051908152602001610323565b34801561039a575f80fd5b506103a3610b4e565b604051610323919061251f565b3480156103bb575f80fd5b5061034b6103ca366004612492565b610be1565b3480156103da575f80fd5b5060d45461030f906001600160a01b031681565b3480156103f9575f80fd5b50610402610c37565b604051610323919061255f565b34801561041a575f80fd5b5061038160de5481565b34801561042f575f80fd5b5061045661043e366004612492565b60df6020525f90815260409020805460019091015482565b60408051928352602083019190915201610323565b348015610476575f80fd5b506103816104853660046124c4565b60e06020525f908152604090205481565b3480156104a1575f80fd5b5061038160e25481565b3480156104b6575f80fd5b5060c95461030f906001600160a01b031681565b3480156104d5575f80fd5b5061034b6104e4366004612492565b610d28565b3480156104f4575f80fd5b5061034b610503366004612571565b610d7e565b348015610513575f80fd5b5061034b6105223660046124c4565b610e1b565b348015610532575f80fd5b5061034b6105413660046124c4565b610e8e565b348015610551575f80fd5b5061038160d15481565b348015610566575f80fd5b5061038160dd5481565b34801561057b575f80fd5b5061034b61058a366004612659565b610f55565b34801561059a575f80fd5b5061038160e65481565b3480156105af575f80fd5b5061038160d85481565b3480156105c4575f80fd5b5061034b6105d3366004612492565b61106a565b3480156105e3575f80fd5b5061034b6105f23660046126b8565b6110c0565b348015610602575f80fd5b5060db5461030f906001600160a01b031681565b348015610621575f80fd5b5060cc5461030f906001600160a01b031681565b61034b6106433660046126f1565b6110f2565b348015610653575f80fd5b5060ce5461030f906001600160a01b031681565b348015610672575f80fd5b506103816111ab565b348015610686575f80fd5b5060e45461030f906001600160a01b031681565b3480156106a5575f80fd5b5061034b6106b4366004612571565b611257565b3480156106c4575f80fd5b5060ca5461030f906001600160a01b031681565b3480156106e3575f80fd5b5060cd5461030f906001600160a01b031681565b348015610702575f80fd5b5061034b6107113660046124c4565b61130d565b348015610721575f80fd5b5061034b610730366004612492565b611380565b348015610740575f80fd5b5061038160d25481565b348015610755575f80fd5b5061075e6113d6565b604051610323929190612790565b348015610777575f80fd5b5061034b6114f5565b34801561078b575f80fd5b5061034b61079a366004612492565b611508565b3480156107aa575f80fd5b5061034b6107b9366004612492565b61155e565b3480156107c9575f80fd5b5061034b6107d8366004612492565b6115b4565b3480156107e8575f80fd5b5061034b6107f7366004612492565b61160a565b348015610807575f80fd5b5061034b6108163660046127b4565b611660565b348015610826575f80fd5b5061038160d65481565b34801561083b575f80fd5b5061034b61084a366004612492565b611720565b34801561085a575f80fd5b5061038160d75481565b34801561086f575f80fd5b5061030f611776565b348015610883575f80fd5b5061038160da5481565b348015610898575f80fd5b5060cb5461030f906001600160a01b031681565b3480156108b7575f80fd5b5060d55461030f906001600160a01b031681565b3480156108d6575f80fd5b506108df611785565b604051610323929190612824565b3480156108f8575f80fd5b5060d05461030f906001600160a01b031681565b348015610917575f80fd5b5061034b6109263660046124c4565b611849565b348015610936575f80fd5b5061034b6109453660046124c4565b611c9e565b348015610955575f80fd5b5060cf5461030f906001600160a01b031681565b348015610974575f80fd5b5061034b610983366004612836565b611d11565b348015610993575f80fd5b5060d35461030f906001600160a01b031681565b3480156109b2575f80fd5b5061034b6109c13660046124c4565b611d6d565b3480156109d1575f80fd5b5061038160d95481565b3480156109e6575f80fd5b5061034b6109f53660046124c4565b611de0565b348015610a05575f80fd5b5061034b610a143660046124c4565b611e56565b348015610a24575f80fd5b5061034b610a333660046124c4565b611ec9565b348015610a43575f80fd5b5060dc5461030f906001600160a01b031681565b348015610a62575f80fd5b5061030f73d220b3cf1e4660c5509418b42a86d7945e6e2e1881565b348015610a89575f80fd5b5061034b610a983660046124c4565b611f3c565b60e18181548110610aac575f80fd5b5f918252602090912001546001600160a01b0316905081565b610acd611faf565b60e480546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff1680610b245750610b0f611776565b6001600160a01b0316336001600160a01b0316145b610b495760405162461bcd60e51b8152600401610b4090612856565b60405180910390fd5b60d255565b6040805160028082526060808301845292602083019080368337505060db5482519293506001600160a01b0316918391505f90610b8d57610b8d612879565b6001600160a01b03928316602091820292909201015260dc54825191169082906001908110610bbe57610bbe612879565b60200260200101906001600160a01b031690816001600160a01b03168152505090565b335f90815260e5602052604090205460ff1680610c165750610c01611776565b6001600160a01b0316336001600160a01b0316145b610c325760405162461bcd60e51b8152600401610b4090612856565b60dd55565b60408051600680825260e082019092526060916020820160c08036833701905050905060d754815f81518110610c6f57610c6f612879565b60200260200101818152505060d85481600181518110610c9157610c91612879565b60200260200101818152505060d95481600281518110610cb357610cb3612879565b60200260200101818152505060da5481600381518110610cd557610cd5612879565b60200260200101818152505060dd5481600481518110610cf757610cf7612879565b60200260200101818152505060de5481600581518110610d1957610d19612879565b60200260200101818152505090565b335f90815260e5602052604090205460ff1680610d5d5750610d48611776565b6001600160a01b0316336001600160a01b0316145b610d795760405162461bcd60e51b8152600401610b4090612856565b60d655565b335f90815260e5602052604090205460ff1680610db35750610d9e611776565b6001600160a01b0316336001600160a01b0316145b610dcf5760405162461bcd60e51b8152600401610b4090612856565b6001600160a01b039091165f81815260e0602052604081209290925560e1805460018101825592525f80516020612a5c83398151915290910180546001600160a01b0319169091179055565b335f90815260e5602052604090205460ff1680610e505750610e3b611776565b6001600160a01b0316336001600160a01b0316145b610e6c5760405162461bcd60e51b8152600401610b4090612856565b60d580546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610ed65760405162461bcd60e51b8152600401610b409061288d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f0861200e565b6001600160a01b031614610f2e5760405162461bcd60e51b8152600401610b40906128c6565b610f3781612029565b604080515f80825260208201909252610f5291839190612031565b50565b335f90815260e5602052604090205460ff1680610f8a5750610f75611776565b6001600160a01b0316336001600160a01b0316145b610fa65760405162461bcd60e51b8152600401610b4090612856565b8051825114610fe65760405162461bcd60e51b815260206004820152600c60248201526b3632b733ba341032b93937b960a11b6044820152606401610b40565b5f5b825181101561106557604051806040016040528084838151811061100e5761100e612879565b6020026020010151815260200183838151811061102d5761102d612879565b6020908102919091018101519091525f83815260df8252604090208251815591015160019091015561105e816128ff565b9050610fe8565b505050565b335f90815260e5602052604090205460ff168061109f575061108a611776565b6001600160a01b0316336001600160a01b0316145b6110bb5760405162461bcd60e51b8152600401610b4090612856565b60d955565b6110c8611faf565b6001600160a01b03919091165f90815260e560205260409020805460ff1916911515919091179055565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361113a5760405162461bcd60e51b8152600401610b409061288d565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661116c61200e565b6001600160a01b0316146111925760405162461bcd60e51b8152600401610b40906128c6565b61119b82612029565b6111a782826001612031565b5050565b5f306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146112455760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610b40565b505f80516020612a1583398151915290565b335f90815260e5602052604090205460ff168061128c5750611277611776565b6001600160a01b0316336001600160a01b0316145b6112a85760405162461bcd60e51b8152600401610b4090612856565b60cc54604051632bb14fc160e11b81526001600160a01b03848116600483015260248201849052909116906357629f82906044015f604051808303815f87803b1580156112f3575f80fd5b505af1158015611305573d5f803e3d5ffd5b505050505050565b335f90815260e5602052604090205460ff1680611342575061132d611776565b6001600160a01b0316336001600160a01b0316145b61135e5760405162461bcd60e51b8152600401610b4090612856565b60d480546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff16806113b557506113a0611776565b6001600160a01b0316336001600160a01b0316145b6113d15760405162461bcd60e51b8152600401610b4090612856565b60de55565b60608060e180548060200260200160405190810160405280929190818152602001828054801561142d57602002820191905f5260205f20905b81546001600160a01b0316815260019091019060200180831161140f575b5050505050915081516001600160401b0381111561144d5761144d612599565b604051908082528060200260200182016040528015611476578160200160208202803683370190505b5090505f5b82518110156114f05760e05f84838151811061149957611499612879565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f20548282815181106114d3576114d3612879565b6020908102919091010152806114e8816128ff565b91505061147b565b509091565b6114fd611faf565b6115065f61219b565b565b335f90815260e5602052604090205460ff168061153d5750611528611776565b6001600160a01b0316336001600160a01b0316145b6115595760405162461bcd60e51b8152600401610b4090612856565b60d155565b335f90815260e5602052604090205460ff1680611593575061157e611776565b6001600160a01b0316336001600160a01b0316145b6115af5760405162461bcd60e51b8152600401610b4090612856565b60e255565b335f90815260e5602052604090205460ff16806115e957506115d4611776565b6001600160a01b0316336001600160a01b0316145b6116055760405162461bcd60e51b8152600401610b4090612856565b60e655565b335f90815260e5602052604090205460ff168061163f575061162a611776565b6001600160a01b0316336001600160a01b0316145b61165b5760405162461bcd60e51b8152600401610b4090612856565b60e355565b335f90815260e5602052604090205460ff16806116955750611680611776565b6001600160a01b0316336001600160a01b0316145b6116b15760405162461bcd60e51b8152600401610b4090612856565b60c980546001600160a01b03199081166001600160a01b039889161790915560cb805482169688169690961790955560ca805486169487169490941790935560cd805485169286169290921790915560cc8054841691851691909117905560ce80549092169216919091179055565b335f90815260e5602052604090205460ff16806117555750611740611776565b6001600160a01b0316336001600160a01b0316145b6117715760405162461bcd60e51b8152600401610b4090612856565b60da55565b6033546001600160a01b031690565b60408051600480825260a0820190925260609182919060208201608080368337505060408051600480825260a082019092529294509050602082016080803683370190505090505f5b60048110156114f0575f81815260df602052604090205483518490839081106117f9576117f9612879565b60200260200101818152505060df5f8281526020019081526020015f206001015482828151811061182c5761182c612879565b602090810291909101015280611841816128ff565b9150506117ce565b5f54610100900460ff161580801561186757505f54600160ff909116105b806118875750611876306121ec565b15801561188757505f5460ff166001145b6118ea5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b40565b5f805460ff19166001179055801561190b575f805461ff0019166101001790555b6119136121fb565b60e480546001600160a01b0384166001600160a01b03199182161790915560cf8054821673df9228fc02f4554cd80af6d036dade242022e4f217905560d080548216734076af4556458cdd0ad25e86ed23b4dc8437dce417905561038460d1556103e860d25560d38054821673fae25f1ae4b758d7c96d7eb075b62af4f3398b8917905560d480548216737fba7858083836d9169eb3be21a48189e1798c8e17905560d580548216732737ac6359664096f22863088246d885f14e6ff29081179091556801158e460913d0000060d65569014542ba12a337c0000060e655609660d755606460d881905560d981905560da5560db80548316909117905560dc8054821673b36f6361dcf31d0d7956e9e826a9915a5ddec272179055603260dd5569043c33c193756480000060de556040805180820182525f808252602080830182815282805260df80835293517f4b917336ba36fefa23b90074e126fe5413f0e3fc800e7ab1da217d9a2807b71155517f4b917336ba36fefa23b90074e126fe5413f0e3fc800e7ab1da217d9a2807b712558351808501855269021e19e0c9bab2400000815260c8818301908152600180855285845291517f55c38c42e971eeb957b61422467f67fa3b212021ac50a6b2b3d5acd9d01cb97d55517f55c38c42e971eeb957b61422467f67fa3b212021ac50a6b2b3d5acd9d01cb97e558451808601865269065a4da25d3016c00000815261015e8184019081526002855285845290517f36d20378f308040d39a8a5e0299048c5eb6a3e2af0aad6fc5cbd63dba6084c7555517f36d20378f308040d39a8a5e0299048c5eb6a3e2af0aad6fc5cbd63dba6084c7655845180860190955269152d02c7e14af680000085526101f4858301908152600380855294835294517f780609eda5e52d7936e75ead8ec77fc018859646a90304d10fb581006956b09e5593517f780609eda5e52d7936e75ead8ec77fc018859646a90304d10fb581006956b09f5560e090527f29f40cf27a854b63617043f10b660b0f327b8234f55a91e6b6f6e8a2fa39678b9190915560e18054928301815590525f80516020612a5c83398151915201805490911673d220b3cf1e4660c5509418b42a86d7945e6e2e181790556301e1338060e255603c60e35580156111a7575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b335f90815260e5602052604090205460ff1680611cd35750611cbe611776565b6001600160a01b0316336001600160a01b0316145b611cef5760405162461bcd60e51b8152600401610b4090612856565b60cf80546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff1680611d465750611d31611776565b6001600160a01b0316336001600160a01b0316145b611d625760405162461bcd60e51b8152600401610b4090612856565b60d79190915560d855565b335f90815260e5602052604090205460ff1680611da25750611d8d611776565b6001600160a01b0316336001600160a01b0316145b611dbe5760405162461bcd60e51b8152600401610b4090612856565b60dc80546001600160a01b0319166001600160a01b0392909216919091179055565b611de8611faf565b6001600160a01b038116611e4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b40565b610f528161219b565b335f90815260e5602052604090205460ff1680611e8b5750611e76611776565b6001600160a01b0316336001600160a01b0316145b611ea75760405162461bcd60e51b8152600401610b4090612856565b60d080546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff1680611efe5750611ee9611776565b6001600160a01b0316336001600160a01b0316145b611f1a5760405162461bcd60e51b8152600401610b4090612856565b60d380546001600160a01b0319166001600160a01b0392909216919091179055565b335f90815260e5602052604090205460ff1680611f715750611f5c611776565b6001600160a01b0316336001600160a01b0316145b611f8d5760405162461bcd60e51b8152600401610b4090612856565b60db80546001600160a01b0319166001600160a01b0392909216919091179055565b33611fb8611776565b6001600160a01b0316146115065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b40565b5f80516020612a15833981519152546001600160a01b031690565b610f52611faf565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156120645761106583612229565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156120be575060408051601f3d908101601f191682019092526120bb91810190612923565b60015b6121215760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610b40565b5f80516020612a15833981519152811461218f5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610b40565b506110658383836122c2565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03163b151590565b5f54610100900460ff166122215760405162461bcd60e51b8152600401610b409061293a565b6115066122ec565b612232816121ec565b6122945760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610b40565b5f80516020612a1583398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6122cb8361231b565b5f825111806122d75750805b15611065576122e6838361235a565b50505050565b5f54610100900460ff166123125760405162461bcd60e51b8152600401610b409061293a565b6115063361219b565b61232481612229565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b6060612365836121ec565b6123c05760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610b40565b5f80846001600160a01b0316846040516123da91906129a7565b5f60405180830381855af49150503d805f8114612412576040519150601f19603f3d011682016040523d82523d5f602084013e612417565b606091505b509150915061243f8282604051806060016040528060278152602001612a3560279139612448565b95945050505050565b60608315612457575081612461565b6124618383612468565b9392505050565b8151156124785781518083602001fd5b8060405162461bcd60e51b8152600401610b4091906129c2565b5f602082840312156124a2575f80fd5b5035919050565b80356001600160a01b03811681146124bf575f80fd5b919050565b5f602082840312156124d4575f80fd5b612461826124a9565b5f8151808452602080850194508084015f5b838110156125145781516001600160a01b0316875295820195908201906001016124ef565b509495945050505050565b602081525f61246160208301846124dd565b5f8151808452602080850194508084015f5b8381101561251457815187529582019590820190600101612543565b602081525f6124616020830184612531565b5f8060408385031215612582575f80fd5b61258b836124a9565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b03811182821017156125d5576125d5612599565b604052919050565b5f82601f8301126125ec575f80fd5b813560206001600160401b0382111561260757612607612599565b8160051b6126168282016125ad565b928352848101820192828101908785111561262f575f80fd5b83870192505b8483101561264e57823582529183019190830190612635565b979650505050505050565b5f806040838503121561266a575f80fd5b82356001600160401b0380821115612680575f80fd5b61268c868387016125dd565b935060208501359150808211156126a1575f80fd5b506126ae858286016125dd565b9150509250929050565b5f80604083850312156126c9575f80fd5b6126d2836124a9565b9150602083013580151581146126e6575f80fd5b809150509250929050565b5f8060408385031215612702575f80fd5b61270b836124a9565b91506020838101356001600160401b0380821115612727575f80fd5b818601915086601f83011261273a575f80fd5b81358181111561274c5761274c612599565b61275e601f8201601f191685016125ad565b91508082528784828501011115612773575f80fd5b80848401858401375f848284010152508093505050509250929050565b604081525f6127a260408301856124dd565b828103602084015261243f8185612531565b5f805f805f8060c087890312156127c9575f80fd5b6127d2876124a9565b95506127e0602088016124a9565b94506127ee604088016124a9565b93506127fc606088016124a9565b925061280a608088016124a9565b915061281860a088016124a9565b90509295509295509295565b604081525f6127a26040830185612531565b5f8060408385031215612847575f80fd5b50508035926020909101359150565b6020808252600990820152683737ba1030b236b4b760b91b604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b6020808252602c908201525f805160206129f583398151915260408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201525f805160206129f583398151915260408201526b6163746976652070726f787960a01b606082015260800190565b5f6001820161291c57634e487b7160e01b5f52601160045260245ffd5b5060010190565b5f60208284031215612933575f80fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f5b8381101561299f578181015183820152602001612987565b50505f910152565b5f82516129b8818460208701612985565b9190910192915050565b602081525f82518060208401526129e0816040850160208701612985565b601f01601f1916919091016040019291505056fe46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c65643efdd7a884ff9e18c9e5711c185aa6c5e413b68f23197997da5b1665ca978f99a26469706673582212209fb3eef1a7e8dfd481c6fe090fec9d605b631080bf75fee713d3f374a9a0c71c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2EC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x602E6623 GT PUSH2 0x18B JUMPI DUP1 PUSH4 0x602E6623 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0x669934A9 EQ PUSH2 0x6F7 JUMPI DUP1 PUSH4 0x66BF8F83 EQ PUSH2 0x716 JUMPI DUP1 PUSH4 0x698518E5 EQ PUSH2 0x735 JUMPI DUP1 PUSH4 0x6B1A9C07 EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x76C JUMPI DUP1 PUSH4 0x72765009 EQ PUSH2 0x780 JUMPI DUP1 PUSH4 0x7634B070 EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0x767608E2 EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0x796F838E EQ PUSH2 0x7DD JUMPI DUP1 PUSH4 0x812DF395 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0x85ADB294 EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0x863BE1AB EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0x8A5705D4 EQ PUSH2 0x84F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x864 JUMPI DUP1 PUSH4 0x8E10EF0B EQ PUSH2 0x878 JUMPI DUP1 PUSH4 0x8F05CDF5 EQ PUSH2 0x88D JUMPI DUP1 PUSH4 0x95623641 EQ PUSH2 0x8AC JUMPI DUP1 PUSH4 0x9A3135A8 EQ PUSH2 0x8CB JUMPI DUP1 PUSH4 0xB2CF085E EQ PUSH2 0x8ED JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x90C JUMPI DUP1 PUSH4 0xCDE85744 EQ PUSH2 0x92B JUMPI DUP1 PUSH4 0xDBE55E56 EQ PUSH2 0x94A JUMPI DUP1 PUSH4 0xE3D9AA05 EQ PUSH2 0x969 JUMPI DUP1 PUSH4 0xE9D610E5 EQ PUSH2 0x988 JUMPI DUP1 PUSH4 0xEB2266BC EQ PUSH2 0x9A7 JUMPI DUP1 PUSH4 0xEE787B11 EQ PUSH2 0x9C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x9DB JUMPI DUP1 PUSH4 0xF7656704 EQ PUSH2 0x9FA JUMPI DUP1 PUSH4 0xF80183B2 EQ PUSH2 0xA19 JUMPI DUP1 PUSH4 0xF97FE091 EQ PUSH2 0xA38 JUMPI DUP1 PUSH4 0xFE6DCDBA EQ PUSH2 0xA57 JUMPI DUP1 PUSH4 0xFF858079 EQ PUSH2 0xA7E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x57D7781 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x6394C9B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8F93BD8 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xB433A12 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x182D326E EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x19A2EF5F EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x1E56CFAB EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x1E79AA0A EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x21596C25 EQ PUSH2 0x40F JUMPI DUP1 PUSH4 0x254720B7 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x280E31CC EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x2D8852EE EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x3360364D EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0x33F5780E EQ PUSH2 0x4E9 JUMPI DUP1 PUSH4 0x35AED778 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x36E0CAC6 EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x39CBC405 EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x3B2C2E55 EQ PUSH2 0x570 JUMPI DUP1 PUSH4 0x3D08E5B3 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0x434F9736 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x498C1E3C EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x4B0BDDD2 EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0x4B21DDEC EQ PUSH2 0x5F7 JUMPI DUP1 PUSH4 0x4DD40234 EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x635 JUMPI DUP1 PUSH4 0x5250C9B5 EQ PUSH2 0x648 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x67B JUMPI DUP1 PUSH4 0x57629F82 EQ PUSH2 0x69A JUMPI DUP1 PUSH4 0x5BFF9787 EQ PUSH2 0x6B9 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x30A CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x358 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xAEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xE3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x323 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH2 0xB4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xBE1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD4 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x402 PUSH2 0xC37 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x255F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xDE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x456 PUSH2 0x43E CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0xDF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x323 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x476 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH1 0xE0 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xE2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x4E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x503 CALLDATASIZE PUSH1 0x4 PUSH2 0x2571 JUMP JUMPDEST PUSH2 0xD7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0xE8E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xDD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x2659 JUMP JUMPDEST PUSH2 0xF55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xE6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x5D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x106A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x5F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B8 JUMP JUMPDEST PUSH2 0x10C0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xDB SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x34B PUSH2 0x643 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F1 JUMP JUMPDEST PUSH2 0x10F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x653 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCE SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x672 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH2 0x11AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x686 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE4 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x6B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2571 JUMP JUMPDEST PUSH2 0x1257 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x702 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x711 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x721 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x730 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1380 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x740 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x755 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x75E PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP3 SWAP2 SWAP1 PUSH2 0x2790 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x777 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x14F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x79A CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1508 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x7B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x155E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x7D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x15B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x7F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x160A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x807 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x816 CALLDATASIZE PUSH1 0x4 PUSH2 0x27B4 JUMP JUMPDEST PUSH2 0x1660 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x84A CALLDATASIZE PUSH1 0x4 PUSH2 0x2492 JUMP JUMPDEST PUSH2 0x1720 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x85A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH2 0x1776 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x883 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xDA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x898 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCB SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD5 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8DF PUSH2 0x1785 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP3 SWAP2 SWAP1 PUSH2 0x2824 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD0 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x917 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x926 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1849 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x936 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x945 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1C9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x955 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x974 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x983 CALLDATASIZE PUSH1 0x4 PUSH2 0x2836 JUMP JUMPDEST PUSH2 0x1D11 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x993 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xD3 SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x9C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1D6D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x381 PUSH1 0xD9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0x9F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1DE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA05 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0xA14 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1E56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA24 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0xA33 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1EC9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA43 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xDC SLOAD PUSH2 0x30F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x30F PUSH20 0xD220B3CF1E4660C5509418B42A86D7945E6E2E18 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA89 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x34B PUSH2 0xA98 CALLDATASIZE PUSH1 0x4 PUSH2 0x24C4 JUMP JUMPDEST PUSH2 0x1F3C JUMP JUMPDEST PUSH1 0xE1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAAC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xACD PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0xE4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xB24 JUMPI POP PUSH2 0xB0F PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xB49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD2 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP1 DUP4 ADD DUP5 MSTORE SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0xDB SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH0 SWAP1 PUSH2 0xB8D JUMPI PUSH2 0xB8D PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0xDC SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xBBE JUMPI PUSH2 0xBBE PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xC16 JUMPI POP PUSH2 0xC01 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xC32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDD SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xC0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0xD7 SLOAD DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xC6F JUMPI PUSH2 0xC6F PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xD8 SLOAD DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC91 JUMPI PUSH2 0xC91 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xD9 SLOAD DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH2 0xCB3 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xDA SLOAD DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0xCD5 JUMPI PUSH2 0xCD5 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xDD SLOAD DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0xCF7 JUMPI PUSH2 0xCF7 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xDE SLOAD DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0xD19 JUMPI PUSH2 0xD19 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xD5D JUMPI POP PUSH2 0xD48 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xD79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD6 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xDB3 JUMPI POP PUSH2 0xD9E PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xDCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xE1 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xE50 JUMPI POP PUSH2 0xE3B PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0xED6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF08 PUSH2 0x200E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH2 0xF37 DUP2 PUSH2 0x2029 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xF52 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x2031 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0xF8A JUMPI POP PUSH2 0xF75 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0xFA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xFE6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x3632B733BA341032B93937B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1065 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x100E JUMPI PUSH2 0x100E PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x102D JUMPI PUSH2 0x102D PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD SWAP1 SWAP2 MSTORE PUSH0 DUP4 DUP2 MSTORE PUSH1 0xDF DUP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH2 0x105E DUP2 PUSH2 0x28FF JUMP JUMPDEST SWAP1 POP PUSH2 0xFE8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x109F JUMPI POP PUSH2 0x108A PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x10BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD9 SSTORE JUMP JUMPDEST PUSH2 0x10C8 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x116C PUSH2 0x200E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1192 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH2 0x119B DUP3 PUSH2 0x2029 JUMP JUMPDEST PUSH2 0x11A7 DUP3 DUP3 PUSH1 0x1 PUSH2 0x2031 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH24 0x1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B PUSH1 0x42 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x128C JUMPI POP PUSH2 0x1277 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BB14FC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x57629F82 SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1305 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1342 JUMPI POP PUSH2 0x132D PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x13B5 JUMPI POP PUSH2 0x13A0 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x13D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDE SSTORE JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0xE1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x142D JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x140F JUMPI JUMPDEST POP POP POP POP POP SWAP2 POP DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x144D JUMPI PUSH2 0x144D PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1476 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x14F0 JUMPI PUSH1 0xE0 PUSH0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1499 JUMPI PUSH2 0x1499 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14D3 JUMPI PUSH2 0x14D3 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x14E8 DUP2 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x147B JUMP JUMPDEST POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x14FD PUSH2 0x1FAF JUMP JUMPDEST PUSH2 0x1506 PUSH0 PUSH2 0x219B JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x153D JUMPI POP PUSH2 0x1528 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1559 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1593 JUMPI POP PUSH2 0x157E PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x15AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xE2 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x15E9 JUMPI POP PUSH2 0x15D4 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1605 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xE6 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x163F JUMPI POP PUSH2 0x162A PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x165B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xE3 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1695 JUMPI POP PUSH2 0x1680 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x16B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xCB DUP1 SLOAD DUP3 AND SWAP7 DUP9 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP6 SSTORE PUSH1 0xCA DUP1 SLOAD DUP7 AND SWAP5 DUP8 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0xCD DUP1 SLOAD DUP6 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xCC DUP1 SLOAD DUP5 AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xCE DUP1 SLOAD SWAP1 SWAP3 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1755 JUMPI POP PUSH2 0x1740 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1771 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDA SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x80 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x4 DUP1 DUP3 MSTORE PUSH1 0xA0 DUP3 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 POP PUSH1 0x20 DUP3 ADD PUSH1 0x80 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x14F0 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0xDF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 MLOAD DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x17F9 JUMPI PUSH2 0x17F9 PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0xDF PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x182C JUMPI PUSH2 0x182C PUSH2 0x2879 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x1841 DUP2 PUSH2 0x28FF JUMP JUMPDEST SWAP2 POP POP PUSH2 0x17CE JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x1867 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x1887 JUMPI POP PUSH2 0x1876 ADDRESS PUSH2 0x21EC JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0x1887 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x18EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x190B JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1913 PUSH2 0x21FB JUMP JUMPDEST PUSH1 0xE4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xCF DUP1 SLOAD DUP3 AND PUSH20 0xDF9228FC02F4554CD80AF6D036DADE242022E4F2 OR SWAP1 SSTORE PUSH1 0xD0 DUP1 SLOAD DUP3 AND PUSH20 0x4076AF4556458CDD0AD25E86ED23B4DC8437DCE4 OR SWAP1 SSTORE PUSH2 0x384 PUSH1 0xD1 SSTORE PUSH2 0x3E8 PUSH1 0xD2 SSTORE PUSH1 0xD3 DUP1 SLOAD DUP3 AND PUSH20 0xFAE25F1AE4B758D7C96D7EB075B62AF4F3398B89 OR SWAP1 SSTORE PUSH1 0xD4 DUP1 SLOAD DUP3 AND PUSH20 0x7FBA7858083836D9169EB3BE21A48189E1798C8E OR SWAP1 SSTORE PUSH1 0xD5 DUP1 SLOAD DUP3 AND PUSH20 0x2737AC6359664096F22863088246D885F14E6FF2 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH9 0x1158E460913D00000 PUSH1 0xD6 SSTORE PUSH10 0x14542BA12A337C00000 PUSH1 0xE6 SSTORE PUSH1 0x96 PUSH1 0xD7 SSTORE PUSH1 0x64 PUSH1 0xD8 DUP2 SWAP1 SSTORE PUSH1 0xD9 DUP2 SWAP1 SSTORE PUSH1 0xDA SSTORE PUSH1 0xDB DUP1 SLOAD DUP4 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xDC DUP1 SLOAD DUP3 AND PUSH20 0xB36F6361DCF31D0D7956E9E826A9915A5DDEC272 OR SWAP1 SSTORE PUSH1 0x32 PUSH1 0xDD SSTORE PUSH10 0x43C33C1937564800000 PUSH1 0xDE SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE DUP3 DUP1 MSTORE PUSH1 0xDF DUP1 DUP4 MSTORE SWAP4 MLOAD PUSH32 0x4B917336BA36FEFA23B90074E126FE5413F0E3FC800E7AB1DA217D9A2807B711 SSTORE MLOAD PUSH32 0x4B917336BA36FEFA23B90074E126FE5413F0E3FC800E7AB1DA217D9A2807B712 SSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH10 0x21E19E0C9BAB2400000 DUP2 MSTORE PUSH1 0xC8 DUP2 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 DUP1 DUP6 MSTORE DUP6 DUP5 MSTORE SWAP2 MLOAD PUSH32 0x55C38C42E971EEB957B61422467F67FA3B212021AC50A6B2B3D5ACD9D01CB97D SSTORE MLOAD PUSH32 0x55C38C42E971EEB957B61422467F67FA3B212021AC50A6B2B3D5ACD9D01CB97E SSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH10 0x65A4DA25D3016C00000 DUP2 MSTORE PUSH2 0x15E DUP2 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE DUP6 DUP5 MSTORE SWAP1 MLOAD PUSH32 0x36D20378F308040D39A8A5E0299048C5EB6A3E2AF0AAD6FC5CBD63DBA6084C75 SSTORE MLOAD PUSH32 0x36D20378F308040D39A8A5E0299048C5EB6A3E2AF0AAD6FC5CBD63DBA6084C76 SSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH10 0x152D02C7E14AF6800000 DUP6 MSTORE PUSH2 0x1F4 DUP6 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP1 DUP6 MSTORE SWAP5 DUP4 MSTORE SWAP5 MLOAD PUSH32 0x780609EDA5E52D7936E75EAD8EC77FC018859646A90304D10FB581006956B09E SSTORE SWAP4 MLOAD PUSH32 0x780609EDA5E52D7936E75EAD8EC77FC018859646A90304D10FB581006956B09F SSTORE PUSH1 0xE0 SWAP1 MSTORE PUSH32 0x29F40CF27A854B63617043F10B660B0F327B8234F55A91E6B6F6E8A2FA39678B SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xE1 DUP1 SLOAD SWAP3 DUP4 ADD DUP2 SSTORE SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A5C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD DUP1 SLOAD SWAP1 SWAP2 AND PUSH20 0xD220B3CF1E4660C5509418B42A86D7945E6E2E18 OR SWAP1 SSTORE PUSH4 0x1E13380 PUSH1 0xE2 SSTORE PUSH1 0x3C PUSH1 0xE3 SSTORE DUP1 ISZERO PUSH2 0x11A7 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1CD3 JUMPI POP PUSH2 0x1CBE PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1CEF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xCF DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1D46 JUMPI POP PUSH2 0x1D31 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1D62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xD8 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1DA2 JUMPI POP PUSH2 0x1D8D PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1DBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1DE8 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH2 0xF52 DUP2 PUSH2 0x219B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1E8B JUMPI POP PUSH2 0x1E76 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1EA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1EFE JUMPI POP PUSH2 0x1EE9 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xD3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x1F71 JUMPI POP PUSH2 0x1F5C PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1F8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0xDB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH2 0x1FB8 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0xF52 PUSH2 0x1FAF JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2064 JUMPI PUSH2 0x1065 DUP4 PUSH2 0x2229 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x20BE JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x20BB SWAP2 DUP2 ADD SWAP1 PUSH2 0x2923 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2121 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x218F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST POP PUSH2 0x1065 DUP4 DUP4 DUP4 PUSH2 0x22C2 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2221 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH2 0x1506 PUSH2 0x22EC JUMP JUMPDEST PUSH2 0x2232 DUP2 PUSH2 0x21EC JUMP JUMPDEST PUSH2 0x2294 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A15 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x22CB DUP4 PUSH2 0x231B JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x22D7 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1065 JUMPI PUSH2 0x22E6 DUP4 DUP4 PUSH2 0x235A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP1 PUSH2 0x293A JUMP JUMPDEST PUSH2 0x1506 CALLER PUSH2 0x219B JUMP JUMPDEST PUSH2 0x2324 DUP2 PUSH2 0x2229 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2365 DUP4 PUSH2 0x21EC JUMP JUMPDEST PUSH2 0x23C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB40 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x23DA SWAP2 SWAP1 PUSH2 0x29A7 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2412 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2417 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x243F DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2A35 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x2448 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2457 JUMPI POP DUP2 PUSH2 0x2461 JUMP JUMPDEST PUSH2 0x2461 DUP4 DUP4 PUSH2 0x2468 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2478 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x29C2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x24BF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2461 DUP3 PUSH2 0x24A9 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2514 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x24EF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x2461 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x24DD JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2514 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2543 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x2461 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2531 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2582 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x258B DUP4 PUSH2 0x24A9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x25D5 JUMPI PUSH2 0x25D5 PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x25EC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x2607 JUMPI PUSH2 0x2607 PUSH2 0x2599 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x2616 DUP3 DUP3 ADD PUSH2 0x25AD JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x262F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x264E JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x2635 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x266A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2680 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x268C DUP7 DUP4 DUP8 ADD PUSH2 0x25DD JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x26A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26AE DUP6 DUP3 DUP7 ADD PUSH2 0x25DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26D2 DUP4 PUSH2 0x24A9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x26E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2702 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x270B DUP4 PUSH2 0x24A9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2727 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x273A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x274C JUMPI PUSH2 0x274C PUSH2 0x2599 JUMP JUMPDEST PUSH2 0x275E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x25AD JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP8 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2773 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY PUSH0 DUP5 DUP3 DUP5 ADD ADD MSTORE POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x27A2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x24DD JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x243F DUP2 DUP6 PUSH2 0x2531 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x27C9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27D2 DUP8 PUSH2 0x24A9 JUMP JUMPDEST SWAP6 POP PUSH2 0x27E0 PUSH1 0x20 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP5 POP PUSH2 0x27EE PUSH1 0x40 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x27FC PUSH1 0x60 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP3 POP PUSH2 0x280A PUSH1 0x80 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP2 POP PUSH2 0x2818 PUSH1 0xA0 DUP9 ADD PUSH2 0x24A9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x27A2 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2531 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2847 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH9 0x3737BA1030B236B4B7 PUSH1 0xB9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29F5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29F5 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x291C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2933 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x299F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2987 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x29B8 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2985 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x29E0 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2985 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID CHAINID PUSH22 0x6E6374696F6E206D7573742062652063616C6C656420 PUSH21 0x68726F75676820360894A13BA1A3210667C828492D 0xB9 DUP14 0xCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x65643EFDD7A884FF9E18C9E571 SHR XOR GAS 0xA6 0xC5 0xE4 SGT 0xB6 DUP16 0x23 NOT PUSH26 0x97DA5B1665CA978F99A26469706673582212209FB3EEF1A7E8DF 0xD4 DUP2 0xC6 INVALID MULMOD 0xF 0xEC SWAP14 PUSH1 0x5B PUSH4 0x1080BF75 INVALID 0xE7 SGT 0xD3 RETURN PUSH21 0xA9A0C71C64736F6C63430008140033000000000000 ",
							"sourceMap": "513:7876:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1685:24;;;;;;;;;;-1:-1:-1;1685:24:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;363:32:13;;;345:51;;333:2;318:18;1685:24:0;;;;;;;;4864:99;;;;;;;;;;-1:-1:-1;4864:99:0;;;;;:::i;:::-;;:::i;:::-;;8158:100;;;;;;;;;;-1:-1:-1;8158:100:0;;;;;:::i;:::-;;:::i;1757:28::-;;;;;;;;;;;;;;;;;;;922:25:13;;;910:2;895:18;1757:28:0;776:177:13;4251:210:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;6284:151::-;;;;;;;;;;-1:-1:-1;6284:151:0;;;;;:::i;:::-;;:::i;1090:26::-;;;;;;;;;;-1:-1:-1;1090:26:0;;;;-1:-1:-1;;;;;1090:26:0;;;3892:351;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;1542:34::-;;;;;;;;;;;;;;;;1585:42;;;;;;;;;;-1:-1:-1;1585:42:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2570:25:13;;;2626:2;2611:18;;2604:34;;;;2543:18;1585:42:0;2396:248:13;1634:44:0;;;;;;;;;;-1:-1:-1;1634:44:0;;;;;:::i;:::-;;;;;;;;;;;;;;1718:32;;;;;;;;;;;;;;;;656:19;;;;;;;;;;-1:-1:-1;656:19:0;;;;-1:-1:-1;;;;;656:19:0;;;7178:136;;;;;;;;;;-1:-1:-1;7178:136:0;;;;;:::i;:::-;;:::i;5117:143::-;;;;;;;;;;-1:-1:-1;5117:143:0;;;;;:::i;:::-;;:::i;7738:120::-;;;;;;;;;;-1:-1:-1;7738:120:0;;;;;:::i;:::-;;:::i;3317:197:8:-;;;;;;;;;;-1:-1:-1;3317:197:8;;;;;:::i;:::-;;:::i;902:27:0:-;;;;;;;;;;;;;;;;1484:36;;;;;;;;;;;;;;;;5838:287;;;;;;;;;;-1:-1:-1;5838:287:0;;;;;:::i;:::-;;:::i;1865:32::-;;;;;;;;;;;;;;;;1254:31;;;;;;;;;;;;;;;;6854:143;;;;;;;;;;-1:-1:-1;6854:143:0;;;;;:::i;:::-;;:::i;4760:96::-;;;;;;;;;;-1:-1:-1;4760:96:0;;;;;:::i;:::-;;:::i;1405:32::-;;;;;;;;;;-1:-1:-1;1405:32:0;;;;-1:-1:-1;;;;;1405:32:0;;;731:22;;;;;;;;;;-1:-1:-1;731:22:0;;;;-1:-1:-1;;;;;731:22:0;;;3763:222:8;;;;;;:::i;:::-;;:::i;790:22:0:-;;;;;;;;;;-1:-1:-1;790:22:0;;;;-1:-1:-1;;;;;790:22:0;;;3006:131:8;;;;;;;;;;;;;:::i;1794:23:0:-;;;;;;;;;;-1:-1:-1;1794:23:0;;;;-1:-1:-1;;;;;1794:23:0;;;4973:136;;;;;;;;;;-1:-1:-1;4973:136:0;;;;;:::i;:::-;;:::i;682:18::-;;;;;;;;;;-1:-1:-1;682:18:0;;;;-1:-1:-1;;;;;682:18:0;;;760:23;;;;;;;;;;-1:-1:-1;760:23:0;;;;-1:-1:-1;;;;;760:23:0;;;7618:112;;;;;;;;;;-1:-1:-1;7618:112:0;;;;;:::i;:::-;;:::i;6133:143::-;;;;;;;;;;-1:-1:-1;6133:143:0;;;;;:::i;:::-;;:::i;994:23::-;;;;;;;;;;;;;;;;4469:283;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;2071:101:2:-;;;;;;;;;;;;;:::i;8266:116:0:-;;;;;;;;;;-1:-1:-1;8266:116:0;;;;;:::i;:::-;;:::i;5568:135::-;;;;;;;;;;-1:-1:-1;5568:135:0;;;;;:::i;:::-;;:::i;7322:136::-;;;;;;;;;;-1:-1:-1;7322:136:0;;;;;:::i;:::-;;:::i;5711:119::-;;;;;;;;;;-1:-1:-1;5711:119:0;;;;;:::i;:::-;;:::i;5268:288::-;;;;;;;;;;-1:-1:-1;5268:288:0;;;;;:::i;:::-;;:::i;1160:32::-;;;;;;;;;;;;;;;;6725:123;;;;;;;;;;-1:-1:-1;6725:123:0;;;;;:::i;:::-;;:::i;1199:31::-;;;;;;;;;;;;;;;;1441:85:2;;;;;;;;;;;;;:::i;1352:29:0:-;;;;;;;;;;;;;;;;707:17;;;;;;;;;;-1:-1:-1;707:17:0;;;;-1:-1:-1;;;;;707:17:0;;;1123:28;;;;;;;;;;-1:-1:-1;1123:28:0;;;;-1:-1:-1;;;;;1123:28:0;;;3569:315;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;860:35::-;;;;;;;;;;-1:-1:-1;860:35:0;;;;-1:-1:-1;;;;;860:35:0;;;2128:1320;;;;;;;;;;-1:-1:-1;2128:1320:0;;;;;:::i;:::-;;:::i;7866:128::-;;;;;;;;;;-1:-1:-1;7866:128:0;;;;;:::i;:::-;;:::i;823:30::-;;;;;;;;;;-1:-1:-1;823:30:0;;;;-1:-1:-1;;;;;823:30:0;;;7005:165;;;;;;;;;;-1:-1:-1;7005:165:0;;;;;:::i;:::-;;:::i;1049:34::-;;;;;;;;;;-1:-1:-1;1049:34:0;;;;-1:-1:-1;;;;;1049:34:0;;;6443:131;;;;;;;;;;-1:-1:-1;6443:131:0;;;;;:::i;:::-;;:::i;1292:34::-;;;;;;;;;;;;;;;;2321:198:2;;;;;;;;;;-1:-1:-1;2321:198:2;;;;;:::i;:::-;;:::i;8002:148:0:-;;;;;;;;;;-1:-1:-1;8002:148:0;;;;;:::i;:::-;;:::i;7466:144::-;;;;;;;;;;-1:-1:-1;7466:144:0;;;;;:::i;:::-;;:::i;1444:31::-;;;;;;;;;;-1:-1:-1;1444:31:0;;;;-1:-1:-1;;;;;1444:31:0;;;575:72;;;;;;;;;;;;605:42;575:72;;6582:135;;;;;;;;;;-1:-1:-1;6582:135:0;;;;;:::i;:::-;;:::i;1685:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1685:24:0;;-1:-1:-1;1685:24:0;:::o;4864:99::-;1334:13:2;:11;:13::i;:::-;4935:8:0::1;:20:::0;;-1:-1:-1;;;;;;4935:20:0::1;-1:-1:-1::0;;;;;4935:20:0;;;::::1;::::0;;;::::1;::::0;;4864:99::o;8158:100::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;;;;;;;;;8230:8:::1;:20:::0;8158:100::o;4251:210::-;4350:16;;;4364:1;4350:16;;;4298:27;4350:16;;;;;4298:27;4350:16;;;;;;;;-1:-1:-1;;4393:17:0;;4377:13;;;;-1:-1:-1;;;;;;4393:17:0;;4377:13;;-1:-1:-1;4393:17:0;;4377:13;;;;:::i;:::-;-1:-1:-1;;;;;4377:33:0;;;:13;;;;;;;;;:33;4437:16;;4421:13;;4437:16;;;4421:10;;4437:16;;4421:13;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;4421:32:0;;;-1:-1:-1;;;;;4421:32:0;;;;;4251:210;:::o;6284:151::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;6381:21:::1;:46:::0;6284:151::o;3892:351::-;3980:16;;;3994:1;3980:16;;;;;;;;;3938:22;;3980:16;;;;;;;;;;-1:-1:-1;3980:16:0;3972:24;;4020:16;;4009:5;4015:1;4009:8;;;;;;;;:::i;:::-;;;;;;:27;;;;;4058:16;;4047:5;4053:1;4047:8;;;;;;;;:::i;:::-;;;;;;:27;;;;;4096:19;;4085:5;4091:1;4085:8;;;;;;;;:::i;:::-;;;;;;:30;;;;;4137:14;;4126:5;4132:1;4126:8;;;;;;;;:::i;:::-;;;;;;:25;;;;;4173:21;;4162:5;4168:1;4162:8;;;;;;;;:::i;:::-;;;;;;:32;;;;;4216:19;;4205:5;4211:1;4205:8;;;;;;;;:::i;:::-;;;;;;:30;;;;;3892:351;:::o;7178:136::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;7268:17:::1;:38:::0;7178:136::o;5117:143::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;5197:16:0;;::::1;;::::0;;;:9:::1;:16;::::0;;;;:25;;;;5233:7:::1;:19:::0;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;5233:19:0;;::::1;::::0;;-1:-1:-1;;;;;;5233:19:0::1;::::0;;::::1;::::0;;5117:143::o;7738:120::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;7820:13:::1;:30:::0;;-1:-1:-1;;;;;;7820:30:0::1;-1:-1:-1::0;;;;;7820:30:0;;;::::1;::::0;;;::::1;::::0;;7738:120::o;3317:197:8:-;-1:-1:-1;;;;;1898:6:8;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:8;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:8;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:8;;1963:87;;;;-1:-1:-1;;;1963:87:8;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;5838:287:0:-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;5966:5:::1;:12;5948:7;:14;:30;5940:54;;;::::0;-1:-1:-1;;;5940:54:0;;9267:2:13;5940:54:0::1;::::0;::::1;9249:21:13::0;9306:2;9286:18;;;9279:30;-1:-1:-1;;;9325:18:13;;;9318:42;9377:18;;5940:54:0::1;9065:336:13::0;5940:54:0::1;6011:9;6007:111;6030:7;:14;6026:1;:18;6007:111;;;6080:26;;;;;;;;6086:7;6094:1;6086:10;;;;;;;;:::i;:::-;;;;;;;6080:26;;;;6097:5;6103:1;6097:8;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;6080:26;;;6065:12:::1;::::0;;;:9:::1;:12:::0;;;;;:41;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;6046:3:::1;6075:1:::0;6046:3:::1;:::i;:::-;;;6007:111;;;;5838:287:::0;;:::o;6854:143::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;6947:19:::1;:42:::0;6854:143::o;4760:96::-;1334:13:2;:11;:13::i;:::-;-1:-1:-1;;;;;4830:11:0;;;::::1;;::::0;;;:5:::1;:11;::::0;;;;:18;;-1:-1:-1;;4830:18:0::1;::::0;::::1;;::::0;;;::::1;::::0;;4760:96::o;3763:222:8:-;-1:-1:-1;;;;;1898:6:8;1881:23;1889:4;1881:23;1873:80;;;;-1:-1:-1;;;1873:80:8;;;;;;;:::i;:::-;1995:6;-1:-1:-1;;;;;1971:30:8;:20;:18;:20::i;:::-;-1:-1:-1;;;;;1971:30:8;;1963:87;;;;-1:-1:-1;;;1963:87:8;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;:::-;3763:222:::0;;:::o;3006:131::-;3084:7;2324:4;-1:-1:-1;;;;;2333:6:8;2316:23;;2308:92;;;;-1:-1:-1;;;2308:92:8;;9845:2:13;2308:92:8;;;9827:21:13;9884:2;9864:18;;;9857:30;9923:34;9903:18;;;9896:62;-1:-1:-1;;;9974:18:13;;;9967:54;10038:19;;2308:92:8;9643:420:13;2308:92:8;-1:-1:-1;;;;;;;;;;;;3006:131:8;:::o;4973:136:0:-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;5064:7:::1;::::0;5054:47:::1;::::0;-1:-1:-1;;;5054:47:0;;-1:-1:-1;;;;;10260:32:13;;;5054:47:0::1;::::0;::::1;10242:51:13::0;10309:18;;;10302:34;;;5064:7:0;;::::1;::::0;5054:33:::1;::::0;10215:18:13;;5054:47:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4973:136:::0;;:::o;7618:112::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;7696:11:::1;:26:::0;;-1:-1:-1;;;;;;7696:26:0::1;-1:-1:-1::0;;;;;7696:26:0;;;::::1;::::0;;;::::1;::::0;;7618:112::o;6133:143::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;6226:19:::1;:42:::0;6133:143::o;4469:283::-;4515:22;4538:23;4581:7;4573:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4573:15:0;;;;;;;;;;;;;;;;;;;;;;;4622:5;:12;-1:-1:-1;;;;;4608:27:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4608:27:0;;4599:36;;4650:9;4646:99;4669:5;:12;4665:1;:16;4646:99;;;4714:9;:19;4724:5;4730:1;4724:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4714:19:0;-1:-1:-1;;;;;4714:19:0;;;;;;;;;;;;;4702:6;4709:1;4702:9;;;;;;;;:::i;:::-;;;;;;;;;;:31;4683:3;;;;:::i;:::-;;;;4646:99;;;;4469:283;;:::o;2071:101:2:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;8266:116:0:-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;8346:12:::1;:28:::0;8266:116::o;5568:135::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;5657:17:::1;:38:::0;5568:135::o;7322:136::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;7412:17:::1;:38:::0;7322:136::o;5711:119::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;5792:13:::1;:30:::0;5711:119::o;5268:288::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;5407:4:::1;:12:::0;;-1:-1:-1;;;;;;5407:12:0;;::::1;-1:-1:-1::0;;;;;5407:12:0;;::::1;;::::0;;;5430:2:::1;:8:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;5449:3:::1;:10:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;5470:8:::1;:20:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;5501:7:::1;:18:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;5530:7:::1;:18:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;5268:288::o;6725:123::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;6808:14:::1;:32:::0;6725:123::o;1441:85:2:-;1513:6;;-1:-1:-1;;;;;1513:6:2;;1441:85::o;3569:315:0:-;3683:16;;;3697:1;3683:16;;;;;;;;;3614:24;;;;3683:16;;;;;;;;;-1:-1:-1;;3718:16:0;;;3732:1;3718:16;;;;;;;;;3673:26;;-1:-1:-1;3732:1:0;-1:-1:-1;3718:16:0;;;;;;;;;;-1:-1:-1;3718:16:0;3710:24;;3749:9;3745:132;3768:1;3764;:5;3745:132;;;3803:12;;;;:9;:12;;;;;:19;3790:10;;:7;;3813:1;;3790:10;;;;;;:::i;:::-;;;;;;:32;;;;;3848:9;:12;3858:1;3848:12;;;;;;;;;;;:17;;;3837:5;3843:1;3837:8;;;;;;;;:::i;:::-;;;;;;;;;;:28;3771:3;;;;:::i;:::-;;;;3745:132;;2128:1320;3268:19:7;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:7;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;;3377:44;3415:4;3377:29;:44::i;:::-;3376:45;:66;;;;-1:-1:-1;3425:12:7;;;;;:17;3376:66;3314:201;;;;-1:-1:-1;;;3314:201:7;;10549:2:13;3314:201:7;;;10531:21:13;10588:2;10568:18;;;10561:30;10627:34;10607:18;;;10600:62;-1:-1:-1;;;10678:18:13;;;10671:44;10732:19;;3314:201:7;10347:410:13;3314:201:7;3525:12;:16;;-1:-1:-1;;3525:16:7;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;-1:-1:-1;;3585:20:7;;;;;3551:65;2197:16:0::1;:14;:16::i;:::-;2224:8;:20:::0;;-1:-1:-1;;;;;2224:20:0;::::1;-1:-1:-1::0;;;;;;2224:20:0;;::::1;;::::0;;;2257:15:::1;:60:::0;;;::::1;2275:42;2257:60;::::0;;2328:20:::1;:65:::0;;;::::1;2351:42;2328:65;::::0;;2419:3:::1;2404:12;:18:::0;2444:4:::1;2433:8;:15:::0;2461:19:::1;:64:::0;;;::::1;2483:42;2461:64;::::0;;2536:11:::1;:56:::0;;;::::1;2550:42;2536:56;::::0;;2603:13:::1;:58:::0;;;::::1;2619:42;2603:58:::0;;::::1;::::0;;;2702:8:::1;2682:17;:28:::0;2741:10:::1;2721:17;:30:::0;2781:3:::1;2762:16;:22:::0;2814:3:::1;2795:16;:22:::0;;;2828:19:::1;:25:::0;;;2864:14:::1;:20:::0;2895:17:::1;:62:::0;;;::::1;::::0;;::::1;::::0;;2968:16:::1;:61:::0;;;::::1;2987:42;2968:61;::::0;;3064:2:::1;3040:21;:26:::0;3099:11:::1;3077:19;:33:::0;3138:10:::1;::::0;;;;::::1;::::0;;2224:8:::1;3138:10:::0;;;::::1;::::0;;::::1;::::0;;;3123:12;;;:9:::1;:12:::0;;;:25;;:12;:25;;;;3174:22;;;;::::1;::::0;;3180:11:::1;3174:22:::0;;3192:3:::1;3174:22:::0;;::::1;::::0;;;2224:20;3159:12;;;;;;:37;;:12;:37;;;;3222:22;;;;::::1;::::0;;3228:11:::1;3222:22:::0;;3240:3:::1;3222:22:::0;;::::1;::::0;;;3217:1:::1;3207:12:::0;;;;;:37;;:12;:37;;;;3270:23;;;;::::1;::::0;;;3276:12:::1;3270:23:::0;;3289:3:::1;3270:23:::0;;::::1;::::0;;;3265:1:::1;3255:12:::0;;;;;;:38;;:12;:38;;;;;3306:9:::1;:14:::0;;;:18;;;;3335:7:::1;:17:::0;;;;::::1;::::0;;;;-1:-1:-1;;;;;;;;;;;3335:17:0::1;::::0;;;;::::1;605:42;3335:17;::::0;;3385:8:::1;3365:17;:28:::0;3420:9:::1;3404:13;:25:::0;3636:99:7;;;;3686:5;3670:21;;-1:-1:-1;;3670:21:7;;;3710:14;;-1:-1:-1;10914:36:13;;3710:14:7;;10902:2:13;10887:18;3710:14:7;;;;;;;3258:483;2128:1320:0;:::o;7866:128::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;7952:15:::1;:34:::0;;-1:-1:-1;;;;;;7952:34:0::1;-1:-1:-1::0;;;;;7952:34:0;;;::::1;::::0;;;::::1;::::0;;7866:128::o;7005:165::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;7097:16:::1;:27:::0;;;;7135:16:::1;:27:::0;7005:165::o;6443:131::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;6530:16:::1;:36:::0;;-1:-1:-1;;;;;;6530:36:0::1;-1:-1:-1::0;;;;;6530:36:0;;;::::1;::::0;;;::::1;::::0;;6443:131::o;2321:198:2:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:2;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:2;;11163:2:13;2401:73:2::1;::::0;::::1;11145:21:13::0;11202:2;11182:18;;;11175:30;11241:34;11221:18;;;11214:62;-1:-1:-1;;;11292:18:13;;;11285:36;11338:19;;2401:73:2::1;10961:402:13::0;2401:73:2::1;2484:28;2503:8;2484:18;:28::i;8002:148:0:-:0;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;8098:20:::1;:44:::0;;-1:-1:-1;;;;;;8098:44:0::1;-1:-1:-1::0;;;;;8098:44:0;;;::::1;::::0;;;::::1;::::0;;8002:148::o;7466:144::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;7560:19:::1;:42:::0;;-1:-1:-1;;;;;;7560:42:0::1;-1:-1:-1::0;;;;;7560:42:0;;;::::1;::::0;;;::::1;::::0;;7466:144::o;6582:135::-;2047:10;2041:17;;;;:5;:17;;;;;;;;;:42;;;2076:7;:5;:7::i;:::-;-1:-1:-1;;;;;2062:21:0;:10;-1:-1:-1;;;;;2062:21:0;;2041:42;2033:63;;;;-1:-1:-1;;;2033:63:0;;;;;;;:::i;:::-;6671:17:::1;:38:::0;;-1:-1:-1;;;;;;6671:38:0::1;-1:-1:-1::0;;;;;6671:38:0;;;::::1;::::0;;;::::1;::::0;;6582:135::o;1599:130:2:-;929:10:11;1662:7:2;:5;:7::i;:::-;-1:-1:-1;;;;;1662:23:2;;1654:68;;;;-1:-1:-1;;;1654:68:2;;11570:2:13;1654:68:2;;;11552:21:13;;;11589:18;;;11582:30;11648:34;11628:18;;;11621:62;11700:18;;1654:68:2;11368:356:13;1509:151:5;-1:-1:-1;;;;;;;;;;;1588:65:5;-1:-1:-1;;;;;1588:65:5;;1509:151::o;3495:66:0:-;1334:13:2;:11;:13::i;2884:974:5:-;1023:66;3330:59;;;3326:526;;;3405:37;3424:17;3405:18;:37::i;3326:526::-;3506:17;-1:-1:-1;;;;;3477:61:5;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3477:63:5;;;;;;;;-1:-1:-1;;3477:63:5;;;;;;;;;;;;:::i;:::-;;;3473:302;;3704:56;;-1:-1:-1;;;3704:56:5;;12120:2:13;3704:56:5;;;12102:21:13;12159:2;12139:18;;;12132:30;12198:34;12178:18;;;12171:62;-1:-1:-1;;;12249:18:13;;;12242:44;12303:19;;3704:56:5;11918:410:13;3473:302:5;-1:-1:-1;;;;;;;;;;;3590:28:5;;3582:82;;;;-1:-1:-1;;;3582:82:5;;12535:2:13;3582:82:5;;;12517:21:13;12574:2;12554:18;;;12547:30;12613:34;12593:18;;;12586:62;-1:-1:-1;;;12664:18:13;;;12657:39;12713:19;;3582:82:5;12333:405:13;3582:82:5;3541:138;3788:53;3806:17;3825:4;3831:9;3788:17;:53::i;2673:187:2:-;2765:6;;;-1:-1:-1;;;;;2781:17:2;;;-1:-1:-1;;;;;;2781:17:2;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;1186:320:10:-;-1:-1:-1;;;;;1476:19:10;;:23;;;1186:320::o;1003:95:2:-;5363:13:7;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:7;;;;;;;:::i;:::-;1065:26:2::1;:24;:26::i;1751:281:5:-:0;1832:48;1862:17;1832:29;:48::i;:::-;1824:106;;;;-1:-1:-1;;;1824:106:5;;13357:2:13;1824:106:5;;;13339:21:13;13396:2;13376:18;;;13369:30;13435:34;13415:18;;;13408:62;-1:-1:-1;;;13486:18:13;;;13479:43;13539:19;;1824:106:5;13155:409:13;1824:106:5;-1:-1:-1;;;;;;;;;;;1940:85:5;;-1:-1:-1;;;;;;1940:85:5;-1:-1:-1;;;;;1940:85:5;;;;;;;;;;1751:281::o;2424:288::-;2562:29;2573:17;2562:10;:29::i;:::-;2619:1;2605:4;:11;:15;:28;;;;2624:9;2605:28;2601:105;;;2649:46;2671:17;2690:4;2649:21;:46::i;:::-;;2424:288;;;:::o;1104:111:2:-;5363:13:7;;;;;;;5355:69;;;;-1:-1:-1;;;5355:69:7;;;;;;;:::i;:::-;1176:32:2::1;929:10:11::0;1176:18:2::1;:32::i;2138:152:5:-:0;2204:37;2223:17;2204:18;:37::i;:::-;2256:27;;-1:-1:-1;;;;;2256:27:5;;;;;;;;2138:152;:::o;6780:455::-;6863:12;6895:37;6925:6;6895:29;:37::i;:::-;6887:88;;;;-1:-1:-1;;;6887:88:5;;13771:2:13;6887:88:5;;;13753:21:13;13810:2;13790:18;;;13783:30;13849:34;13829:18;;;13822:62;-1:-1:-1;;;13900:18:13;;;13893:36;13946:19;;6887:88:5;13569:402:13;6887:88:5;7046:12;7060:23;7087:6;-1:-1:-1;;;;;7087:19:5;7107:4;7087:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7045:67;;;;7129:99;7165:7;7174:10;7129:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7122:106;6780:455;-1:-1:-1;;;;;6780:455:5:o;7438:295:10:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:10;7635:17;;7608:119;7683:33;7691:10;7703:12;7683:7;:33::i;:::-;7438:295;;;;;:::o;7739:540::-;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;7894:379;8249:12;8242:20;;-1:-1:-1;;;8242:20:10;;;;;;;;:::i;14:180:13:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:13;;14:180;-1:-1:-1;14:180:13:o;407:173::-;475:20;;-1:-1:-1;;;;;524:31:13;;514:42;;504:70;;570:1;567;560:12;504:70;407:173;;;:::o;585:186::-;644:6;697:2;685:9;676:7;672:23;668:32;665:52;;;713:1;710;703:12;665:52;736:29;755:9;736:29;:::i;958:461::-;1011:3;1049:5;1043:12;1076:6;1071:3;1064:19;1102:4;1131:2;1126:3;1122:12;1115:19;;1168:2;1161:5;1157:14;1189:1;1199:195;1213:6;1210:1;1207:13;1199:195;;;1278:13;;-1:-1:-1;;;;;1274:39:13;1262:52;;1334:12;;;;1369:15;;;;1310:1;1228:9;1199:195;;;-1:-1:-1;1410:3:13;;958:461;-1:-1:-1;;;;;958:461:13:o;1424:261::-;1603:2;1592:9;1585:21;1566:4;1623:56;1675:2;1664:9;1660:18;1652:6;1623:56;:::i;1690:435::-;1743:3;1781:5;1775:12;1808:6;1803:3;1796:19;1834:4;1863:2;1858:3;1854:12;1847:19;;1900:2;1893:5;1889:14;1921:1;1931:169;1945:6;1942:1;1939:13;1931:169;;;2006:13;;1994:26;;2040:12;;;;2075:15;;;;1967:1;1960:9;1931:169;;2130:261;2309:2;2298:9;2291:21;2272:4;2329:56;2381:2;2370:9;2366:18;2358:6;2329:56;:::i;2649:254::-;2717:6;2725;2778:2;2766:9;2757:7;2753:23;2749:32;2746:52;;;2794:1;2791;2784:12;2746:52;2817:29;2836:9;2817:29;:::i;:::-;2807:39;2893:2;2878:18;;;;2865:32;;-1:-1:-1;;;2649:254:13:o;2908:127::-;2969:10;2964:3;2960:20;2957:1;2950:31;3000:4;2997:1;2990:15;3024:4;3021:1;3014:15;3040:275;3111:2;3105:9;3176:2;3157:13;;-1:-1:-1;;3153:27:13;3141:40;;-1:-1:-1;;;;;3196:34:13;;3232:22;;;3193:62;3190:88;;;3258:18;;:::i;:::-;3294:2;3287:22;3040:275;;-1:-1:-1;3040:275:13:o;3320:712::-;3374:5;3427:3;3420:4;3412:6;3408:17;3404:27;3394:55;;3445:1;3442;3435:12;3394:55;3468:20;;3507:4;-1:-1:-1;;;;;3523:26:13;;3520:52;;;3552:18;;:::i;:::-;3598:2;3595:1;3591:10;3621:28;3645:2;3641;3637:11;3621:28;:::i;:::-;3683:15;;;3753;;;3749:24;;;3714:12;;;;3785:15;;;3782:35;;;3813:1;3810;3803:12;3782:35;3849:2;3841:6;3837:15;3826:26;;3861:142;3877:6;3872:3;3869:15;3861:142;;;3943:17;;3931:30;;3894:12;;;;3981;;;;3861:142;;;4021:5;3320:712;-1:-1:-1;;;;;;;3320:712:13:o;4037:595::-;4155:6;4163;4216:2;4204:9;4195:7;4191:23;4187:32;4184:52;;;4232:1;4229;4222:12;4184:52;4259:23;;-1:-1:-1;;;;;4331:14:13;;;4328:34;;;4358:1;4355;4348:12;4328:34;4381:61;4434:7;4425:6;4414:9;4410:22;4381:61;:::i;:::-;4371:71;;4495:2;4484:9;4480:18;4467:32;4451:48;;4524:2;4514:8;4511:16;4508:36;;;4540:1;4537;4530:12;4508:36;;4563:63;4618:7;4607:8;4596:9;4592:24;4563:63;:::i;:::-;4553:73;;;4037:595;;;;;:::o;4637:347::-;4702:6;4710;4763:2;4751:9;4742:7;4738:23;4734:32;4731:52;;;4779:1;4776;4769:12;4731:52;4802:29;4821:9;4802:29;:::i;:::-;4792:39;;4881:2;4870:9;4866:18;4853:32;4928:5;4921:13;4914:21;4907:5;4904:32;4894:60;;4950:1;4947;4940:12;4894:60;4973:5;4963:15;;;4637:347;;;;;:::o;4989:837::-;5066:6;5074;5127:2;5115:9;5106:7;5102:23;5098:32;5095:52;;;5143:1;5140;5133:12;5095:52;5166:29;5185:9;5166:29;:::i;:::-;5156:39;-1:-1:-1;5214:2:13;5252:18;;;5239:32;-1:-1:-1;;;;;5320:14:13;;;5317:34;;;5347:1;5344;5337:12;5317:34;5385:6;5374:9;5370:22;5360:32;;5430:7;5423:4;5419:2;5415:13;5411:27;5401:55;;5452:1;5449;5442:12;5401:55;5488:2;5475:16;5510:2;5506;5503:10;5500:36;;;5516:18;;:::i;:::-;5558:53;5601:2;5582:13;;-1:-1:-1;;5578:27:13;5574:36;;5558:53;:::i;:::-;5545:66;;5634:2;5627:5;5620:17;5674:7;5669:2;5664;5660;5656:11;5652:20;5649:33;5646:53;;;5695:1;5692;5685:12;5646:53;5750:2;5745;5741;5737:11;5732:2;5725:5;5721:14;5708:45;5794:1;5789:2;5784;5777:5;5773:14;5769:23;5762:34;;5815:5;5805:15;;;;;4989:837;;;;;:::o;6013:465::-;6270:2;6259:9;6252:21;6233:4;6296:56;6348:2;6337:9;6333:18;6325:6;6296:56;:::i;:::-;6400:9;6392:6;6388:22;6383:2;6372:9;6368:18;6361:50;6428:44;6465:6;6457;6428:44;:::i;6483:559::-;6587:6;6595;6603;6611;6619;6627;6680:3;6668:9;6659:7;6655:23;6651:33;6648:53;;;6697:1;6694;6687:12;6648:53;6720:29;6739:9;6720:29;:::i;:::-;6710:39;;6768:38;6802:2;6791:9;6787:18;6768:38;:::i;:::-;6758:48;;6825:38;6859:2;6848:9;6844:18;6825:38;:::i;:::-;6815:48;;6882:38;6916:2;6905:9;6901:18;6882:38;:::i;:::-;6872:48;;6939:39;6973:3;6962:9;6958:19;6939:39;:::i;:::-;6929:49;;6997:39;7031:3;7020:9;7016:19;6997:39;:::i;:::-;6987:49;;6483:559;;;;;;;;:::o;7047:465::-;7304:2;7293:9;7286:21;7267:4;7330:56;7382:2;7371:9;7367:18;7359:6;7330:56;:::i;7517:248::-;7585:6;7593;7646:2;7634:9;7625:7;7621:23;7617:32;7614:52;;;7662:1;7659;7652:12;7614:52;-1:-1:-1;;7685:23:13;;;7755:2;7740:18;;;7727:32;;-1:-1:-1;7517:248:13:o;7770:332::-;7972:2;7954:21;;;8011:1;7991:18;;;7984:29;-1:-1:-1;;;8044:2:13;8029:18;;8022:39;8093:2;8078:18;;7770:332::o;8107:127::-;8168:10;8163:3;8159:20;8156:1;8149:31;8199:4;8196:1;8189:15;8223:4;8220:1;8213:15;8239:408;8441:2;8423:21;;;8480:2;8460:18;;;8453:30;-1:-1:-1;;;;;;;;;;;8514:2:13;8499:18;;8492:62;-1:-1:-1;;;8585:2:13;8570:18;;8563:42;8637:3;8622:19;;8239:408::o;8652:::-;8854:2;8836:21;;;8893:2;8873:18;;;8866:30;-1:-1:-1;;;;;;;;;;;8927:2:13;8912:18;;8905:62;-1:-1:-1;;;8998:2:13;8983:18;;8976:42;9050:3;9035:19;;8652:408::o;9406:232::-;9445:3;9466:17;;;9463:140;;9525:10;9520:3;9516:20;9513:1;9506:31;9560:4;9557:1;9550:15;9588:4;9585:1;9578:15;9463:140;-1:-1:-1;9630:1:13;9619:13;;9406:232::o;11729:184::-;11799:6;11852:2;11840:9;11831:7;11827:23;11823:32;11820:52;;;11868:1;11865;11858:12;11820:52;-1:-1:-1;11891:16:13;;11729:184;-1:-1:-1;11729:184:13:o;12743:407::-;12945:2;12927:21;;;12984:2;12964:18;;;12957:30;13023:34;13018:2;13003:18;;12996:62;-1:-1:-1;;;13089:2:13;13074:18;;13067:41;13140:3;13125:19;;12743:407::o;13976:250::-;14061:1;14071:113;14085:6;14082:1;14079:13;14071:113;;;14161:11;;;14155:18;14142:11;;;14135:39;14107:2;14100:10;14071:113;;;-1:-1:-1;;14218:1:13;14200:16;;14193:27;13976:250::o;14231:287::-;14360:3;14398:6;14392:13;14414:66;14473:6;14468:3;14461:4;14453:6;14449:17;14414:66;:::i;:::-;14496:16;;;;;14231:287;-1:-1:-1;;14231:287:13:o;14523:396::-;14672:2;14661:9;14654:21;14635:4;14704:6;14698:13;14747:6;14742:2;14731:9;14727:18;14720:34;14763:79;14835:6;14830:2;14819:9;14815:18;14810:2;14802:6;14798:15;14763:79;:::i;:::-;14903:2;14882:15;-1:-1:-1;;14878:29:13;14863:45;;;;14910:2;14859:54;;14523:396;-1:-1:-1;;14523:396:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2185800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acb()": "3008",
								"acbPair()": "2920",
								"airdropMachine(address,uint256)": "infinite",
								"changeClaimInterval(uint256)": "26918",
								"changeMachineExpireTime(uint256)": "26874",
								"changeMarketAddress(address)": "29298",
								"changeMaxComputingPower(uint256)": "26896",
								"changeMinComputingPower(uint256)": "27007",
								"changeMonthDividenAddress(address)": "29583",
								"changeMvCollectionAddress(address)": "29605",
								"changeOperator(address)": "26801",
								"changePlatformAddress(address)": "29429",
								"changePlatformRate(uint256)": "26852",
								"changeRefRewardRate(uint256,uint256)": "49361",
								"changeRemainingAddress(address)": "29517",
								"changeSameLevelRewardRate(uint256)": "27205",
								"changeShareHolderMinLimit(uint256)": "26764",
								"changeShareHolderRewardRate(uint256)": "26831",
								"changeSwapRate(uint256)": "26765",
								"changeTeamLevel(uint256[],uint256[])": "infinite",
								"changeTeamRewardAddress(address)": "29671",
								"changeTeamRewardRate(uint256)": "26984",
								"changeTechAddress(address)": "28989",
								"claimInterval()": "2361",
								"getRateConfig()": "infinite",
								"getTeamAddress()": "infinite",
								"getTeamLevel()": "infinite",
								"getUserLevels()": "infinite",
								"initialize(address)": "infinite",
								"machineExpireTime()": "2537",
								"marketAddress()": "2699",
								"maxComputingPower()": "2735",
								"minComputingPower()": "2536",
								"minePool()": "2325",
								"mmStore()": "2876",
								"monthDividendAddress()": "2743",
								"mv()": "2677",
								"mvCollectionAddress()": "2853",
								"operator()": "2964",
								"owner()": "2642",
								"platformAddress()": "2809",
								"platformRate()": "2669",
								"proxiableUUID()": "infinite",
								"refRewardOneRate()": "2580",
								"refRewardTwoRate()": "2757",
								"remainingAddress()": "2985",
								"renounceOwnership()": "infinite",
								"sameLevelRewardRate()": "2866",
								"setAdmin(address,bool)": "27407",
								"setConfig(address,address,address,address,address,address)": "infinite",
								"setUserLevel(address,uint256)": "75733",
								"shareHolderMinLimit()": "2471",
								"shareHolderRewardRate()": "2691",
								"swapRate()": "2360",
								"teamLevel(uint256)": "4773",
								"teamRewardAddress()": "2854",
								"teamRewardRate()": "2624",
								"techAddress()": "2458",
								"top()": "886",
								"transferOwnership(address)": "28972",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"usdt()": "2590",
								"userArr(uint256)": "4601",
								"userLevel(address)": "2737"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1332,
									"end": 1336,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 1289,
									"end": 1337,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1654"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 8389,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209fb3eef1a7e8dfd481c6fe090fec9d605b631080bf75fee713d3f374a9a0c71c64736f6c63430008140033",
									".code": [
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "602E6623"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "602E6623"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "669934A9"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "66BF8F83"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "698518E5"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "6B1A9C07"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "72765009"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "7634B070"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "767608E2"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "796F838E"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "812DF395"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "85ADB294"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "863BE1AB"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "8A5705D4"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "8E10EF0B"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "8F05CDF5"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "95623641"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "9A3135A8"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "B2CF085E"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "C4D66DE8"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "CDE85744"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "DBE55E56"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "E3D9AA05"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "E9D610E5"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "EB2266BC"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "EE787B11"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "F7656704"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "F80183B2"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "F97FE091"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "FE6DCDBA"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "FF858079"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "57D7781"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "6394C9B"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "8F93BD8"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "B433A12"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "182D326E"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "19A2EF5F"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "1E56CFAB"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "1E79AA0A"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "21596C25"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "254720B7"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "280E31CC"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "2D8852EE"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "2F48AB7D"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "3360364D"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "33F5780E"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "35AED778"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "3659CFE6"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "36E0CAC6"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "39CBC405"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "3B2C2E55"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "3D08E5B3"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "434F9736"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "498C1E3C"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "4B0BDDD2"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "4B21DDEC"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "4DD40234"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "4F1EF286"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "5250C9B5"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "52D1902D"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "57629F82"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "5BFF9787"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 8389,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 363,
											"end": 395,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 345,
											"end": 396,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4864,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4864,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8158,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8158,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "E3"
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 922,
											"end": 947,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 922,
											"end": 947,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 922,
											"end": 947,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 910,
											"end": 912,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 776,
											"end": 953,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4251,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4251,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6284,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6284,
											"end": 6435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH",
											"source": 0,
											"value": "D4"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1116,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3892,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3892,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "PUSH",
											"source": 0,
											"value": "DE"
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1576,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1585,
											"end": 1627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "DF"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2595,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2595,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2595,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2626,
											"end": 2628,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2396,
											"end": 2644,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1634,
											"end": 1678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1634,
											"end": 1678,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "PUSH",
											"source": 0,
											"value": "E2"
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1750,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 656,
											"end": 675,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 656,
											"end": 675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 656,
											"end": 675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 656,
											"end": 675,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7178,
											"end": 7314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7178,
											"end": 7314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 5117,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5117,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7738,
											"end": 7858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7738,
											"end": 7858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 3317,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3317,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 902,
											"end": 929,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 902,
											"end": 929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 902,
											"end": 929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 902,
											"end": 929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 902,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "D1"
										},
										{
											"begin": 902,
											"end": 929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 902,
											"end": 929,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "PUSH",
											"source": 0,
											"value": "DD"
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5838,
											"end": 6125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5838,
											"end": 6125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "PUSH",
											"source": 0,
											"value": "E6"
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "PUSH",
											"source": 0,
											"value": "D8"
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1285,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6854,
											"end": 6997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6854,
											"end": 6997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4760,
											"end": 4856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4760,
											"end": 4856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "DB"
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 731,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 731,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 731,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 731,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 731,
											"end": 753,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 731,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 731,
											"end": 753,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 753,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 3763,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3763,
											"end": 3985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 790,
											"end": 812,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 790,
											"end": 812,
											"name": "PUSH",
											"source": 0,
											"value": "CE"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 790,
											"end": 812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 790,
											"end": 812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 790,
											"end": 812,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1794,
											"end": 1817,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4973,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4973,
											"end": 5109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 682,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 682,
											"end": 700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 682,
											"end": 700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 682,
											"end": 700,
											"name": "PUSH",
											"source": 0,
											"value": "CA"
										},
										{
											"begin": 682,
											"end": 700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 682,
											"end": 700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 682,
											"end": 700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 682,
											"end": 700,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 760,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "CD"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 760,
											"end": 783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 760,
											"end": 783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 760,
											"end": 783,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7618,
											"end": 7730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 7618,
											"end": 7730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6133,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6133,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "PUSH",
											"source": 0,
											"value": "D2"
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1017,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4469,
											"end": 4752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 4469,
											"end": 4752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2071,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 8266,
											"end": 8382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8266,
											"end": 8382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5568,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 5568,
											"end": 5703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7322,
											"end": 7458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7322,
											"end": 7458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5711,
											"end": 5830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 5711,
											"end": 5830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 5268,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 5268,
											"end": 5556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "D6"
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1160,
											"end": 1192,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6725,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6725,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "D7"
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "DA"
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1381,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 707,
											"end": 724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 707,
											"end": 724,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 724,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 707,
											"end": 724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 707,
											"end": 724,
											"name": "PUSH",
											"source": 0,
											"value": "CB"
										},
										{
											"begin": 707,
											"end": 724,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 707,
											"end": 724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 707,
											"end": 724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 707,
											"end": 724,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "PUSH",
											"source": 0,
											"value": "D5"
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1151,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 3569,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 3569,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 860,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 860,
											"end": 895,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 860,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 860,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 860,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "D0"
										},
										{
											"begin": 860,
											"end": 895,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 860,
											"end": 895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 860,
											"end": 895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 860,
											"end": 895,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2128,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2128,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7866,
											"end": 7994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 7866,
											"end": 7994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 823,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 823,
											"end": 853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 823,
											"end": 853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 823,
											"end": 853,
											"name": "PUSH",
											"source": 0,
											"value": "CF"
										},
										{
											"begin": 823,
											"end": 853,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 823,
											"end": 853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 823,
											"end": 853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 823,
											"end": 853,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 7005,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 7005,
											"end": 7170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "PUSH",
											"source": 0,
											"value": "D3"
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1049,
											"end": 1083,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6443,
											"end": 6574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 6443,
											"end": 6574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "D9"
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1326,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2321,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 2321,
											"end": 2519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8002,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 8002,
											"end": 8150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7466,
											"end": 7610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 7466,
											"end": 7610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "DC"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1444,
											"end": 1475,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 575,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 575,
											"end": 647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 575,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 575,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 605,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "D220B3CF1E4660C5509418B42A86D7945E6E2E18"
										},
										{
											"begin": 575,
											"end": 647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 575,
											"end": 647,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6582,
											"end": 6717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 6582,
											"end": 6717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1685,
											"end": 1709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4864,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 4943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4935,
											"end": 4955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4935,
											"end": 4955,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4864,
											"end": 4963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 8158,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D2"
										},
										{
											"begin": 8230,
											"end": 8250,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8158,
											"end": 8258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4325,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4298,
											"end": 4325,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4350,
											"end": 4366,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "PUSH",
											"source": 0,
											"value": "DB"
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4377,
											"end": 4390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "DC"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4431,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4421,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4434,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4421,
											"end": 4453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4251,
											"end": 4461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6284,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6381,
											"end": 6402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DD"
										},
										{
											"begin": 6381,
											"end": 6427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6284,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3994,
											"end": 3995,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3938,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3980,
											"end": 3996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3972,
											"end": 3996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4036,
											"name": "PUSH",
											"source": 0,
											"value": "D7"
										},
										{
											"begin": 4020,
											"end": 4036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4009,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4017,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4009,
											"end": 4036,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4058,
											"end": 4074,
											"name": "PUSH",
											"source": 0,
											"value": "D8"
										},
										{
											"begin": 4058,
											"end": 4074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4047,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4096,
											"end": 4115,
											"name": "PUSH",
											"source": 0,
											"value": "D9"
										},
										{
											"begin": 4096,
											"end": 4115,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4090,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4091,
											"end": 4092,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4085,
											"end": 4093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4115,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4137,
											"end": 4151,
											"name": "PUSH",
											"source": 0,
											"value": "DA"
										},
										{
											"begin": 4137,
											"end": 4151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4133,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4126,
											"end": 4134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4134,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4126,
											"end": 4151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4194,
											"name": "PUSH",
											"source": 0,
											"value": "DD"
										},
										{
											"begin": 4173,
											"end": 4194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4162,
											"end": 4170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4162,
											"end": 4194,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4216,
											"end": 4235,
											"name": "PUSH",
											"source": 0,
											"value": "DE"
										},
										{
											"begin": 4216,
											"end": 4235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4211,
											"end": 4212,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4205,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4205,
											"end": 4235,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3892,
											"end": 4243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 7178,
											"end": 7314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D6"
										},
										{
											"begin": 7268,
											"end": 7306,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7178,
											"end": 7314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 5117,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5197,
											"end": 5213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5213,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 5197,
											"end": 5213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5197,
											"end": 5213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5197,
											"end": 5222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "E3D46F142E20657C402ED08BDF439BABDD6FBB8091E2708315F00847C0F52CC5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5233,
											"end": 5252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5233,
											"end": 5252,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5117,
											"end": 5260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 7738,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D5"
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7820,
											"end": 7850,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7820,
											"end": 7850,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7738,
											"end": 7858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1654"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1654"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 1971,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 3418,
											"end": 3435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 3400,
											"end": 3436,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3400,
											"end": 3436,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 3400,
											"end": 3436,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3497,
											"end": 3498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 3446,
											"end": 3507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3485,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3485,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3487,
											"end": 3499,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 3446,
											"end": 3507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3446,
											"end": 3507,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 3446,
											"end": 3507,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5966,
											"end": 5971,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5966,
											"end": 5978,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5955,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5962,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5948,
											"end": 5978,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 5940,
											"end": 5994,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5940,
											"end": 5994,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5940,
											"end": 5994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9267,
											"end": 9269,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5940,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5940,
											"end": 5994,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5940,
											"end": 5994,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9270,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9306,
											"end": 9308,
											"name": "PUSH",
											"source": 13,
											"value": "C"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9279,
											"end": 9309,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3632B733BA341032B93937B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9325,
											"end": 9343,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9318,
											"end": 9360,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9377,
											"end": 9395,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9377,
											"end": 9395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 5994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 9065,
											"end": 9401,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5940,
											"end": 5994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 5940,
											"end": 5994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6011,
											"end": 6020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6037,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6030,
											"end": 6044,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6026,
											"end": 6044,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6093,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6094,
											"end": 6095,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 6086,
											"end": 6096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6086,
											"end": 6096,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6080,
											"end": 6106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6102,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6103,
											"end": 6104,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 6097,
											"end": 6105,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6097,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6097,
											"end": 6105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6080,
											"end": 6106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DF"
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6077,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6065,
											"end": 6106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6065,
											"end": 6106,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6046,
											"end": 6049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 6075,
											"end": 6076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6046,
											"end": 6049,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 6046,
											"end": 6049,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6046,
											"end": 6049,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 6046,
											"end": 6049,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6046,
											"end": 6049,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6046,
											"end": 6049,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5838,
											"end": 6125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6854,
											"end": 6997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "445"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "447"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D9"
										},
										{
											"begin": 6947,
											"end": 6989,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4760,
											"end": 4856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4841,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 4830,
											"end": 4841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4841,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4830,
											"end": 4848,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4830,
											"end": 4848,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4760,
											"end": 4856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1654"
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1889,
											"end": 1893,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1904,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 1873,
											"end": 1953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 1873,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1654"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 1971,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 1971,
											"end": 1991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "tag",
											"source": 8,
											"value": "456"
										},
										{
											"begin": 1971,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1971,
											"end": 2001,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 1963,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 1963,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3916,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 3898,
											"end": 3915,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 3880,
											"end": 3916,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3880,
											"end": 3916,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 3880,
											"end": 3916,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 3948,
											"end": 3965,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3967,
											"end": 3971,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3973,
											"end": 3977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3926,
											"end": 3947,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 3926,
											"end": 3978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3926,
											"end": 3978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 3926,
											"end": 3978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3985,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2324,
											"end": 2328,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2339,
											"name": "PUSHIMMUTABLE",
											"source": 8,
											"value": "1654"
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2316,
											"end": 2339,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9845,
											"end": 9847,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9827,
											"end": 9848,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9884,
											"end": 9886,
											"name": "PUSH",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 9864,
											"end": 9882,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9864,
											"end": 9882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9864,
											"end": 9882,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9857,
											"end": 9887,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9923,
											"end": 9957,
											"name": "PUSH",
											"source": 13,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9896,
											"end": 9958,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B1959081D1A1C9BDD59DA0819195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9974,
											"end": 9992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9967,
											"end": 10021,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10038,
											"end": 10057,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10038,
											"end": 10057,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9643,
											"end": 10063,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 2308,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3006,
											"end": 3137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3006,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "469"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "468"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 5064,
											"end": 5071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5054,
											"end": 5101,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BB14FC1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5054,
											"end": 5101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10292,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5054,
											"end": 5101,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10242,
											"end": 10293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10309,
											"end": 10327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10302,
											"end": 10336,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10302,
											"end": 10336,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10302,
											"end": 10336,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5064,
											"end": 5071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5071,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5087,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "57629F82"
										},
										{
											"begin": 5054,
											"end": 5087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10215,
											"end": 10233,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10215,
											"end": 10233,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5054,
											"end": 5101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4973,
											"end": 5109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 7618,
											"end": 7730,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D4"
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7696,
											"end": 7722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7696,
											"end": 7722,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 6133,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6226,
											"end": 6245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DE"
										},
										{
											"begin": 6226,
											"end": 6268,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4515,
											"end": 4537,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4538,
											"end": 4561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4581,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4573,
											"end": 4588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4622,
											"end": 4627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4622,
											"end": 4634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 4608,
											"end": 4635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4608,
											"end": 4635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4599,
											"end": 4635,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4650,
											"end": 4659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4669,
											"end": 4674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4669,
											"end": 4681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4665,
											"end": 4666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4665,
											"end": 4681,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4723,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4729,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4724,
											"end": 4732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4724,
											"end": 4732,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 4702,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "502"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4702,
											"end": 4733,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 4683,
											"end": 4686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4683,
											"end": 4686,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4646,
											"end": 4745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "505"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 2,
											"value": "505"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 2162,
											"end": 2163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "508"
										},
										{
											"begin": 2135,
											"end": 2165,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2135,
											"end": 2165,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 2135,
											"end": 2165,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8266,
											"end": 8382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "510"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8346,
											"end": 8358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D1"
										},
										{
											"begin": 8346,
											"end": 8374,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8266,
											"end": 8382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 5568,
											"end": 5703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "516"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5657,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E2"
										},
										{
											"begin": 5657,
											"end": 5695,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5568,
											"end": 5703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 7322,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7412,
											"end": 7429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E6"
										},
										{
											"begin": 7412,
											"end": 7450,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 5711,
											"end": 5830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "530"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E3"
										},
										{
											"begin": 5792,
											"end": 5822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5711,
											"end": 5830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 5268,
											"end": 5556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C9"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5419,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CB"
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 5430,
											"end": 5438,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5452,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CA"
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5449,
											"end": 5459,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CD"
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5470,
											"end": 5490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CC"
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5519,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5537,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CE"
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5530,
											"end": 5548,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 6725,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DA"
										},
										{
											"begin": 6808,
											"end": 6840,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6725,
											"end": 6848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1441,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 3569,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3638,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3614,
											"end": 3638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3638,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3638,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3683,
											"end": 3699,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3673,
											"end": 3699,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3673,
											"end": 3699,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3718,
											"end": 3734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3749,
											"end": 3758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3877,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 3745,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 3745,
											"end": 3877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "DF"
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3797,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3797,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 3790,
											"end": 3800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "tag",
											"source": 0,
											"value": "557"
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3790,
											"end": 3822,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "PUSH",
											"source": 0,
											"value": "DF"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3858,
											"end": 3859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3848,
											"end": 3860,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3842,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 3837,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 3865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 3771,
											"end": 3774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "tag",
											"source": 0,
											"value": "560"
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3771,
											"end": 3774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 3745,
											"end": 3877,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3268,
											"end": 3287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3291,
											"end": 3304,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3370,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3354,
											"end": 3370,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 3336,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 3377,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 3377,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3421,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3425,
											"end": 3442,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 3376,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10549,
											"end": 10551,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10531,
											"end": 10552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10588,
											"end": 10590,
											"name": "PUSH",
											"source": 13,
											"value": "2E"
										},
										{
											"begin": 10568,
											"end": 10586,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10568,
											"end": 10586,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10568,
											"end": 10586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10561,
											"end": 10591,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 10661,
											"name": "PUSH",
											"source": 13,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 10607,
											"end": 10625,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10607,
											"end": 10625,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10625,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10600,
											"end": 10662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10678,
											"end": 10696,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10678,
											"end": 10696,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10678,
											"end": 10696,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10671,
											"end": 10715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10732,
											"end": 10751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 10347,
											"end": 10757,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 3314,
											"end": 3515,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3540,
											"end": 3541,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3525,
											"end": 3541,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3605,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 3551,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 2197,
											"end": 2211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 2197,
											"end": 2213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "572"
										},
										{
											"begin": 2197,
											"end": 2213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E4"
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2244,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2244,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2244,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CF"
										},
										{
											"begin": 2257,
											"end": 2317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2275,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DF9228FC02F4554CD80AF6D036DADE242022E4F2"
										},
										{
											"begin": 2257,
											"end": 2317,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2257,
											"end": 2317,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D0"
										},
										{
											"begin": 2328,
											"end": 2393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2393,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2393,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2351,
											"end": 2393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4076AF4556458CDD0AD25E86ED23B4DC8437DCE4"
										},
										{
											"begin": 2328,
											"end": 2393,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2393,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2419,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 2404,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D1"
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2444,
											"end": 2448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 2433,
											"end": 2441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D2"
										},
										{
											"begin": 2433,
											"end": 2448,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D3"
										},
										{
											"begin": 2461,
											"end": 2525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2525,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2483,
											"end": 2525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FAE25F1AE4B758D7C96D7EB075B62AF4F3398B89"
										},
										{
											"begin": 2461,
											"end": 2525,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2461,
											"end": 2525,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D4"
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7FBA7858083836D9169EB3BE21A48189E1798C8E"
										},
										{
											"begin": 2536,
											"end": 2592,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2536,
											"end": 2592,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D5"
										},
										{
											"begin": 2603,
											"end": 2661,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2661,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2619,
											"end": 2661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2737AC6359664096F22863088246D885F14E6FF2"
										},
										{
											"begin": 2603,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2661,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2661,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2661,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2661,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2661,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1158E460913D00000"
										},
										{
											"begin": 2682,
											"end": 2699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D6"
										},
										{
											"begin": 2682,
											"end": 2710,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2741,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14542BA12A337C00000"
										},
										{
											"begin": 2721,
											"end": 2738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E6"
										},
										{
											"begin": 2721,
											"end": 2751,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2762,
											"end": 2778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D7"
										},
										{
											"begin": 2762,
											"end": 2784,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2814,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2795,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D8"
										},
										{
											"begin": 2795,
											"end": 2817,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2817,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2847,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D9"
										},
										{
											"begin": 2828,
											"end": 2853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2828,
											"end": 2853,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2864,
											"end": 2878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DA"
										},
										{
											"begin": 2864,
											"end": 2884,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DB"
										},
										{
											"begin": 2895,
											"end": 2957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2957,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2957,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 2957,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DC"
										},
										{
											"begin": 2968,
											"end": 3029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3029,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B36F6361DCF31D0D7956E9E826A9915A5DDEC272"
										},
										{
											"begin": 2968,
											"end": 3029,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3029,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3064,
											"end": 3066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3040,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DD"
										},
										{
											"begin": 3040,
											"end": 3066,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3099,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "43C33C1937564800000"
										},
										{
											"begin": 3077,
											"end": 3096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DE"
										},
										{
											"begin": 3077,
											"end": 3110,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3138,
											"end": 3148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3132,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DF"
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3148,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3135,
											"name": "PUSH",
											"source": 0,
											"value": "4B917336BA36FEFA23B90074E126FE5413F0E3FC800E7AB1DA217D9A2807B711"
										},
										{
											"begin": 3123,
											"end": 3148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "4B917336BA36FEFA23B90074E126FE5413F0E3FC800E7AB1DA217D9A2807B712"
										},
										{
											"begin": 3123,
											"end": 3148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3180,
											"end": 3191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "21E19E0C9BAB2400000"
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3192,
											"end": 3195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3174,
											"end": 3196,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2224,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3196,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3171,
											"name": "PUSH",
											"source": 0,
											"value": "55C38C42E971EEB957B61422467F67FA3B212021AC50A6B2B3D5ACD9D01CB97D"
										},
										{
											"begin": 3159,
											"end": 3196,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3196,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3159,
											"end": 3196,
											"name": "PUSH",
											"source": 0,
											"value": "55C38C42E971EEB957B61422467F67FA3B212021AC50A6B2B3D5ACD9D01CB97E"
										},
										{
											"begin": 3159,
											"end": 3196,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "65A4DA25D3016C00000"
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3240,
											"end": 3243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15E"
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3222,
											"end": 3244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3217,
											"end": 3218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3207,
											"end": 3219,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3219,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3219,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3219,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3219,
											"name": "PUSH",
											"source": 0,
											"value": "36D20378F308040D39A8A5E0299048C5EB6A3E2AF0AAD6FC5CBD63DBA6084C75"
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "PUSH",
											"source": 0,
											"value": "36D20378F308040D39A8A5E0299048C5EB6A3E2AF0AAD6FC5CBD63DBA6084C76"
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "152D02C7E14AF6800000"
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3289,
											"end": 3292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F4"
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3270,
											"end": 3293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3293,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3267,
											"name": "PUSH",
											"source": 0,
											"value": "780609EDA5E52D7936E75EAD8EC77FC018859646A90304D10FB581006956B09E"
										},
										{
											"begin": 3255,
											"end": 3293,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3293,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3255,
											"end": 3293,
											"name": "PUSH",
											"source": 0,
											"value": "780609EDA5E52D7936E75EAD8EC77FC018859646A90304D10FB581006956B09F"
										},
										{
											"begin": 3255,
											"end": 3293,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3306,
											"end": 3320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3320,
											"name": "PUSH",
											"source": 0,
											"value": "29F40CF27A854B63617043F10B660B0F327B8234F55A91E6B6F6E8A2FA39678B"
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3324,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "E3D46F142E20657C402ED08BDF439BABDD6FBB8091E2708315F00847C0F52CC5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3352,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 605,
											"end": 647,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D220B3CF1E4660C5509418B42A86D7945E6E2E18"
										},
										{
											"begin": 3335,
											"end": 3352,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3352,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3385,
											"end": 3393,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E13380"
										},
										{
											"begin": 3365,
											"end": 3382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E2"
										},
										{
											"begin": 3365,
											"end": 3393,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3420,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3C"
										},
										{
											"begin": 3404,
											"end": 3417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E3"
										},
										{
											"begin": 3404,
											"end": 3429,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 3636,
											"end": 3735,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3691,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3670,
											"end": 3691,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 10914,
											"end": 10950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10914,
											"end": 10950,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 7,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10902,
											"end": 10904,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10887,
											"end": 10905,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3724,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2128,
											"end": 3448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2128,
											"end": 3448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 7866,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "580"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "579"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "581"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "CF"
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7952,
											"end": 7986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7986,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7866,
											"end": 7994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 7005,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "586"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "585"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "587"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7097,
											"end": 7113,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D7"
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7135,
											"end": 7151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D8"
										},
										{
											"begin": 7135,
											"end": 7162,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7005,
											"end": 7170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 6443,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DC"
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6530,
											"end": 6566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6530,
											"end": 6566,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6443,
											"end": 6574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "597"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 2,
											"value": "597"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2409,
											"end": 2431,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "599"
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11163,
											"end": 11165,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11145,
											"end": 11166,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11202,
											"end": 11204,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 11182,
											"end": 11200,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11182,
											"end": 11200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11182,
											"end": 11200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11175,
											"end": 11205,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11241,
											"end": 11275,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11221,
											"end": 11239,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11221,
											"end": 11239,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11221,
											"end": 11239,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11214,
											"end": 11276,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11292,
											"end": 11310,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11285,
											"end": 11321,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11338,
											"end": 11357,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11338,
											"end": 11357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 10961,
											"end": 11363,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "599"
										},
										{
											"begin": 2401,
											"end": 2474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 2503,
											"end": 2511,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2484,
											"end": 2502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "508"
										},
										{
											"begin": 2484,
											"end": 2512,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 8002,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "605"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "605"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "604"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "606"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D0"
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8142,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8098,
											"end": 8142,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8002,
											"end": 8150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 7466,
											"end": 7610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "611"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "610"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "612"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D3"
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7602,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7560,
											"end": 7602,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7466,
											"end": 7610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 6582,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2047,
											"end": 2057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "E5"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2076,
											"end": 2083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 2076,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2072,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2062,
											"end": 2083,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "tag",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 2041,
											"end": 2083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 2033,
											"end": 2096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "tag",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 2033,
											"end": 2096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6688,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "DB"
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6671,
											"end": 6709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6671,
											"end": 6709,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6582,
											"end": 6717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "624"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 1662,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "tag",
											"source": 2,
											"value": "624"
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11570,
											"end": 11572,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11552,
											"end": 11573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11552,
											"end": 11573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11552,
											"end": 11573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11589,
											"end": 11607,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11589,
											"end": 11607,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11589,
											"end": 11607,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11582,
											"end": 11612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11648,
											"end": 11682,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11628,
											"end": 11646,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11628,
											"end": 11646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11628,
											"end": 11646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11621,
											"end": 11683,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11700,
											"end": 11718,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11700,
											"end": 11718,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 11368,
											"end": 11724,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1509,
											"end": 1660,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 1509,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1588,
											"end": 1653,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3561,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 3495,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 1334,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2884,
											"end": 3858,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 2884,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1089,
											"name": "PUSH",
											"source": 5,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3330,
											"end": 3389,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3330,
											"end": 3389,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3330,
											"end": 3389,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "637"
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 3424,
											"end": 3441,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "639"
										},
										{
											"begin": 3405,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "tag",
											"source": 5,
											"value": "637"
										},
										{
											"begin": 3326,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3523,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3538,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3538,
											"name": "PUSH",
											"source": 5,
											"value": "52D1902D"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "641"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "642"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "643"
										},
										{
											"begin": 3477,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "tag",
											"source": 5,
											"value": "642"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "tag",
											"source": 5,
											"value": "641"
										},
										{
											"begin": 3477,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "644"
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12120,
											"end": 12122,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12102,
											"end": 12123,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12159,
											"end": 12161,
											"name": "PUSH",
											"source": 13,
											"value": "2E"
										},
										{
											"begin": 12139,
											"end": 12157,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12139,
											"end": 12157,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12139,
											"end": 12157,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12162,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12198,
											"end": 12232,
											"name": "PUSH",
											"source": 13,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12178,
											"end": 12196,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12171,
											"end": 12233,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E206973206E6F742055555053"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12249,
											"end": 12267,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12249,
											"end": 12267,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12249,
											"end": 12267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12242,
											"end": 12286,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12303,
											"end": 12322,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 12303,
											"end": 12322,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3704,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 11918,
											"end": 12328,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "tag",
											"source": 5,
											"value": "644"
										},
										{
											"begin": 3473,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3590,
											"end": 3618,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3590,
											"end": 3618,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "651"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12535,
											"end": 12537,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12517,
											"end": 12538,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12574,
											"end": 12576,
											"name": "PUSH",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 12554,
											"end": 12572,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12554,
											"end": 12572,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12554,
											"end": 12572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12547,
											"end": 12577,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12613,
											"end": 12647,
											"name": "PUSH",
											"source": 13,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 12593,
											"end": 12611,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12593,
											"end": 12611,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12593,
											"end": 12611,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12586,
											"end": 12648,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A58589B1955555251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12664,
											"end": 12682,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12664,
											"end": 12682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12664,
											"end": 12682,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12696,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12732,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 12713,
											"end": 12732,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 12333,
											"end": 12738,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "tag",
											"source": 5,
											"value": "651"
										},
										{
											"begin": 3582,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3541,
											"end": 3679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 3806,
											"end": 3823,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3829,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3831,
											"end": 3840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3788,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "655"
										},
										{
											"begin": 3788,
											"end": 3841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 2,
											"value": "508"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2673,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 1186,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1186,
											"end": 1506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 2,
											"value": "573"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "659"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 5355,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 7,
											"value": "659"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1065,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 1065,
											"end": 1089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "664"
										},
										{
											"begin": 1065,
											"end": 1091,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1751,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "639"
										},
										{
											"begin": 1751,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "669"
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "565"
										},
										{
											"begin": 1832,
											"end": 1880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "tag",
											"source": 5,
											"value": "669"
										},
										{
											"begin": 1832,
											"end": 1880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "670"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13357,
											"end": 13359,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13339,
											"end": 13360,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13396,
											"end": 13398,
											"name": "PUSH",
											"source": 13,
											"value": "2D"
										},
										{
											"begin": 13376,
											"end": 13394,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13376,
											"end": 13394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13376,
											"end": 13394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13369,
											"end": 13399,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13435,
											"end": 13469,
											"name": "PUSH",
											"source": 13,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13415,
											"end": 13433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13408,
											"end": 13470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13486,
											"end": 13504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13479,
											"end": 13522,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13539,
											"end": 13558,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13539,
											"end": 13558,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 13155,
											"end": 13564,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "tag",
											"source": 5,
											"value": "670"
										},
										{
											"begin": 1824,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 2025,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1751,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "tag",
											"source": 5,
											"value": "655"
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2562,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "675"
										},
										{
											"begin": 2573,
											"end": 2590,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2562,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "676"
										},
										{
											"begin": 2562,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2562,
											"end": 2591,
											"name": "tag",
											"source": 5,
											"value": "675"
										},
										{
											"begin": 2562,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2609,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2616,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2620,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "677"
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "tag",
											"source": 5,
											"value": "677"
										},
										{
											"begin": 2605,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2706,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 2601,
											"end": 2706,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "679"
										},
										{
											"begin": 2671,
											"end": 2688,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2694,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2649,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "680"
										},
										{
											"begin": 2649,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "tag",
											"source": 5,
											"value": "679"
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2649,
											"end": 2695,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 2,
											"value": "664"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "682"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 5355,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "tag",
											"source": 7,
											"value": "682"
										},
										{
											"begin": 5355,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "508"
										},
										{
											"begin": 1176,
											"end": 1208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2138,
											"end": 2290,
											"name": "tag",
											"source": 5,
											"value": "676"
										},
										{
											"begin": 2138,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "688"
										},
										{
											"begin": 2223,
											"end": 2240,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "639"
										},
										{
											"begin": 2204,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "tag",
											"source": 5,
											"value": "688"
										},
										{
											"begin": 2204,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "PUSH",
											"source": 5,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2283,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "tag",
											"source": 5,
											"value": "680"
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6863,
											"end": 6875,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "690"
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "565"
										},
										{
											"begin": 6895,
											"end": 6932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "tag",
											"source": 5,
											"value": "690"
										},
										{
											"begin": 6895,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "691"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13771,
											"end": 13773,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13753,
											"end": 13774,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13810,
											"end": 13812,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13790,
											"end": 13808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13783,
											"end": 13813,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13849,
											"end": 13883,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
										},
										{
											"begin": 13829,
											"end": 13847,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13829,
											"end": 13847,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13829,
											"end": 13847,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13822,
											"end": 13884,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13900,
											"end": 13918,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13900,
											"end": 13918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13900,
											"end": 13918,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13893,
											"end": 13929,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13946,
											"end": 13965,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13946,
											"end": 13965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "355"
										},
										{
											"begin": 13569,
											"end": 13971,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "tag",
											"source": 5,
											"value": "691"
										},
										{
											"begin": 6887,
											"end": 6975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7060,
											"end": 7083,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7106,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7107,
											"end": 7111,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "694"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "695"
										},
										{
											"begin": 7087,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 5,
											"value": "694"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DELEGATECALL",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "698"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "697"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 5,
											"value": "698"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "tag",
											"source": 5,
											"value": "697"
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7045,
											"end": 7112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "699"
										},
										{
											"begin": 7165,
											"end": 7172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7174,
											"end": 7184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH data",
											"source": 5,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "PUSH",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "700"
										},
										{
											"begin": 7129,
											"end": 7228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "tag",
											"source": 5,
											"value": "699"
										},
										{
											"begin": 7129,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7228,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 6780,
											"end": 7235,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6780,
											"end": 7235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "tag",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7584,
											"end": 7596,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7612,
											"end": 7619,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7642,
											"end": 7652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7635,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 7635,
											"end": 7652,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "tag",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 7608,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 7691,
											"end": 7701,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7703,
											"end": 7715,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 7683,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "tag",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 7683,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7739,
											"end": 8279,
											"name": "tag",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 7739,
											"end": 8279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7898,
											"end": 7915,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7898,
											"end": 7915,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 7898,
											"end": 7919,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8126,
											"end": 8136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8120,
											"end": 8137,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8182,
											"end": 8197,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8169,
											"end": 8179,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8165,
											"end": 8167,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8154,
											"end": 8198,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "tag",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 7894,
											"end": 8273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8249,
											"end": 8261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 8242,
											"end": 8262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "719"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 13,
											"value": "719"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 407,
											"end": 580,
											"name": "tag",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 407,
											"end": 580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 475,
											"end": 495,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 475,
											"end": 495,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 524,
											"end": 555,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 524,
											"end": 555,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 514,
											"end": 556,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 514,
											"end": 556,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 504,
											"end": 574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "722"
										},
										{
											"begin": 504,
											"end": 574,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 570,
											"end": 571,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 560,
											"end": 572,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 504,
											"end": 574,
											"name": "tag",
											"source": 13,
											"value": "722"
										},
										{
											"begin": 504,
											"end": 574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 407,
											"end": 580,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 407,
											"end": 580,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 407,
											"end": 580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 407,
											"end": 580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 585,
											"end": 771,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 585,
											"end": 771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 644,
											"end": 650,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 697,
											"end": 699,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 676,
											"end": 683,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 672,
											"end": 695,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 668,
											"end": 700,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 717,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 665,
											"end": 717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "724"
										},
										{
											"begin": 665,
											"end": 717,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 713,
											"end": 714,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 711,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 703,
											"end": 715,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 665,
											"end": 717,
											"name": "tag",
											"source": 13,
											"value": "724"
										},
										{
											"begin": 665,
											"end": 717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 736,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 755,
											"end": 764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 736,
											"end": 765,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 736,
											"end": 765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 958,
											"end": 1419,
											"name": "tag",
											"source": 13,
											"value": "712"
										},
										{
											"begin": 958,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1011,
											"end": 1014,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1054,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1076,
											"end": 1082,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1071,
											"end": 1074,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1064,
											"end": 1083,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1126,
											"end": 1129,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1134,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1115,
											"end": 1134,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1115,
											"end": 1134,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1168,
											"end": 1170,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1166,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1157,
											"end": 1171,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1199,
											"end": 1394,
											"name": "tag",
											"source": 13,
											"value": "728"
										},
										{
											"begin": 1199,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1207,
											"end": 1220,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1199,
											"end": 1394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1199,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 1199,
											"end": 1394,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1278,
											"end": 1291,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1278,
											"end": 1291,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1274,
											"end": 1313,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1314,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1314,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1346,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1346,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1334,
											"end": 1346,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1369,
											"end": 1384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1311,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1228,
											"end": 1237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1199,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "728"
										},
										{
											"begin": 1199,
											"end": 1394,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1199,
											"end": 1394,
											"name": "tag",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 1199,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1410,
											"end": 1413,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1410,
											"end": 1413,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 958,
											"end": 1419,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 958,
											"end": 1419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1424,
											"end": 1685,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 1424,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1605,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1601,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1585,
											"end": 1606,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1570,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 1675,
											"end": 1677,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1664,
											"end": 1673,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1678,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "712"
										},
										{
											"begin": 1623,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1690,
											"end": 2125,
											"name": "tag",
											"source": 13,
											"value": "713"
										},
										{
											"begin": 1690,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1743,
											"end": 1746,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1781,
											"end": 1786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1775,
											"end": 1787,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1808,
											"end": 1814,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1803,
											"end": 1806,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1796,
											"end": 1815,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1834,
											"end": 1838,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1863,
											"end": 1865,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1858,
											"end": 1861,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1866,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1902,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1898,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 1903,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 2100,
											"name": "tag",
											"source": 13,
											"value": "734"
										},
										{
											"begin": 1931,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1943,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1939,
											"end": 1952,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1931,
											"end": 2100,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1931,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 1931,
											"end": 2100,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2006,
											"end": 2019,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2006,
											"end": 2019,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2020,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2020,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2040,
											"end": 2052,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2040,
											"end": 2052,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2040,
											"end": 2052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2040,
											"end": 2052,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2075,
											"end": 2090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1960,
											"end": 1969,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1931,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "734"
										},
										{
											"begin": 1931,
											"end": 2100,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2391,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 2130,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2309,
											"end": 2311,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2307,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2291,
											"end": 2312,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2272,
											"end": 2276,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2329,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 2381,
											"end": 2383,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2379,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "713"
										},
										{
											"begin": 2329,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2649,
											"end": 2903,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 2649,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2717,
											"end": 2723,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2731,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2780,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2775,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2757,
											"end": 2764,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2776,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2749,
											"end": 2781,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "741"
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2794,
											"end": 2795,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2784,
											"end": 2796,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "tag",
											"source": 13,
											"value": "741"
										},
										{
											"begin": 2746,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2817,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "742"
										},
										{
											"begin": 2836,
											"end": 2845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2817,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 2817,
											"end": 2846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2817,
											"end": 2846,
											"name": "tag",
											"source": 13,
											"value": "742"
										},
										{
											"begin": 2817,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2807,
											"end": 2846,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 2896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2865,
											"end": 2897,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2865,
											"end": 2897,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2908,
											"end": 3035,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 2908,
											"end": 3035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2969,
											"end": 2979,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2964,
											"end": 2967,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2960,
											"end": 2980,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2958,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2950,
											"end": 2981,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3000,
											"end": 3004,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2990,
											"end": 3005,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3028,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3029,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3315,
											"name": "tag",
											"source": 13,
											"value": "714"
										},
										{
											"begin": 3040,
											"end": 3315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3111,
											"end": 3113,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3157,
											"end": 3170,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3157,
											"end": 3170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3153,
											"end": 3180,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3181,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3181,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3196,
											"end": 3230,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3230,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3254,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3232,
											"end": 3254,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3193,
											"end": 3255,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3190,
											"end": 3278,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3190,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "746"
										},
										{
											"begin": 3190,
											"end": 3278,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "746"
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 3258,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "tag",
											"source": 13,
											"value": "746"
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3294,
											"end": 3296,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3309,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3315,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3315,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3040,
											"end": 3315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 4032,
											"name": "tag",
											"source": 13,
											"value": "715"
										},
										{
											"begin": 3320,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3374,
											"end": 3379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3424,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3412,
											"end": 3418,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3408,
											"end": 3425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3431,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "748"
										},
										{
											"begin": 3394,
											"end": 3449,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3449,
											"name": "tag",
											"source": 13,
											"value": "748"
										},
										{
											"begin": 3394,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3488,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3507,
											"end": 3511,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3523,
											"end": 3549,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3549,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3520,
											"end": 3572,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3520,
											"end": 3572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "750"
										},
										{
											"begin": 3520,
											"end": 3572,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "750"
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 3552,
											"end": 3570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "tag",
											"source": 13,
											"value": "750"
										},
										{
											"begin": 3552,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3591,
											"end": 3601,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3621,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "751"
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3637,
											"end": 3648,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3621,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "714"
										},
										{
											"begin": 3621,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3621,
											"end": 3649,
											"name": "tag",
											"source": 13,
											"value": "751"
										},
										{
											"begin": 3621,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3698,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3698,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3683,
											"end": 3698,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3768,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3768,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3753,
											"end": 3768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3726,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3785,
											"end": 3800,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "752"
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3813,
											"end": 3814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3811,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "tag",
											"source": 13,
											"value": "752"
										},
										{
											"begin": 3782,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3849,
											"end": 3851,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3841,
											"end": 3847,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3837,
											"end": 3852,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3852,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 4003,
											"name": "tag",
											"source": 13,
											"value": "753"
										},
										{
											"begin": 3861,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3872,
											"end": 3875,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3884,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 4003,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "755"
										},
										{
											"begin": 3861,
											"end": 4003,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 3960,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3943,
											"end": 3960,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3931,
											"end": 3961,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3931,
											"end": 3961,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3894,
											"end": 3906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3894,
											"end": 3906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3894,
											"end": 3906,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3894,
											"end": 3906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 3993,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 3993,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 3993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 3993,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "753"
										},
										{
											"begin": 3861,
											"end": 4003,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 4003,
											"name": "tag",
											"source": 13,
											"value": "755"
										},
										{
											"begin": 3861,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4021,
											"end": 4026,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 4032,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3320,
											"end": 4032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4632,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 4037,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4202,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4191,
											"end": 4214,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4219,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4236,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "757"
										},
										{
											"begin": 4184,
											"end": 4236,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4232,
											"end": 4233,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4229,
											"end": 4230,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4234,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4184,
											"end": 4236,
											"name": "tag",
											"source": 13,
											"value": "757"
										},
										{
											"begin": 4184,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4259,
											"end": 4282,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4259,
											"end": 4282,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4331,
											"end": 4345,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 4345,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 4345,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "758"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4358,
											"end": 4359,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "tag",
											"source": 13,
											"value": "758"
										},
										{
											"begin": 4328,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4381,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "759"
										},
										{
											"begin": 4434,
											"end": 4441,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4425,
											"end": 4431,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4414,
											"end": 4423,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4381,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "715"
										},
										{
											"begin": 4381,
											"end": 4442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4381,
											"end": 4442,
											"name": "tag",
											"source": 13,
											"value": "759"
										},
										{
											"begin": 4381,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4442,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4371,
											"end": 4442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4493,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4480,
											"end": 4498,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4467,
											"end": 4499,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4499,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4524,
											"end": 4526,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4514,
											"end": 4522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4527,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "760"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4540,
											"end": 4541,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4538,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4530,
											"end": 4542,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "tag",
											"source": 13,
											"value": "760"
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "761"
										},
										{
											"begin": 4618,
											"end": 4625,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4607,
											"end": 4615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4596,
											"end": 4605,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4592,
											"end": 4616,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "715"
										},
										{
											"begin": 4563,
											"end": 4626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4563,
											"end": 4626,
											"name": "tag",
											"source": 13,
											"value": "761"
										},
										{
											"begin": 4563,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4553,
											"end": 4626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4553,
											"end": 4626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4553,
											"end": 4626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4632,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4632,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4984,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 4637,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4702,
											"end": 4708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4716,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4763,
											"end": 4765,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4742,
											"end": 4749,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4738,
											"end": 4761,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4734,
											"end": 4766,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4731,
											"end": 4783,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4731,
											"end": 4783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 4731,
											"end": 4783,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4780,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 4777,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4731,
											"end": 4783,
											"name": "tag",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 4731,
											"end": 4783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "764"
										},
										{
											"begin": 4821,
											"end": 4830,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 4802,
											"end": 4831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4802,
											"end": 4831,
											"name": "tag",
											"source": 13,
											"value": "764"
										},
										{
											"begin": 4802,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4831,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4792,
											"end": 4831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4881,
											"end": 4883,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4870,
											"end": 4879,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4866,
											"end": 4884,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 4885,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4928,
											"end": 4933,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4921,
											"end": 4934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4935,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4907,
											"end": 4912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4904,
											"end": 4936,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "765"
										},
										{
											"begin": 4894,
											"end": 4954,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4950,
											"end": 4951,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4948,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4940,
											"end": 4952,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4954,
											"name": "tag",
											"source": 13,
											"value": "765"
										},
										{
											"begin": 4894,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4973,
											"end": 4978,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4963,
											"end": 4978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4963,
											"end": 4978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4963,
											"end": 4978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4984,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4984,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4984,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5826,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 4989,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5066,
											"end": 5072,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5074,
											"end": 5080,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5127,
											"end": 5129,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5124,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5106,
											"end": 5113,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5102,
											"end": 5125,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5098,
											"end": 5130,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5095,
											"end": 5147,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5095,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "767"
										},
										{
											"begin": 5095,
											"end": 5147,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5143,
											"end": 5144,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5140,
											"end": 5141,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5133,
											"end": 5145,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5095,
											"end": 5147,
											"name": "tag",
											"source": 13,
											"value": "767"
										},
										{
											"begin": 5095,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 5166,
											"end": 5195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "tag",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 5166,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5156,
											"end": 5195,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5214,
											"end": 5216,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5252,
											"end": 5270,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5252,
											"end": 5270,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5252,
											"end": 5270,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5239,
											"end": 5271,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5334,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "769"
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5345,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 5349,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "tag",
											"source": 13,
											"value": "769"
										},
										{
											"begin": 5317,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5383,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5370,
											"end": 5392,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5392,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5360,
											"end": 5392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5430,
											"end": 5437,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5427,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5419,
											"end": 5421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5411,
											"end": 5438,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "770"
										},
										{
											"begin": 5401,
											"end": 5456,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5452,
											"end": 5453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5450,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5442,
											"end": 5454,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5401,
											"end": 5456,
											"name": "tag",
											"source": 13,
											"value": "770"
										},
										{
											"begin": 5401,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5490,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5491,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5510,
											"end": 5512,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5503,
											"end": 5513,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5536,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "772"
										},
										{
											"begin": 5500,
											"end": 5536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "772"
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 5516,
											"end": 5534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "tag",
											"source": 13,
											"value": "772"
										},
										{
											"begin": 5516,
											"end": 5534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5558,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "773"
										},
										{
											"begin": 5601,
											"end": 5603,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5582,
											"end": 5595,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5578,
											"end": 5605,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5574,
											"end": 5610,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5574,
											"end": 5610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5558,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "714"
										},
										{
											"begin": 5558,
											"end": 5611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5558,
											"end": 5611,
											"name": "tag",
											"source": 13,
											"value": "773"
										},
										{
											"begin": 5558,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5545,
											"end": 5611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 5636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5627,
											"end": 5632,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5620,
											"end": 5637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5674,
											"end": 5681,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5669,
											"end": 5671,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5664,
											"end": 5666,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5660,
											"end": 5662,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5656,
											"end": 5667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5652,
											"end": 5672,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5682,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "774"
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5685,
											"end": 5697,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "tag",
											"source": 13,
											"value": "774"
										},
										{
											"begin": 5646,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5745,
											"end": 5747,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5741,
											"end": 5743,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5737,
											"end": 5748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5732,
											"end": 5734,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5725,
											"end": 5730,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5721,
											"end": 5735,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5708,
											"end": 5753,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 5794,
											"end": 5795,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5791,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5784,
											"end": 5786,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5777,
											"end": 5782,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5773,
											"end": 5787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5792,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5796,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5762,
											"end": 5796,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5815,
											"end": 5820,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5805,
											"end": 5820,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5805,
											"end": 5820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5805,
											"end": 5820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5805,
											"end": 5820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5805,
											"end": 5820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5826,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5826,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4989,
											"end": 5826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6478,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 6013,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6272,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6259,
											"end": 6268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6252,
											"end": 6273,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6237,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6296,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "777"
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6337,
											"end": 6346,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6333,
											"end": 6351,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6296,
											"end": 6352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "712"
										},
										{
											"begin": 6296,
											"end": 6352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6296,
											"end": 6352,
											"name": "tag",
											"source": 13,
											"value": "777"
										},
										{
											"begin": 6296,
											"end": 6352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6392,
											"end": 6398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6388,
											"end": 6410,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6372,
											"end": 6381,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6368,
											"end": 6386,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6411,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6428,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "699"
										},
										{
											"begin": 6465,
											"end": 6471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6463,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6428,
											"end": 6472,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "713"
										},
										{
											"begin": 6428,
											"end": 6472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6587,
											"end": 6593,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6595,
											"end": 6601,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6617,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6619,
											"end": 6625,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6627,
											"end": 6633,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6680,
											"end": 6683,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 6668,
											"end": 6677,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6666,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6678,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6651,
											"end": 6684,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "780"
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6687,
											"end": 6699,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "tag",
											"source": 13,
											"value": "780"
										},
										{
											"begin": 6648,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "781"
										},
										{
											"begin": 6739,
											"end": 6748,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 6720,
											"end": 6749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6749,
											"name": "tag",
											"source": 13,
											"value": "781"
										},
										{
											"begin": 6720,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6710,
											"end": 6749,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6710,
											"end": 6749,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6768,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "782"
										},
										{
											"begin": 6802,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6791,
											"end": 6800,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6768,
											"end": 6806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 6768,
											"end": 6806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6768,
											"end": 6806,
											"name": "tag",
											"source": 13,
											"value": "782"
										},
										{
											"begin": 6768,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6806,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6758,
											"end": 6806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6825,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "783"
										},
										{
											"begin": 6859,
											"end": 6861,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6848,
											"end": 6857,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6844,
											"end": 6862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6825,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 6825,
											"end": 6863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6825,
											"end": 6863,
											"name": "tag",
											"source": 13,
											"value": "783"
										},
										{
											"begin": 6825,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6815,
											"end": 6863,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6815,
											"end": 6863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "784"
										},
										{
											"begin": 6916,
											"end": 6918,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6901,
											"end": 6919,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 6882,
											"end": 6920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6920,
											"name": "tag",
											"source": 13,
											"value": "784"
										},
										{
											"begin": 6882,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6872,
											"end": 6920,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6872,
											"end": 6920,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6939,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "785"
										},
										{
											"begin": 6973,
											"end": 6976,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6962,
											"end": 6971,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6958,
											"end": 6977,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6939,
											"end": 6978,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 6939,
											"end": 6978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6939,
											"end": 6978,
											"name": "tag",
											"source": 13,
											"value": "785"
										},
										{
											"begin": 6939,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 6978,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6929,
											"end": 6978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6997,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "786"
										},
										{
											"begin": 7031,
											"end": 7034,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 7020,
											"end": 7029,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7016,
											"end": 7035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6997,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "711"
										},
										{
											"begin": 6997,
											"end": 7036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6997,
											"end": 7036,
											"name": "tag",
											"source": 13,
											"value": "786"
										},
										{
											"begin": 6997,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 7036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 7036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6483,
											"end": 7042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7047,
											"end": 7512,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 7047,
											"end": 7512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7304,
											"end": 7306,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7293,
											"end": 7302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7286,
											"end": 7307,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7267,
											"end": 7271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "777"
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7371,
											"end": 7380,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7359,
											"end": 7365,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7330,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "713"
										},
										{
											"begin": 7330,
											"end": 7386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7517,
											"end": 7765,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 7517,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7593,
											"end": 7599,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7646,
											"end": 7648,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7634,
											"end": 7643,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7621,
											"end": 7644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7649,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7614,
											"end": 7666,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7614,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "791"
										},
										{
											"begin": 7614,
											"end": 7666,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 7663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7660,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7664,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7614,
											"end": 7666,
											"name": "tag",
											"source": 13,
											"value": "791"
										},
										{
											"begin": 7614,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7685,
											"end": 7708,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7685,
											"end": 7708,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7685,
											"end": 7708,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7757,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7759,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7517,
											"end": 7765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7770,
											"end": 8102,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 7770,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7972,
											"end": 7974,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7954,
											"end": 7975,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7954,
											"end": 7975,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7954,
											"end": 7975,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8011,
											"end": 8012,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 7991,
											"end": 8009,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7991,
											"end": 8009,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7991,
											"end": 8009,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7984,
											"end": 8013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8044,
											"end": 8046,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8029,
											"end": 8047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8022,
											"end": 8061,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8093,
											"end": 8095,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8078,
											"end": 8096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8078,
											"end": 8096,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7770,
											"end": 8102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8107,
											"end": 8234,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 8107,
											"end": 8234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8168,
											"end": 8178,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 8163,
											"end": 8166,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 8159,
											"end": 8179,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8156,
											"end": 8157,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8180,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8199,
											"end": 8203,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 8196,
											"end": 8197,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8189,
											"end": 8204,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8223,
											"end": 8227,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8220,
											"end": 8221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8213,
											"end": 8228,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8239,
											"end": 8647,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 8239,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8443,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8423,
											"end": 8444,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8423,
											"end": 8444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8423,
											"end": 8444,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8482,
											"name": "PUSH",
											"source": 13,
											"value": "2C"
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8460,
											"end": 8478,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8453,
											"end": 8483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "662A7BA1D8FB60BEFF3D02117181416EB800676FA4D6F1EBC4C3FEA5CD79EC88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 8516,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8499,
											"end": 8517,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8492,
											"end": 8554,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8585,
											"end": 8587,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 8588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8563,
											"end": 8605,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8637,
											"end": 8640,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8622,
											"end": 8641,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8622,
											"end": 8641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8239,
											"end": 8647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8652,
											"end": 9060,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 8652,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8854,
											"end": 8856,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8836,
											"end": 8857,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8836,
											"end": 8857,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8893,
											"end": 8895,
											"name": "PUSH",
											"source": 13,
											"value": "2C"
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8866,
											"end": 8896,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "662A7BA1D8FB60BEFF3D02117181416EB800676FA4D6F1EBC4C3FEA5CD79EC88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8927,
											"end": 8929,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8912,
											"end": 8930,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8905,
											"end": 8967,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6163746976652070726F7879"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8998,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8983,
											"end": 9001,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8983,
											"end": 9001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8976,
											"end": 9018,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9050,
											"end": 9053,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9035,
											"end": 9054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9035,
											"end": 9054,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8652,
											"end": 9060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9406,
											"end": 9638,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 9406,
											"end": 9638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9445,
											"end": 9448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9466,
											"end": 9483,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9466,
											"end": 9483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9466,
											"end": 9483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9463,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "798"
										},
										{
											"begin": 9463,
											"end": 9603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9525,
											"end": 9535,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9520,
											"end": 9523,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9516,
											"end": 9536,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9513,
											"end": 9514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 9537,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9560,
											"end": 9564,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 9557,
											"end": 9558,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9550,
											"end": 9565,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9588,
											"end": 9592,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9585,
											"end": 9586,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9463,
											"end": 9603,
											"name": "tag",
											"source": 13,
											"value": "798"
										},
										{
											"begin": 9463,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9630,
											"end": 9631,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 9619,
											"end": 9632,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9619,
											"end": 9632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9406,
											"end": 9638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11913,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 11729,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11799,
											"end": 11805,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11840,
											"end": 11849,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11831,
											"end": 11838,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11827,
											"end": 11850,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11823,
											"end": 11855,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 11820,
											"end": 11872,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11820,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "806"
										},
										{
											"begin": 11820,
											"end": 11872,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11868,
											"end": 11869,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11866,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11858,
											"end": 11870,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11820,
											"end": 11872,
											"name": "tag",
											"source": 13,
											"value": "806"
										},
										{
											"begin": 11820,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11891,
											"end": 11907,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11891,
											"end": 11907,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11729,
											"end": 11913,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11729,
											"end": 11913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12743,
											"end": 13150,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 12743,
											"end": 13150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12945,
											"end": 12947,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12927,
											"end": 12948,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12927,
											"end": 12948,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12984,
											"end": 12986,
											"name": "PUSH",
											"source": 13,
											"value": "2B"
										},
										{
											"begin": 12964,
											"end": 12982,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 12982,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 12982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12957,
											"end": 12987,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13023,
											"end": 13057,
											"name": "PUSH",
											"source": 13,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 13018,
											"end": 13020,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13003,
											"end": 13021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13003,
											"end": 13021,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12996,
											"end": 13058,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13089,
											"end": 13091,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13074,
											"end": 13092,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13067,
											"end": 13108,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13140,
											"end": 13143,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 13125,
											"end": 13144,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13125,
											"end": 13144,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12743,
											"end": 13150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13976,
											"end": 14226,
											"name": "tag",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 13976,
											"end": 14226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14061,
											"end": 14062,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14071,
											"end": 14184,
											"name": "tag",
											"source": 13,
											"value": "813"
										},
										{
											"begin": 14071,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14085,
											"end": 14091,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14082,
											"end": 14083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14079,
											"end": 14092,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14071,
											"end": 14184,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14071,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "815"
										},
										{
											"begin": 14071,
											"end": 14184,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14161,
											"end": 14172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14161,
											"end": 14172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14161,
											"end": 14172,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14155,
											"end": 14173,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14142,
											"end": 14153,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14142,
											"end": 14153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14142,
											"end": 14153,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14135,
											"end": 14174,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14107,
											"end": 14109,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14100,
											"end": 14110,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14071,
											"end": 14184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "813"
										},
										{
											"begin": 14071,
											"end": 14184,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14071,
											"end": 14184,
											"name": "tag",
											"source": 13,
											"value": "815"
										},
										{
											"begin": 14071,
											"end": 14184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14218,
											"end": 14219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14200,
											"end": 14216,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14200,
											"end": 14216,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14193,
											"end": 14220,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13976,
											"end": 14226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14231,
											"end": 14518,
											"name": "tag",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 14231,
											"end": 14518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14360,
											"end": 14363,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14398,
											"end": 14404,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14392,
											"end": 14405,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "817"
										},
										{
											"begin": 14473,
											"end": 14479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14468,
											"end": 14471,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14461,
											"end": 14465,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14453,
											"end": 14459,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14449,
											"end": 14466,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 14414,
											"end": 14480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14414,
											"end": 14480,
											"name": "tag",
											"source": 13,
											"value": "817"
										},
										{
											"begin": 14414,
											"end": 14480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14496,
											"end": 14512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14496,
											"end": 14512,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14496,
											"end": 14512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14496,
											"end": 14512,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14496,
											"end": 14512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14231,
											"end": 14518,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14231,
											"end": 14518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14523,
											"end": 14919,
											"name": "tag",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 14523,
											"end": 14919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14672,
											"end": 14674,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14661,
											"end": 14670,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14654,
											"end": 14675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14635,
											"end": 14639,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14704,
											"end": 14710,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14698,
											"end": 14711,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14747,
											"end": 14753,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14742,
											"end": 14744,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14731,
											"end": 14740,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14727,
											"end": 14745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14720,
											"end": 14754,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14763,
											"end": 14842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "819"
										},
										{
											"begin": 14835,
											"end": 14841,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14830,
											"end": 14832,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14819,
											"end": 14828,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14815,
											"end": 14833,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14810,
											"end": 14812,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14802,
											"end": 14808,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14798,
											"end": 14813,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14763,
											"end": 14842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "716"
										},
										{
											"begin": 14763,
											"end": 14842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14763,
											"end": 14842,
											"name": "tag",
											"source": 13,
											"value": "819"
										},
										{
											"begin": 14763,
											"end": 14842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14903,
											"end": 14905,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 14882,
											"end": 14897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14878,
											"end": 14907,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14863,
											"end": 14908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14863,
											"end": 14908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14863,
											"end": 14908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14863,
											"end": 14908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14910,
											"end": 14912,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14859,
											"end": 14913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14859,
											"end": 14913,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14523,
											"end": 14919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14523,
											"end": 14919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									],
									".data": {
										"662A7BA1D8FB60BEFF3D02117181416EB800676FA4D6F1EBC4C3FEA5CD79EC88": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
										"E3D46F142E20657C402ED08BDF439BABDD6FBB8091E2708315F00847C0F52CC5": "3efdd7a884ff9e18c9e5711c185aa6c5e413b68f23197997da5b1665ca978f99"
									}
								}
							},
							"sourceList": [
								"contracts/ACConfig.sol",
								"contracts/pair/IBTBPair.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acb()": "5bff9787",
							"acbPair()": "5250c9b5",
							"airdropMachine(address,uint256)": "57629f82",
							"changeClaimInterval(uint256)": "796f838e",
							"changeMachineExpireTime(uint256)": "7634b070",
							"changeMarketAddress(address)": "35aed778",
							"changeMaxComputingPower(uint256)": "767608e2",
							"changeMinComputingPower(uint256)": "3360364d",
							"changeMonthDividenAddress(address)": "f7656704",
							"changeMvCollectionAddress(address)": "f80183b2",
							"changeOperator(address)": "06394c9b",
							"changePlatformAddress(address)": "cde85744",
							"changePlatformRate(uint256)": "72765009",
							"changeRefRewardRate(uint256,uint256)": "e3d9aa05",
							"changeRemainingAddress(address)": "eb2266bc",
							"changeSameLevelRewardRate(uint256)": "498c1e3c",
							"changeShareHolderMinLimit(uint256)": "66bf8f83",
							"changeShareHolderRewardRate(uint256)": "19a2ef5f",
							"changeSwapRate(uint256)": "08f93bd8",
							"changeTeamLevel(uint256[],uint256[])": "3b2c2e55",
							"changeTeamRewardAddress(address)": "ff858079",
							"changeTeamRewardRate(uint256)": "863be1ab",
							"changeTechAddress(address)": "669934a9",
							"claimInterval()": "0b433a12",
							"getRateConfig()": "1e79aa0a",
							"getTeamAddress()": "182d326e",
							"getTeamLevel()": "9a3135a8",
							"getUserLevels()": "6b1a9c07",
							"initialize(address)": "c4d66de8",
							"machineExpireTime()": "2d8852ee",
							"marketAddress()": "95623641",
							"maxComputingPower()": "3d08e5b3",
							"minComputingPower()": "85adb294",
							"minePool()": "602e6623",
							"mmStore()": "4dd40234",
							"monthDividendAddress()": "b2cf085e",
							"mv()": "8f05cdf5",
							"mvCollectionAddress()": "e9d610e5",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"platformAddress()": "dbe55e56",
							"platformRate()": "36e0cac6",
							"proxiableUUID()": "52d1902d",
							"refRewardOneRate()": "8a5705d4",
							"refRewardTwoRate()": "434f9736",
							"remainingAddress()": "f97fe091",
							"renounceOwnership()": "715018a6",
							"sameLevelRewardRate()": "ee787b11",
							"setAdmin(address,bool)": "4b0bddd2",
							"setConfig(address,address,address,address,address,address)": "812df395",
							"setUserLevel(address,uint256)": "33f5780e",
							"shareHolderMinLimit()": "21596c25",
							"shareHolderRewardRate()": "39cbc405",
							"swapRate()": "698518e5",
							"teamLevel(uint256)": "254720b7",
							"teamRewardAddress()": "4b21ddec",
							"teamRewardRate()": "8e10ef0b",
							"techAddress()": "1e56cfab",
							"top()": "fe6dcdba",
							"transferOwnership(address)": "f2fde38b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"usdt()": "2f48ab7d",
							"userArr(uint256)": "057d7781",
							"userLevel(address)": "280e31cc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acb\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acbPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"airdropMachine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimInterval\",\"type\":\"uint256\"}],\"name\":\"changeClaimInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_machineExpireTime\",\"type\":\"uint256\"}],\"name\":\"changeMachineExpireTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketAddress\",\"type\":\"address\"}],\"name\":\"changeMarketAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxComputingPower\",\"type\":\"uint256\"}],\"name\":\"changeMaxComputingPower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minComputingPower\",\"type\":\"uint256\"}],\"name\":\"changeMinComputingPower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_monthDividendAddress\",\"type\":\"address\"}],\"name\":\"changeMonthDividenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mvCollectionAddress\",\"type\":\"address\"}],\"name\":\"changeMvCollectionAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"changeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformAddress\",\"type\":\"address\"}],\"name\":\"changePlatformAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_platformRate\",\"type\":\"uint256\"}],\"name\":\"changePlatformRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_oneRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_twoRate\",\"type\":\"uint256\"}],\"name\":\"changeRefRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_remainingAddress\",\"type\":\"address\"}],\"name\":\"changeRemainingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sameLevelRewardRate\",\"type\":\"uint256\"}],\"name\":\"changeSameLevelRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shareHolderMinLimit\",\"type\":\"uint256\"}],\"name\":\"changeShareHolderMinLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shareHolderRewardRate\",\"type\":\"uint256\"}],\"name\":\"changeShareHolderRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_swapRate\",\"type\":\"uint256\"}],\"name\":\"changeSwapRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_rate\",\"type\":\"uint256[]\"}],\"name\":\"changeTeamLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_teamRewardAddress\",\"type\":\"address\"}],\"name\":\"changeTeamRewardAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_teamRewardRate\",\"type\":\"uint256\"}],\"name\":\"changeTeamRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_techAddress\",\"type\":\"address\"}],\"name\":\"changeTechAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRateConfig\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rates\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeamAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"addressArr\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTeamLevel\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"rates\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserLevels\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"levels\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"machineExpireTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxComputingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minComputingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mmStore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthDividendAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mv\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mvCollectionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refRewardOneRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refRewardTwoRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remainingAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sameLevelRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"auth\",\"type\":\"bool\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mv\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_acb\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_minePool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mmStore\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_acbPair\",\"type\":\"address\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"setUserLevel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shareHolderMinLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shareHolderRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"teamLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamRewardAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"techAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"top\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userArr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ACConfig.sol\":\"ACConfig\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/ACConfig.sol\":{\"keccak256\":\"0x4b2ac3a1800d5c946a550d6d8f03ba4f29acb5a931d446b3189e430ba76c9f50\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://baf17ba80513847b6c922793cae82f38647a56633b1bf319d53555cb55bbe2b7\",\"dweb:/ipfs/Qmcvp1wB5wdnvqwW4jWtQZHXxmkgo9xbcqpYFhxCzUtWbk\"]},\"contracts/pair/IBTBPair.sol\":{\"keccak256\":\"0x7c19266f42811ab9987147d53a6bf82e235a9cf6a1a90789f155964242c5dee8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7a1b799c6ebce197aec62f9cd7818cad49f6ac1cd36fb73fdd607429febafc85\",\"dweb:/ipfs/QmesDpYbrwGGwQ2rWRYwfrRUrCr18JVFdcHQ38uVv2YX7P\"]},\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1461,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1464,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2162,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 937,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 1057,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1443,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1758,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "usdt",
								"offset": 0,
								"slot": "201",
								"type": "t_address"
							},
							{
								"astId": 28,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "acb",
								"offset": 0,
								"slot": "202",
								"type": "t_address"
							},
							{
								"astId": 30,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "mv",
								"offset": 0,
								"slot": "203",
								"type": "t_address"
							},
							{
								"astId": 32,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "mmStore",
								"offset": 0,
								"slot": "204",
								"type": "t_address"
							},
							{
								"astId": 34,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "minePool",
								"offset": 0,
								"slot": "205",
								"type": "t_address"
							},
							{
								"astId": 36,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "acbPair",
								"offset": 0,
								"slot": "206",
								"type": "t_address"
							},
							{
								"astId": 38,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "platformAddress",
								"offset": 0,
								"slot": "207",
								"type": "t_address"
							},
							{
								"astId": 40,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "monthDividendAddress",
								"offset": 0,
								"slot": "208",
								"type": "t_address"
							},
							{
								"astId": 42,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "platformRate",
								"offset": 0,
								"slot": "209",
								"type": "t_uint256"
							},
							{
								"astId": 44,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "swapRate",
								"offset": 0,
								"slot": "210",
								"type": "t_uint256"
							},
							{
								"astId": 46,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "mvCollectionAddress",
								"offset": 0,
								"slot": "211",
								"type": "t_address"
							},
							{
								"astId": 48,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "techAddress",
								"offset": 0,
								"slot": "212",
								"type": "t_address"
							},
							{
								"astId": 50,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "marketAddress",
								"offset": 0,
								"slot": "213",
								"type": "t_address"
							},
							{
								"astId": 52,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "minComputingPower",
								"offset": 0,
								"slot": "214",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "refRewardOneRate",
								"offset": 0,
								"slot": "215",
								"type": "t_uint256"
							},
							{
								"astId": 56,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "refRewardTwoRate",
								"offset": 0,
								"slot": "216",
								"type": "t_uint256"
							},
							{
								"astId": 58,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "sameLevelRewardRate",
								"offset": 0,
								"slot": "217",
								"type": "t_uint256"
							},
							{
								"astId": 60,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "teamRewardRate",
								"offset": 0,
								"slot": "218",
								"type": "t_uint256"
							},
							{
								"astId": 62,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "teamRewardAddress",
								"offset": 0,
								"slot": "219",
								"type": "t_address"
							},
							{
								"astId": 64,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "remainingAddress",
								"offset": 0,
								"slot": "220",
								"type": "t_address"
							},
							{
								"astId": 66,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "shareHolderRewardRate",
								"offset": 0,
								"slot": "221",
								"type": "t_uint256"
							},
							{
								"astId": 68,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "shareHolderMinLimit",
								"offset": 0,
								"slot": "222",
								"type": "t_uint256"
							},
							{
								"astId": 73,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "teamLevel",
								"offset": 0,
								"slot": "223",
								"type": "t_mapping(t_uint256,t_struct(Level)97_storage)"
							},
							{
								"astId": 77,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "userLevel",
								"offset": 0,
								"slot": "224",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 80,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "userArr",
								"offset": 0,
								"slot": "225",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 82,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "machineExpireTime",
								"offset": 0,
								"slot": "226",
								"type": "t_uint256"
							},
							{
								"astId": 84,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "claimInterval",
								"offset": 0,
								"slot": "227",
								"type": "t_uint256"
							},
							{
								"astId": 86,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "operator",
								"offset": 0,
								"slot": "228",
								"type": "t_address"
							},
							{
								"astId": 90,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "admin",
								"offset": 0,
								"slot": "229",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 92,
								"contract": "contracts/ACConfig.sol:ACConfig",
								"label": "maxComputingPower",
								"offset": 0,
								"slot": "230",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(Level)97_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ACConfig.Level)",
								"numberOfBytes": "32",
								"value": "t_struct(Level)97_storage"
							},
							"t_struct(Level)97_storage": {
								"encoding": "inplace",
								"label": "struct ACConfig.Level",
								"members": [
									{
										"astId": 94,
										"contract": "contracts/ACConfig.sol:ACConfig",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 96,
										"contract": "contracts/ACConfig.sol:ACConfig",
										"label": "rate",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IMMStore2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "airdropMachine",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"airdropMachine(address,uint256)": "57629f82"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"airdropMachine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ACConfig.sol\":\"IMMStore2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/ACConfig.sol\":{\"keccak256\":\"0x4b2ac3a1800d5c946a550d6d8f03ba4f29acb5a931d446b3189e430ba76c9f50\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://baf17ba80513847b6c922793cae82f38647a56633b1bf319d53555cb55bbe2b7\",\"dweb:/ipfs/Qmcvp1wB5wdnvqwW4jWtQZHXxmkgo9xbcqpYFhxCzUtWbk\"]},\"contracts/pair/IBTBPair.sol\":{\"keccak256\":\"0x7c19266f42811ab9987147d53a6bf82e235a9cf6a1a90789f155964242c5dee8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7a1b799c6ebce197aec62f9cd7818cad49f6ac1cd36fb73fdd607429febafc85\",\"dweb:/ipfs/QmesDpYbrwGGwQ2rWRYwfrRUrCr18JVFdcHQ38uVv2YX7P\"]},\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/pair/IBTBPair.sol": {
				"IBTBPair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"burn(address)": "89afcb44",
							"getReserves()": "0902f1ac",
							"mint(address)": "6a627842",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"swap(uint256,uint256,address)": "6d9a640a",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pair/IBTBPair.sol\":\"IBTBPair\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"contracts/pair/IBTBPair.sol\":{\"keccak256\":\"0x7c19266f42811ab9987147d53a6bf82e235a9cf6a1a90789f155964242c5dee8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7a1b799c6ebce197aec62f9cd7818cad49f6ac1cd36fb73fdd607429febafc85\",\"dweb:/ipfs/QmesDpYbrwGGwQ2rWRYwfrRUrCr18JVFdcHQ38uVv2YX7P\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1461,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1464,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2162,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 937,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 1057,
								"contract": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"IERC1967Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.9._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.9._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"IERC1822ProxiableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ERC1967UpgradeUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "delegatecall",
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							},
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1461,
								"contract": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1464,
								"contract": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1443,
								"contract": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"IBeaconUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1461,
								"contract": "lib/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1464,
								"contract": "lib/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1461,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1464,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1443,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1758,
								"contract": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:8281  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xEA DUP13 DUP7 PUSH7 0xB4FB22943A9B0A SWAP10 PUSH8 0x48D875887FE1FACD 0x27 MSIZE 0xF7 0xA8 EQ PUSH19 0xB0DFD71D64736F6C6343000814003300000000 ",
							"sourceMap": "194:8087:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8087:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID 0xEA DUP13 DUP7 PUSH7 0xB4FB22943A9B0A SWAP10 PUSH8 0x48D875887FE1FACD 0x27 MSIZE 0xF7 0xA8 EQ PUSH19 0xB0DFD71D64736F6C6343000814003300000000 ",
							"sourceMap": "194:8087:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8281,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220feea8c8666b4fb22943a9b0a996748d875887fe1facd2759f7a81472b0dfd71d64736f6c63430008140033",
									".code": [
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8281,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"contracts/ACConfig.sol",
								"contracts/pair/IBTBPair.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1461,
								"contract": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 1464,
								"contract": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 2162,
								"contract": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1279:2681  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1279:2681  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xAB SLOAD SWAP4 PUSH28 0x85FB5D5C54470BB8DFBEAA303CB1C6CF43F66CDE97F9E2F76A5C3D64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "1279:1402:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1279:1402:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xAB SLOAD SWAP4 PUSH28 0x85FB5D5C54470BB8DFBEAA303CB1C6CF43F66CDE97F9E2F76A5C3D64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "1279:1402:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1279,
									"end": 2681,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081ab54937b85fb5d5c54470bb8dfbeaa303cb1c6cf43f66cde97f9e2f76a5c3d64736f6c63430008140033",
									".code": [
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1279,
											"end": 2681,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"contracts/ACConfig.sol",
								"contracts/pair/IBTBPair.sol",
								"lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"lib/contracts-upgradeable/proxy/utils/Initializable.sol",
								"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10},\"remappings\":[]},\"sources\":{\"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ACConfig.sol": {
				"ast": {
					"absolutePath": "contracts/ACConfig.sol",
					"exportedSymbols": {
						"ACConfig": [
							823
						],
						"IBTBPair": [
							926
						],
						"IERC20Upgradeable": [
							1837
						],
						"IMMStore2": [
							17
						],
						"OwnableUpgradeable": [
							1058
						],
						"UUPSUpgradeable": [
							1759
						]
					},
					"id": 824,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:0"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1838,
							"src": "71:97:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1837,
										"src": "79:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "../lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1760,
							"src": "170:93:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "UUPSUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1759,
										"src": "178:15:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "../lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 1059,
							"src": "265:94:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "OwnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1058,
										"src": "273:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/pair/IBTBPair.sol",
							"file": "./pair/IBTBPair.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 824,
							"sourceUnit": 927,
							"src": "361:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IBTBPair",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 926,
										"src": "369:8:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMMStore2",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "IMMStore2",
							"nameLocation": "420:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "57629f82",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "airdropMachine",
									"nameLocation": "448:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "471:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "463:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "484:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "476:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:29:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:0:0"
									},
									"scope": 17,
									"src": "439:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 824,
							"src": "410:99:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 18,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"534:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1058,
										"src": "534:18:0"
									},
									"id": 19,
									"nodeType": "InheritanceSpecifier",
									"src": "534:18:0"
								},
								{
									"baseName": {
										"id": 20,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"553:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1759,
										"src": "553:15:0"
									},
									"id": 21,
									"nodeType": "InheritanceSpecifier",
									"src": "553:15:0"
								}
							],
							"canonicalName": "ACConfig",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 823,
							"linearizedBaseContracts": [
								823,
								1759,
								1444,
								1079,
								1089,
								1058,
								2163,
								1623
							],
							"name": "ACConfig",
							"nameLocation": "522:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "fe6dcdba",
									"id": 24,
									"mutability": "constant",
									"name": "top",
									"nameLocation": "599:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "575:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "575:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864323230423363663145343636304335353039343138423432413836643739343545364532653138",
										"id": 23,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "605:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xd220B3cf1E4660C5509418B42A86d7945E6E2e18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 26,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "671:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "656:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 25,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "656:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5bff9787",
									"id": 28,
									"mutability": "mutable",
									"name": "acb",
									"nameLocation": "697:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "682:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f05cdf5",
									"id": 30,
									"mutability": "mutable",
									"name": "mv",
									"nameLocation": "722:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "707:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 29,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "707:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4dd40234",
									"id": 32,
									"mutability": "mutable",
									"name": "mmStore",
									"nameLocation": "746:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "731:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 31,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "731:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "602e6623",
									"id": 34,
									"mutability": "mutable",
									"name": "minePool",
									"nameLocation": "775:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "760:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 33,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "760:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5250c9b5",
									"id": 36,
									"mutability": "mutable",
									"name": "acbPair",
									"nameLocation": "805:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "790:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 35,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "790:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dbe55e56",
									"id": 38,
									"mutability": "mutable",
									"name": "platformAddress",
									"nameLocation": "838:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "823:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 37,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "823:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b2cf085e",
									"id": 40,
									"mutability": "mutable",
									"name": "monthDividendAddress",
									"nameLocation": "875:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "860:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 39,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "860:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36e0cac6",
									"id": 42,
									"mutability": "mutable",
									"name": "platformRate",
									"nameLocation": "917:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "902:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 41,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "902:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "698518e5",
									"id": 44,
									"mutability": "mutable",
									"name": "swapRate",
									"nameLocation": "1009:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "994:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 43,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "994:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9d610e5",
									"id": 46,
									"mutability": "mutable",
									"name": "mvCollectionAddress",
									"nameLocation": "1064:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1049:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 45,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1049:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e56cfab",
									"id": 48,
									"mutability": "mutable",
									"name": "techAddress",
									"nameLocation": "1105:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1090:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 47,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1090:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "95623641",
									"id": 50,
									"mutability": "mutable",
									"name": "marketAddress",
									"nameLocation": "1138:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1123:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 49,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1123:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85adb294",
									"id": 52,
									"mutability": "mutable",
									"name": "minComputingPower",
									"nameLocation": "1175:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1160:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1160:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a5705d4",
									"id": 54,
									"mutability": "mutable",
									"name": "refRewardOneRate",
									"nameLocation": "1214:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1199:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 53,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1199:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "434f9736",
									"id": 56,
									"mutability": "mutable",
									"name": "refRewardTwoRate",
									"nameLocation": "1269:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1254:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1254:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee787b11",
									"id": 58,
									"mutability": "mutable",
									"name": "sameLevelRewardRate",
									"nameLocation": "1307:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1292:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 57,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1292:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8e10ef0b",
									"id": 60,
									"mutability": "mutable",
									"name": "teamRewardRate",
									"nameLocation": "1367:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1352:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 59,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1352:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b21ddec",
									"id": 62,
									"mutability": "mutable",
									"name": "teamRewardAddress",
									"nameLocation": "1420:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1405:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 61,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1405:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f97fe091",
									"id": 64,
									"mutability": "mutable",
									"name": "remainingAddress",
									"nameLocation": "1459:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1444:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 63,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1444:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39cbc405",
									"id": 66,
									"mutability": "mutable",
									"name": "shareHolderRewardRate",
									"nameLocation": "1499:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1484:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1484:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "21596c25",
									"id": 68,
									"mutability": "mutable",
									"name": "shareHolderMinLimit",
									"nameLocation": "1557:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1542:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 67,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1542:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "254720b7",
									"id": 73,
									"mutability": "mutable",
									"name": "teamLevel",
									"nameLocation": "1618:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1585:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$97_storage_$",
										"typeString": "mapping(uint256 => struct ACConfig.Level)"
									},
									"typeName": {
										"id": 72,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 69,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1593:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1585:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$97_storage_$",
											"typeString": "mapping(uint256 => struct ACConfig.Level)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 71,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 70,
												"name": "Level",
												"nameLocations": [
													"1604:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 97,
												"src": "1604:5:0"
											},
											"referencedDeclaration": 97,
											"src": "1604:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Level_$97_storage_ptr",
												"typeString": "struct ACConfig.Level"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "280e31cc",
									"id": 77,
									"mutability": "mutable",
									"name": "userLevel",
									"nameLocation": "1669:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1634:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 76,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 74,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1642:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1634:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 75,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1653:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "057d7781",
									"id": 80,
									"mutability": "mutable",
									"name": "userArr",
									"nameLocation": "1702:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1685:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 78,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1685:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 79,
										"nodeType": "ArrayTypeName",
										"src": "1685:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d8852ee",
									"id": 82,
									"mutability": "mutable",
									"name": "machineExpireTime",
									"nameLocation": "1733:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1718:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1718:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0b433a12",
									"id": 84,
									"mutability": "mutable",
									"name": "claimInterval",
									"nameLocation": "1772:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1757:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 83,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1757:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "570ca735",
									"id": 86,
									"mutability": "mutable",
									"name": "operator",
									"nameLocation": "1809:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1794:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 85,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1794:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 90,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "1851:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1826:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 89,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 87,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1834:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1826:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 88,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1845:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3d08e5b3",
									"id": 92,
									"mutability": "mutable",
									"name": "maxComputingPower",
									"nameLocation": "1880:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 823,
									"src": "1865:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 91,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1865:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "ACConfig.Level",
									"id": 97,
									"members": [
										{
											"constant": false,
											"id": 94,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1940:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 97,
											"src": "1932:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 93,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1932:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 96,
											"mutability": "mutable",
											"name": "rate",
											"nameLocation": "1965:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 97,
											"src": "1957:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 95,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1957:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Level",
									"nameLocation": "1915:5:0",
									"nodeType": "StructDefinition",
									"scope": 823,
									"src": "1908:86:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2022:94:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 100,
																	"name": "admin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 90,
																	"src": "2041:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 103,
																"indexExpression": {
																	"expression": {
																		"id": 101,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2047:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2051:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2047:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2041:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 104,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2062:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2066:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2062:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 106,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "2076:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2076:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2062:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2041:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742061646d696e",
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2084:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283",
																"typeString": "literal_string \"not admin\""
															},
															"value": "not admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e28d3d4b0238f59994407ce2f3c10c2c3f25706d9d645a83b44428559d9ee283",
																"typeString": "literal_string \"not admin\""
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2033:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2033:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "2033:63:0"
											},
											{
												"id": 113,
												"nodeType": "PlaceholderStatement",
												"src": "2107:1:0"
											}
										]
									},
									"id": 115,
									"name": "onlyAdmin",
									"nameLocation": "2011:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2020:2:0"
									},
									"src": "2002:114:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2186:1262:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 122,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "2197:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2197:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2197:16:0"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2224:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 126,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "2235:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2224:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2224:20:0"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "platformAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2257:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307864463932323846433032463435353443443830414636443033366441446532343230323265346632",
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2275:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xdF9228FC02F4554CD80AF6D036dADe242022e4f2"
													},
													"src": "2257:60:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2257:60:0"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 133,
														"name": "monthDividendAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2328:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307834303736414634353536343538634464306164323545383665443233423464633834333744634534",
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2351:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x4076AF4556458cDd0ad25E86eD23B4dc8437DcE4"
													},
													"src": "2328:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "2328:65:0"
											},
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "platformRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "2404:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "393030",
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2419:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_900_by_1",
															"typeString": "int_const 900"
														},
														"value": "900"
													},
													"src": "2404:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2404:18:0"
											},
											{
												"expression": {
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "swapRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2433:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2444:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2433:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "2433:15:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 145,
														"name": "mvCollectionAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "2461:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307846416532354631416534423735384437433936443745623037354236326166344633333938623839",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2483:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xFAe25F1Ae4B758D7C96D7Eb075B62af4F3398b89"
													},
													"src": "2461:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2461:64:0"
											},
											{
												"expression": {
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 149,
														"name": "techAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2536:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307837466241373835383038333833364439313639656233624532314134383138394531373938633865",
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2550:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x7FbA7858083836D9169eb3bE21A48189E1798c8e"
													},
													"src": "2536:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "2536:56:0"
											},
											{
												"expression": {
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "marketAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "2603:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307832373337616336333539363634303936663232383633303838323436643838354631344536464632",
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2619:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x2737ac6359664096f22863088246d885F14E6FF2"
													},
													"src": "2603:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "2603:58:0"
											},
											{
												"expression": {
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "minComputingPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2682:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2702:8:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20000000000000000000_by_1",
															"typeString": "int_const 20000000000000000000"
														},
														"value": "20"
													},
													"src": "2682:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2682:28:0"
											},
											{
												"expression": {
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "maxComputingPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "2721:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "36303030",
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2741:10:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_6000000000000000000000_by_1",
															"typeString": "int_const 6000000000000000000000"
														},
														"value": "6000"
													},
													"src": "2721:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "2721:30:0"
											},
											{
												"expression": {
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 165,
														"name": "refRewardOneRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2762:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313530",
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2781:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_150_by_1",
															"typeString": "int_const 150"
														},
														"value": "150"
													},
													"src": "2762:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "2762:22:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "refRewardTwoRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2795:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2814:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2795:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "2795:22:0"
											},
											{
												"expression": {
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 173,
														"name": "sameLevelRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "2828:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2850:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2828:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2828:25:0"
											},
											{
												"expression": {
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 177,
														"name": "teamRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "2864:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313030",
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2881:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2864:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "2864:20:0"
											},
											{
												"expression": {
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 181,
														"name": "teamRewardAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "2895:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307832373337616336333539363634303936663232383633303838323436643838354631344536464632",
														"id": 182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2915:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x2737ac6359664096f22863088246d885F14E6FF2"
													},
													"src": "2895:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2895:62:0"
											},
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "remainingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "2968:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307862333646363336316443663331443044373935364539653832366139393135413564644543323732",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2987:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xb36F6361dCf31D0D7956E9e826a9915A5ddEC272"
													},
													"src": "2968:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2968:61:0"
											},
											{
												"expression": {
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 189,
														"name": "shareHolderRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "3040:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3530",
														"id": 190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3064:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_50_by_1",
															"typeString": "int_const 50"
														},
														"value": "50"
													},
													"src": "3040:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3040:26:0"
											},
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "shareHolderMinLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "3077:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3230303030",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3099:11:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20000000000000000000000_by_1",
															"typeString": "int_const 20000000000000000000000"
														},
														"value": "20000"
													},
													"src": "3077:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "3077:33:0"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 197,
															"name": "teamLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3123:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$97_storage_$",
																"typeString": "mapping(uint256 => struct ACConfig.Level storage ref)"
															}
														},
														"id": 199,
														"indexExpression": {
															"hexValue": "30",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3133:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3123:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$97_storage",
															"typeString": "struct ACConfig.Level storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3144:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3146:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 200,
															"name": "Level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "3138:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Level_$97_storage_ptr_$",
																"typeString": "type(struct ACConfig.Level storage pointer)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3138:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$97_memory_ptr",
															"typeString": "struct ACConfig.Level memory"
														}
													},
													"src": "3123:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$97_storage",
														"typeString": "struct ACConfig.Level storage ref"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "3123:25:0"
											},
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 206,
															"name": "teamLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3159:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$97_storage_$",
																"typeString": "mapping(uint256 => struct ACConfig.Level storage ref)"
															}
														},
														"id": 208,
														"indexExpression": {
															"hexValue": "31",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3169:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3159:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$97_storage",
															"typeString": "struct ACConfig.Level storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3130303030",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3180:11:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000000"
																},
																"value": "10000"
															},
															{
																"hexValue": "323030",
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3192:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																},
																"value": "200"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_10000000000000000000000_by_1",
																	"typeString": "int_const 10000000000000000000000"
																},
																{
																	"typeIdentifier": "t_rational_200_by_1",
																	"typeString": "int_const 200"
																}
															],
															"id": 209,
															"name": "Level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "3174:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Level_$97_storage_ptr_$",
																"typeString": "type(struct ACConfig.Level storage pointer)"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3174:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$97_memory_ptr",
															"typeString": "struct ACConfig.Level memory"
														}
													},
													"src": "3159:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$97_storage",
														"typeString": "struct ACConfig.Level storage ref"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "3159:37:0"
											},
											{
												"expression": {
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 215,
															"name": "teamLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3207:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$97_storage_$",
																"typeString": "mapping(uint256 => struct ACConfig.Level storage ref)"
															}
														},
														"id": 217,
														"indexExpression": {
															"hexValue": "32",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3217:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3207:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$97_storage",
															"typeString": "struct ACConfig.Level storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3330303030",
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3228:11:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30000000000000000000000_by_1",
																	"typeString": "int_const 30000000000000000000000"
																},
																"value": "30000"
															},
															{
																"hexValue": "333530",
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3240:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_350_by_1",
																	"typeString": "int_const 350"
																},
																"value": "350"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_30000000000000000000000_by_1",
																	"typeString": "int_const 30000000000000000000000"
																},
																{
																	"typeIdentifier": "t_rational_350_by_1",
																	"typeString": "int_const 350"
																}
															],
															"id": 218,
															"name": "Level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "3222:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Level_$97_storage_ptr_$",
																"typeString": "type(struct ACConfig.Level storage pointer)"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3222:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$97_memory_ptr",
															"typeString": "struct ACConfig.Level memory"
														}
													},
													"src": "3207:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$97_storage",
														"typeString": "struct ACConfig.Level storage ref"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "3207:37:0"
											},
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 224,
															"name": "teamLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3255:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$97_storage_$",
																"typeString": "mapping(uint256 => struct ACConfig.Level storage ref)"
															}
														},
														"id": 226,
														"indexExpression": {
															"hexValue": "33",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3265:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3255:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$97_storage",
															"typeString": "struct ACConfig.Level storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "313030303030",
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3276:12:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000_by_1",
																	"typeString": "int_const 100000000000000000000000"
																},
																"value": "100000"
															},
															{
																"hexValue": "353030",
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3289:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																},
																"value": "500"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_100000000000000000000000_by_1",
																	"typeString": "int_const 100000000000000000000000"
																},
																{
																	"typeIdentifier": "t_rational_500_by_1",
																	"typeString": "int_const 500"
																}
															],
															"id": 227,
															"name": "Level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "3270:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Level_$97_storage_ptr_$",
																"typeString": "type(struct ACConfig.Level storage pointer)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3270:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$97_memory_ptr",
															"typeString": "struct ACConfig.Level memory"
														}
													},
													"src": "3255:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$97_storage",
														"typeString": "struct ACConfig.Level storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "3255:38:0"
											},
											{
												"expression": {
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 233,
															"name": "userLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3306:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 235,
														"indexExpression": {
															"id": 234,
															"name": "top",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "3316:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3306:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33",
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3323:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "3306:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 238,
												"nodeType": "ExpressionStatement",
												"src": "3306:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "top",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "3348:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 239,
															"name": "userArr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3335:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3343:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3335:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3335:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "3335:17:0"
											},
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 245,
														"name": "machineExpireTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "3365:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333635",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3385:8:0",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "3365:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "3365:28:0"
											},
											{
												"expression": {
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 249,
														"name": "claimInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "3404:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3420:9:0",
														"subdenomination": "minutes",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_60_by_1",
															"typeString": "int_const 60"
														},
														"value": "1"
													},
													"src": "3404:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "3404:25:0"
											}
										]
									},
									"functionSelector": "c4d66de8",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 120,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 119,
												"name": "initializer",
												"nameLocations": [
													"2175:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1525,
												"src": "2175:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2175:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "2137:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "2156:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "2148:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2147:19:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2186:0:0"
									},
									"scope": 823,
									"src": "2128:1320:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1753
									],
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "3559:2:0",
										"statements": []
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 259,
												"name": "onlyOwner",
												"nameLocations": [
													"3549:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "3549:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3549:9:0"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "3504:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 258,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3540:8:0"
									},
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "3522:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3521:9:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3559:0:0"
									},
									"scope": 823,
									"src": "3495:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "3662:222:0",
										"statements": [
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 272,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "3673:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "34",
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3697:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															],
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3683:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3687:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 274,
																"nodeType": "ArrayTypeName",
																"src": "3687:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3683:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "3673:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "3673:26:0"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "rates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "3710:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "34",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3732:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																}
															],
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3718:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3722:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 282,
																"nodeType": "ArrayTypeName",
																"src": "3722:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3718:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "3710:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "3710:24:0"
											},
											{
												"body": {
													"id": 316,
													"nodeType": "Block",
													"src": "3775:102:0",
													"statements": [
														{
															"expression": {
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 298,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "3790:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "3798:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3790:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 301,
																			"name": "teamLevel",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 73,
																			"src": "3803:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$97_storage_$",
																				"typeString": "mapping(uint256 => struct ACConfig.Level storage ref)"
																			}
																		},
																		"id": 303,
																		"indexExpression": {
																			"id": 302,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "3813:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3803:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Level_$97_storage",
																			"typeString": "struct ACConfig.Level storage ref"
																		}
																	},
																	"id": 304,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3816:6:0",
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 94,
																	"src": "3803:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3790:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 306,
															"nodeType": "ExpressionStatement",
															"src": "3790:32:0"
														},
														{
															"expression": {
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 307,
																		"name": "rates",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "3837:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 309,
																	"indexExpression": {
																		"id": 308,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 289,
																		"src": "3843:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3837:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 310,
																			"name": "teamLevel",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 73,
																			"src": "3848:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$97_storage_$",
																				"typeString": "mapping(uint256 => struct ACConfig.Level storage ref)"
																			}
																		},
																		"id": 312,
																		"indexExpression": {
																			"id": 311,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "3858:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3848:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Level_$97_storage",
																			"typeString": "struct ACConfig.Level storage ref"
																		}
																	},
																	"id": 313,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3861:4:0",
																	"memberName": "rate",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 96,
																	"src": "3848:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3837:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 315,
															"nodeType": "ExpressionStatement",
															"src": "3837:28:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 292,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "3764:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "34",
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3768:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "3764:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"initializationExpression": {
													"assignments": [
														289
													],
													"declarations": [
														{
															"constant": false,
															"id": 289,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3757:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 317,
															"src": "3749:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 288,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3749:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 291,
													"initialValue": {
														"hexValue": "30",
														"id": 290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3761:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3749:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3771:3:0",
														"subExpression": {
															"id": 295,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3771:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 297,
													"nodeType": "ExpressionStatement",
													"src": "3771:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3745:132:0"
											}
										]
									},
									"functionSelector": "9a3135a8",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTeamLevel",
									"nameLocation": "3578:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3590:2:0"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3631:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3614:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 265,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3614:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 266,
													"nodeType": "ArrayTypeName",
													"src": "3614:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "rates",
												"nameLocation": "3656:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3639:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 268,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 269,
													"nodeType": "ArrayTypeName",
													"src": "3639:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3613:49:0"
									},
									"scope": 823,
									"src": "3569:315:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "3961:282:0",
										"statements": [
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 325,
														"name": "rates",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 323,
														"src": "3972:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "36",
																"id": 329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3994:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																}
															],
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "3980:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3984:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 327,
																"nodeType": "ArrayTypeName",
																"src": "3984:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3980:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "3972:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "3972:24:0"
											},
											{
												"expression": {
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 333,
															"name": "rates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "4009:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 335,
														"indexExpression": {
															"hexValue": "30",
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4015:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4009:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 336,
														"name": "refRewardOneRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "4020:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4009:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "4009:27:0"
											},
											{
												"expression": {
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 339,
															"name": "rates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "4047:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 341,
														"indexExpression": {
															"hexValue": "31",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4053:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4047:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 342,
														"name": "refRewardTwoRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "4058:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4047:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "4047:27:0"
											},
											{
												"expression": {
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 345,
															"name": "rates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "4085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 347,
														"indexExpression": {
															"hexValue": "32",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4091:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4085:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 348,
														"name": "sameLevelRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "4096:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4085:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 350,
												"nodeType": "ExpressionStatement",
												"src": "4085:30:0"
											},
											{
												"expression": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 351,
															"name": "rates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "4126:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 353,
														"indexExpression": {
															"hexValue": "33",
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4132:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4126:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 354,
														"name": "teamRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "4137:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4126:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "4126:25:0"
											},
											{
												"expression": {
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 357,
															"name": "rates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "4162:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 359,
														"indexExpression": {
															"hexValue": "34",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4168:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4162:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 360,
														"name": "shareHolderRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "4173:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4162:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "4162:32:0"
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 363,
															"name": "rates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "4205:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 365,
														"indexExpression": {
															"hexValue": "35",
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4211:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4205:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 366,
														"name": "shareHolderMinLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "4216:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4205:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "4205:30:0"
											}
										]
									},
									"functionSelector": "1e79aa0a",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRateConfig",
									"nameLocation": "3901:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3914:2:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "rates",
												"nameLocation": "3955:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "3938:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 321,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3938:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 322,
													"nodeType": "ArrayTypeName",
													"src": "3938:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3937:24:0"
									},
									"scope": 823,
									"src": "3892:351:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "4326:135:0",
										"statements": [
											{
												"expression": {
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 376,
														"name": "addressArr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "4337:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "32",
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4364:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4350:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4354:7:0",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 378,
																"nodeType": "ArrayTypeName",
																"src": "4354:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4350:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "4337:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "4337:29:0"
											},
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 384,
															"name": "addressArr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "4377:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 386,
														"indexExpression": {
															"hexValue": "30",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4388:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4377:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 387,
														"name": "teamRewardAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "4393:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4377:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "4377:33:0"
											},
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 390,
															"name": "addressArr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "4421:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 392,
														"indexExpression": {
															"hexValue": "31",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4432:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4421:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 393,
														"name": "remainingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "4437:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4421:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "4421:32:0"
											}
										]
									},
									"functionSelector": "182d326e",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTeamAddress",
									"nameLocation": "4260:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4274:2:0"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "addressArr",
												"nameLocation": "4315:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "4298:27:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 372,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4298:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 373,
													"nodeType": "ArrayTypeName",
													"src": "4298:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4297:29:0"
									},
									"scope": 823,
									"src": "4251:210:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "4562:190:0",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "4573:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "userArr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "4581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"src": "4573:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "4573:15:0"
											},
											{
												"expression": {
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 410,
														"name": "levels",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "4599:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 414,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "4622:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4628:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4622:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4608:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 411,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4612:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 412,
																"nodeType": "ArrayTypeName",
																"src": "4612:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4599:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "4599:36:0"
											},
											{
												"body": {
													"id": 440,
													"nodeType": "Block",
													"src": "4687:58:0",
													"statements": [
														{
															"expression": {
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 430,
																		"name": "levels",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "4702:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 432,
																	"indexExpression": {
																		"id": 431,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 420,
																		"src": "4709:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4702:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 433,
																		"name": "userLevel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "4714:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 437,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 434,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4724:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 436,
																		"indexExpression": {
																			"id": 435,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 420,
																			"src": "4730:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4724:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4714:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4702:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 439,
															"nodeType": "ExpressionStatement",
															"src": "4702:31:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 423,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "4665:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 424,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "4669:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4675:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4669:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4665:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 441,
												"initializationExpression": {
													"assignments": [
														420
													],
													"declarations": [
														{
															"constant": false,
															"id": 420,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4658:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 441,
															"src": "4650:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 419,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4650:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 422,
													"initialValue": {
														"hexValue": "30",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4662:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4650:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4683:3:0",
														"subExpression": {
															"id": 427,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "4683:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 429,
													"nodeType": "ExpressionStatement",
													"src": "4683:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4646:99:0"
											}
										]
									},
									"functionSelector": "6b1a9c07",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserLevels",
									"nameLocation": "4478:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4491:2:0"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "4532:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "4515:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 399,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4515:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 400,
													"nodeType": "ArrayTypeName",
													"src": "4515:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "levels",
												"nameLocation": "4555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "4538:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 402,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4538:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 403,
													"nodeType": "ArrayTypeName",
													"src": "4538:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4514:48:0"
									},
									"scope": 823,
									"src": "4469:283:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "4819:37:0",
										"statements": [
											{
												"expression": {
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 452,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "4830:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 454,
														"indexExpression": {
															"id": 453,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4830:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 455,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4844:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4830:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "4830:18:0"
											}
										]
									},
									"functionSelector": "4b0bddd2",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 450,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 449,
												"name": "onlyOwner",
												"nameLocations": [
													"4810:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "4810:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4810:9:0"
										}
									],
									"name": "setAdmin",
									"nameLocation": "4769:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4786:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4778:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "4796:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "4791:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4791:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4777:24:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4819:0:0"
									},
									"scope": 823,
									"src": "4760:96:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4924:39:0",
										"statements": [
											{
												"expression": {
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 466,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "4935:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 467,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4946:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4935:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4935:20:0"
											}
										]
									},
									"functionSelector": "06394c9b",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "onlyOwner",
												"nameLocations": [
													"4915:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "4915:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4915:9:0"
										}
									],
									"name": "changeOperator",
									"nameLocation": "4873:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "4896:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4888:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4887:19:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4924:0:0"
									},
									"scope": 823,
									"src": "4864:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "5043:66:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "5088:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5094:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "mmStore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "5064:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 480,
																"name": "IMMStore2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5054:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IMMStore2_$17_$",
																	"typeString": "type(contract IMMStore2)"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5054:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IMMStore2_$17",
																"typeString": "contract IMMStore2"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5073:14:0",
														"memberName": "airdropMachine",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "5054:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5054:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "5054:47:0"
											}
										]
									},
									"functionSelector": "57629f82",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 477,
												"name": "onlyAdmin",
												"nameLocations": [
													"5034:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "5034:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5034:9:0"
										}
									],
									"name": "airdropMachine",
									"nameLocation": "4982:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5005:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4997:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5018:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5010:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4996:29:0"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5043:0:0"
									},
									"scope": 823,
									"src": "4973:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "5186:74:0",
										"statements": [
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 498,
															"name": "userLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "5197:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 500,
														"indexExpression": {
															"id": 499,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5207:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5197:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "_level",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "5216:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5197:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "5197:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 507,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "5246:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 504,
															"name": "userArr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "5233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5241:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5233:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5233:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "5233:19:0"
											}
										]
									},
									"functionSelector": "33f5780e",
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 496,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 495,
												"name": "onlyAdmin",
												"nameLocations": [
													"5177:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "5177:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5177:9:0"
										}
									],
									"name": "setUserLevel",
									"nameLocation": "5126:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "5147:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "5139:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "5161:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "5153:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5138:30:0"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5186:0:0"
									},
									"scope": 823,
									"src": "5117:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5396:160:0",
										"statements": [
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 528,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "5407:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 529,
														"name": "_usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "5414:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5407:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "5407:12:0"
											},
											{
												"expression": {
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 532,
														"name": "mv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "5430:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 533,
														"name": "_mv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "5435:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5430:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "5430:8:0"
											},
											{
												"expression": {
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 536,
														"name": "acb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "5449:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 537,
														"name": "_acb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 517,
														"src": "5455:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5449:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "5449:10:0"
											},
											{
												"expression": {
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 540,
														"name": "minePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "5470:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 541,
														"name": "_minePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "5481:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5470:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "5470:20:0"
											},
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "mmStore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "5501:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 545,
														"name": "_mmStore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "5511:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5501:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "5501:18:0"
											},
											{
												"expression": {
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 548,
														"name": "acbPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "5530:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 549,
														"name": "_acbPair",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "5540:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5530:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "5530:18:0"
											}
										]
									},
									"functionSelector": "812df395",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 526,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 525,
												"name": "onlyAdmin",
												"nameLocations": [
													"5387:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "5387:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5387:9:0"
										}
									],
									"name": "setConfig",
									"nameLocation": "5277:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "5295:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5287:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "_mv",
												"nameLocation": "5309:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5301:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "_acb",
												"nameLocation": "5321:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5313:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "_minePool",
												"nameLocation": "5334:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5326:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "_mmStore",
												"nameLocation": "5352:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5344:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "_acbPair",
												"nameLocation": "5369:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5361:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5286:92:0"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5396:0:0"
									},
									"scope": 823,
									"src": "5268:288:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "5646:57:0",
										"statements": [
											{
												"expression": {
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 560,
														"name": "machineExpireTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "5657:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 561,
														"name": "_machineExpireTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "5677:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5657:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 563,
												"nodeType": "ExpressionStatement",
												"src": "5657:38:0"
											}
										]
									},
									"functionSelector": "7634b070",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 558,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 557,
												"name": "onlyAdmin",
												"nameLocations": [
													"5637:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "5637:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5637:9:0"
										}
									],
									"name": "changeMachineExpireTime",
									"nameLocation": "5577:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "_machineExpireTime",
												"nameLocation": "5609:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "5601:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5600:28:0"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5646:0:0"
									},
									"scope": 823,
									"src": "5568:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "5781:49:0",
										"statements": [
											{
												"expression": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 572,
														"name": "claimInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "5792:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 573,
														"name": "_claimInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "5808:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5792:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "5792:30:0"
											}
										]
									},
									"functionSelector": "796f838e",
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 570,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 569,
												"name": "onlyAdmin",
												"nameLocations": [
													"5772:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "5772:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5772:9:0"
										}
									],
									"name": "changeClaimInterval",
									"nameLocation": "5720:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "_claimInterval",
												"nameLocation": "5748:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "5740:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:24:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5781:0:0"
									},
									"scope": 823,
									"src": "5711:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "5929:196:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 589,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5948:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5956:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5948:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 591,
																	"name": "_rate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5966:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5972:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5966:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5948:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c656e677468206572726f72",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5979:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1211e291a5fc226ff84735b78da6a491026596463c2cdd910d52e39d6bfe3839",
																"typeString": "literal_string \"length error\""
															},
															"value": "length error"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1211e291a5fc226ff84735b78da6a491026596463c2cdd910d52e39d6bfe3839",
																"typeString": "literal_string \"length error\""
															}
														],
														"id": 588,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5940:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "5940:54:0"
											},
											{
												"body": {
													"id": 621,
													"nodeType": "Block",
													"src": "6050:68:0",
													"statements": [
														{
															"expression": {
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 608,
																		"name": "teamLevel",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 73,
																		"src": "6065:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$97_storage_$",
																			"typeString": "mapping(uint256 => struct ACConfig.Level storage ref)"
																		}
																	},
																	"id": 610,
																	"indexExpression": {
																		"id": 609,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 598,
																		"src": "6075:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6065:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Level_$97_storage",
																		"typeString": "struct ACConfig.Level storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 612,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 580,
																				"src": "6086:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 614,
																			"indexExpression": {
																				"id": 613,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "6094:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6086:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 615,
																				"name": "_rate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "6097:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 617,
																			"indexExpression": {
																				"id": 616,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 598,
																				"src": "6103:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6097:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 611,
																		"name": "Level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "6080:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Level_$97_storage_ptr_$",
																			"typeString": "type(struct ACConfig.Level storage pointer)"
																		}
																	},
																	"id": 618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6080:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Level_$97_memory_ptr",
																		"typeString": "struct ACConfig.Level memory"
																	}
																},
																"src": "6065:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Level_$97_storage",
																	"typeString": "struct ACConfig.Level storage ref"
																}
															},
															"id": 620,
															"nodeType": "ExpressionStatement",
															"src": "6065:41:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 601,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "6026:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 602,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "6030:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6038:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6030:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6026:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"initializationExpression": {
													"assignments": [
														598
													],
													"declarations": [
														{
															"constant": false,
															"id": 598,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6019:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 622,
															"src": "6011:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 597,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6011:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 600,
													"initialValue": {
														"hexValue": "30",
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6023:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6011:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6046:3:0",
														"subExpression": {
															"id": 605,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "6048:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 607,
													"nodeType": "ExpressionStatement",
													"src": "6046:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6007:111:0"
											}
										]
									},
									"functionSelector": "3b2c2e55",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 586,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 585,
												"name": "onlyAdmin",
												"nameLocations": [
													"5920:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "5920:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5920:9:0"
										}
									],
									"name": "changeTeamLevel",
									"nameLocation": "5847:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5880:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5863:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 578,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 579,
													"nodeType": "ArrayTypeName",
													"src": "5863:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "_rate",
												"nameLocation": "5905:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "5888:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 581,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5888:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 582,
													"nodeType": "ArrayTypeName",
													"src": "5888:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:49:0"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5929:0:0"
									},
									"scope": 823,
									"src": "5838:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "6215:61:0",
										"statements": [
											{
												"expression": {
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 631,
														"name": "shareHolderMinLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "6226:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 632,
														"name": "_shareHolderMinLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "6248:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6226:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "6226:42:0"
											}
										]
									},
									"functionSelector": "66bf8f83",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 629,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 628,
												"name": "onlyAdmin",
												"nameLocations": [
													"6206:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "6206:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6206:9:0"
										}
									],
									"name": "changeShareHolderMinLimit",
									"nameLocation": "6142:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "_shareHolderMinLimit",
												"nameLocation": "6176:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "6168:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6167:30:0"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6215:0:0"
									},
									"scope": 823,
									"src": "6133:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "6370:65:0",
										"statements": [
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "shareHolderRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "6381:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 644,
														"name": "_shareHolderRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "6405:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6381:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "6381:46:0"
											}
										]
									},
									"functionSelector": "19a2ef5f",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 641,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 640,
												"name": "onlyAdmin",
												"nameLocations": [
													"6361:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "6361:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6361:9:0"
										}
									],
									"name": "changeShareHolderRewardRate",
									"nameLocation": "6293:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "_shareHolderRewardRate",
												"nameLocation": "6329:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6321:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6320:32:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6370:0:0"
									},
									"scope": 823,
									"src": "6284:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 659,
										"nodeType": "Block",
										"src": "6519:55:0",
										"statements": [
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 655,
														"name": "remainingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "6530:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 656,
														"name": "_remainingAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "6549:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6530:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "6530:36:0"
											}
										]
									},
									"functionSelector": "eb2266bc",
									"id": 660,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 653,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 652,
												"name": "onlyAdmin",
												"nameLocations": [
													"6510:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "6510:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6510:9:0"
										}
									],
									"name": "changeRemainingAddress",
									"nameLocation": "6452:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "_remainingAddress",
												"nameLocation": "6483:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "6475:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6474:27:0"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6519:0:0"
									},
									"scope": 823,
									"src": "6443:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "6660:57:0",
										"statements": [
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 667,
														"name": "teamRewardAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "6671:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 668,
														"name": "_teamRewardAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "6691:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6671:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "6671:38:0"
											}
										]
									},
									"functionSelector": "ff858079",
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 665,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 664,
												"name": "onlyAdmin",
												"nameLocations": [
													"6651:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "6651:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6651:9:0"
										}
									],
									"name": "changeTeamRewardAddress",
									"nameLocation": "6591:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "_teamRewardAddress",
												"nameLocation": "6623:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "6615:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6615:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6614:28:0"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6660:0:0"
									},
									"scope": 823,
									"src": "6582:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "6797:51:0",
										"statements": [
											{
												"expression": {
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 679,
														"name": "teamRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "6808:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 680,
														"name": "_teamRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "6825:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6808:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "6808:32:0"
											}
										]
									},
									"functionSelector": "863be1ab",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 677,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 676,
												"name": "onlyAdmin",
												"nameLocations": [
													"6788:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "6788:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6788:9:0"
										}
									],
									"name": "changeTeamRewardRate",
									"nameLocation": "6734:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "_teamRewardRate",
												"nameLocation": "6763:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "6755:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6754:25:0"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6797:0:0"
									},
									"scope": 823,
									"src": "6725:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "6936:61:0",
										"statements": [
											{
												"expression": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 691,
														"name": "sameLevelRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "6947:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 692,
														"name": "_sameLevelRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "6969:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6947:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "6947:42:0"
											}
										]
									},
									"functionSelector": "498c1e3c",
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 689,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 688,
												"name": "onlyAdmin",
												"nameLocations": [
													"6927:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "6927:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6927:9:0"
										}
									],
									"name": "changeSameLevelRewardRate",
									"nameLocation": "6863:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "_sameLevelRewardRate",
												"nameLocation": "6897:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6889:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6888:30:0"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6936:0:0"
									},
									"scope": 823,
									"src": "6854:143:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "7086:84:0",
										"statements": [
											{
												"expression": {
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 705,
														"name": "refRewardOneRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "7097:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 706,
														"name": "_oneRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "7116:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7097:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "7097:27:0"
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 709,
														"name": "refRewardTwoRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "7135:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 710,
														"name": "_twoRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "7154:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7135:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "7135:27:0"
											}
										]
									},
									"functionSelector": "e3d9aa05",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 703,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 702,
												"name": "onlyAdmin",
												"nameLocations": [
													"7077:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "7077:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7077:9:0"
										}
									],
									"name": "changeRefRewardRate",
									"nameLocation": "7014:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "_oneRate",
												"nameLocation": "7042:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "7034:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "_twoRate",
												"nameLocation": "7059:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "7051:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7033:35:0"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7086:0:0"
									},
									"scope": 823,
									"src": "7005:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "7257:57:0",
										"statements": [
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 721,
														"name": "minComputingPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "7268:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "_minComputingPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "7288:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7268:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "7268:38:0"
											}
										]
									},
									"functionSelector": "3360364d",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 718,
												"name": "onlyAdmin",
												"nameLocations": [
													"7248:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "7248:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7248:9:0"
										}
									],
									"name": "changeMinComputingPower",
									"nameLocation": "7187:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "_minComputingPower",
												"nameLocation": "7219:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "7211:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7210:28:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7257:0:0"
									},
									"scope": 823,
									"src": "7178:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "7401:57:0",
										"statements": [
											{
												"expression": {
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 733,
														"name": "maxComputingPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "7412:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 734,
														"name": "_maxComputingPower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "7432:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7412:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "7412:38:0"
											}
										]
									},
									"functionSelector": "767608e2",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 730,
												"name": "onlyAdmin",
												"nameLocations": [
													"7392:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "7392:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7392:9:0"
										}
									],
									"name": "changeMaxComputingPower",
									"nameLocation": "7331:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "_maxComputingPower",
												"nameLocation": "7363:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "7355:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7354:28:0"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7401:0:0"
									},
									"scope": 823,
									"src": "7322:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "7549:61:0",
										"statements": [
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 745,
														"name": "mvCollectionAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7560:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 746,
														"name": "_mvCollectionAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "7582:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7560:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "7560:42:0"
											}
										]
									},
									"functionSelector": "f80183b2",
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 743,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 742,
												"name": "onlyAdmin",
												"nameLocations": [
													"7540:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "7540:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7540:9:0"
										}
									],
									"name": "changeMvCollectionAddress",
									"nameLocation": "7475:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "_mvCollectionAddress",
												"nameLocation": "7509:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "7501:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7500:30:0"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7549:0:0"
									},
									"scope": 823,
									"src": "7466:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "7685:45:0",
										"statements": [
											{
												"expression": {
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 757,
														"name": "techAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "7696:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 758,
														"name": "_techAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "7710:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7696:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "7696:26:0"
											}
										]
									},
									"functionSelector": "669934a9",
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 755,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 754,
												"name": "onlyAdmin",
												"nameLocations": [
													"7676:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "7676:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7676:9:0"
										}
									],
									"name": "changeTechAddress",
									"nameLocation": "7627:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "_techAddress",
												"nameLocation": "7653:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "7645:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:22:0"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7685:0:0"
									},
									"scope": 823,
									"src": "7618:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "7809:49:0",
										"statements": [
											{
												"expression": {
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 769,
														"name": "marketAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "7820:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 770,
														"name": "_marketAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 764,
														"src": "7836:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7820:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 772,
												"nodeType": "ExpressionStatement",
												"src": "7820:30:0"
											}
										]
									},
									"functionSelector": "35aed778",
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 767,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 766,
												"name": "onlyAdmin",
												"nameLocations": [
													"7800:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "7800:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7800:9:0"
										}
									],
									"name": "changeMarketAddress",
									"nameLocation": "7747:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "_marketAddress",
												"nameLocation": "7775:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "7767:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:24:0"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7809:0:0"
									},
									"scope": 823,
									"src": "7738:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "7941:53:0",
										"statements": [
											{
												"expression": {
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 781,
														"name": "platformAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "7952:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 782,
														"name": "_platformAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "7970:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7952:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "7952:34:0"
											}
										]
									},
									"functionSelector": "cde85744",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 779,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 778,
												"name": "onlyAdmin",
												"nameLocations": [
													"7931:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "7931:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7931:9:0"
										}
									],
									"name": "changePlatformAddress",
									"nameLocation": "7875:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "_platformAddress",
												"nameLocation": "7905:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "7897:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7897:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7896:26:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7941:0:0"
									},
									"scope": 823,
									"src": "7866:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "8087:63:0",
										"statements": [
											{
												"expression": {
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 793,
														"name": "monthDividendAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "8098:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 794,
														"name": "_monthDividendAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "8121:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8098:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "8098:44:0"
											}
										]
									},
									"functionSelector": "f7656704",
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 791,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 790,
												"name": "onlyAdmin",
												"nameLocations": [
													"8077:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "8077:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8077:9:0"
										}
									],
									"name": "changeMonthDividenAddress",
									"nameLocation": "8011:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "_monthDividendAddress",
												"nameLocation": "8045:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "8037:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8036:31:0"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8087:0:0"
									},
									"scope": 823,
									"src": "8002:148:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "8219:39:0",
										"statements": [
											{
												"expression": {
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 805,
														"name": "swapRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "8230:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 806,
														"name": "_swapRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "8241:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8230:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "8230:20:0"
											}
										]
									},
									"functionSelector": "08f93bd8",
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 803,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 802,
												"name": "onlyAdmin",
												"nameLocations": [
													"8209:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "8209:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8209:9:0"
										}
									],
									"name": "changeSwapRate",
									"nameLocation": "8167:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "_swapRate",
												"nameLocation": "8190:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "8182:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8181:19:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8219:0:0"
									},
									"scope": 823,
									"src": "8158:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "8335:47:0",
										"statements": [
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 817,
														"name": "platformRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "8346:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 818,
														"name": "_platformRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "8361:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8346:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "8346:28:0"
											}
										]
									},
									"functionSelector": "72765009",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 815,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 814,
												"name": "onlyAdmin",
												"nameLocations": [
													"8325:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 115,
												"src": "8325:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8325:9:0"
										}
									],
									"name": "changePlatformRate",
									"nameLocation": "8275:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "_platformRate",
												"nameLocation": "8302:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "8294:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8293:23:0"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8335:0:0"
									},
									"scope": 823,
									"src": "8266:116:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 824,
							"src": "513:7876:0",
							"usedErrors": [],
							"usedEvents": [
								943,
								1066,
								1073,
								1078,
								1469
							]
						}
					],
					"src": "42:8347:0"
				},
				"id": 0
			},
			"contracts/pair/IBTBPair.sol": {
				"ast": {
					"absolutePath": "contracts/pair/IBTBPair.sol",
					"exportedSymbols": {
						"IBTBPair": [
							926
						]
					},
					"id": 927,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 825,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "42:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBTBPair",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 926,
							"linearizedBaseContracts": [
								926
							],
							"name": "IBTBPair",
							"nameLocation": "80:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 833,
									"name": "Mint",
									"nameLocation": "106:4:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "127:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "111:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "111:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "140:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "135:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "135:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "154:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "149:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "149:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "110:52:1"
									},
									"src": "100:63:1"
								},
								{
									"anonymous": false,
									"eventSelector": "dccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496",
									"id": 843,
									"name": "Burn",
									"nameLocation": "175:4:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "196:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "180:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "180:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "209:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "204:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "204:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "223:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "218:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "218:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "248:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "232:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "232:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "179:72:1"
									},
									"src": "169:83:1"
								},
								{
									"anonymous": false,
									"eventSelector": "d78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d822",
									"id": 857,
									"name": "Swap",
									"nameLocation": "264:4:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "295:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "279:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nameLocation": "317:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "312:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "312:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nameLocation": "342:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "337:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "337:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "367:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "362:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "362:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "393:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "388:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "388:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "430:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "414:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:171:1"
									},
									"src": "258:182:1"
								},
								{
									"anonymous": false,
									"eventSelector": "1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1",
									"id": 863,
									"name": "Sync",
									"nameLocation": "454:4:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "467:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "459:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 858,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "459:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "485:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "477:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 860,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "458:36:1"
									},
									"src": "448:47:1"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nameLocation": "512:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:2:1"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "555:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 865,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:6:1"
									},
									"scope": 926,
									"src": "503:58:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "576:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:1"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "608:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:9:1"
									},
									"scope": 926,
									"src": "567:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 878,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "632:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:2:1"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "664:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "664:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "663:9:1"
									},
									"scope": 926,
									"src": "623:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "688:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "699:2:1"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "reserve0",
												"nameLocation": "733:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "725:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 880,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "reserve1",
												"nameLocation": "751:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "743:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 882,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "743:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nameLocation": "768:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "761:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 884,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "761:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:63:1"
									},
									"scope": 926,
									"src": "679:109:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nameLocation": "803:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "823:2:1"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "849:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "849:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:6:1"
									},
									"scope": 926,
									"src": "794:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nameLocation": "870:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:2:1"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "916:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "916:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:6:1"
									},
									"scope": 926,
									"src": "861:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "939:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "952:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "944:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "944:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "943:12:1"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "979:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "974:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "974:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:16:1"
									},
									"scope": 926,
									"src": "930:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 913,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1005:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1018:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "1010:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1009:12:1"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1045:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "1040:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1040:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1059:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "1054:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1054:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:28:1"
									},
									"scope": 926,
									"src": "996:72:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6d9a640a",
									"id": 922,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "1083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "amount0Out",
												"nameLocation": "1093:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1088:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1088:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "amount1Out",
												"nameLocation": "1110:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1105:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1105:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1130:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 922,
												"src": "1122:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1122:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:46:1"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:0:1"
									},
									"scope": 926,
									"src": "1074:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nameLocation": "1158:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1162:2:1"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:0:1"
									},
									"scope": 926,
									"src": "1149:25:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 927,
							"src": "70:1109:1",
							"usedErrors": [],
							"usedEvents": [
								833,
								843,
								857,
								863
							]
						}
					],
					"src": "42:1137:1"
				},
				"id": 1
			},
			"lib/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							2121
						],
						"ContextUpgradeable": [
							2163
						],
						"Initializable": [
							1623
						],
						"OwnableUpgradeable": [
							1058
						]
					},
					"id": 1059,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:2"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 2164,
							"src": "127:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 930,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 1624,
							"src": "169:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 932,
										"name": "Initializable",
										"nameLocations": [
											"748:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1623,
										"src": "748:13:2"
									},
									"id": 933,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:2"
								},
								{
									"baseName": {
										"id": 934,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"763:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2163,
										"src": "763:18:2"
									},
									"id": 935,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:2"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 931,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1058,
							"linearizedBaseContracts": [
								1058,
								2163,
								1623
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 937,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "788:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 936,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 943,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "844:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "875:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:2"
									},
									"src": "817:84:2"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "1055:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 949,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "1065:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:2"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 946,
												"name": "onlyInitializing",
												"nameLocations": [
													"1038:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1568,
												"src": "1038:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:2"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:2"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:2"
									},
									"scope": 1058,
									"src": "1003:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "1166:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 959,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2148,
																"src": "1195:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 958,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "1176:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:2"
											}
										]
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 956,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 955,
												"name": "onlyInitializing",
												"nameLocations": [
													"1149:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1568,
												"src": "1149:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:2"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:2"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:2"
									},
									"scope": 1058,
									"src": "1104:111:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "1324:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 967,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "1334:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:2"
											},
											{
												"id": 970,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:2"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 972,
									"name": "onlyOwner",
									"nameLocation": "1312:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:2"
									},
									"src": "1303:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "1496:30:2",
										"statements": [
											{
												"expression": {
													"id": 978,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 937,
													"src": "1513:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 977,
												"id": 979,
												"nodeType": "Return",
												"src": "1506:13:2"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:2"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1487:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:2"
									},
									"scope": 1058,
									"src": "1441:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "1644:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 986,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "1662:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 988,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2148,
																	"src": "1673:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 985,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:2"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:2"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:2"
									},
									"scope": 1058,
									"src": "1599:130:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "2125:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1002,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1001,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "2135:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:2"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 998,
												"name": "onlyOwner",
												"nameLocations": [
													"2115:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "2115:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:2"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:2"
									},
									"scope": 1058,
									"src": "2071:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "2391:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1018,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1012,
																"src": "2409:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1021,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1019,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1017,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1028,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "2503:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1027,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1052,
														"src": "2484:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:2"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1015,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1014,
												"name": "onlyOwner",
												"nameLocations": [
													"2381:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "2381:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2348:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:2"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:2"
									},
									"scope": 1058,
									"src": "2321:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "2736:124:2",
										"statements": [
											{
												"assignments": [
													1039
												],
												"declarations": [
													{
														"constant": false,
														"id": 1039,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1051,
														"src": "2746:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1038,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"id": 1040,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 937,
													"src": "2765:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:2"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1042,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2781:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1043,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "2790:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1047,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "2834:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2844:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1046,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "2813:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "EmitStatement",
												"src": "2808:45:2"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "2701:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:2"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:2"
									},
									"scope": 1058,
									"src": "2673:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1057,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "3125:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1054,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1056,
										"length": {
											"hexValue": "3439",
											"id": 1055,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1059,
							"src": "708:2445:2",
							"usedErrors": [],
							"usedEvents": [
								943,
								1469
							]
						}
					],
					"src": "102:3052:2"
				},
				"id": 2
			},
			"lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
					"exportedSymbols": {
						"IERC1967Upgradeable": [
							1079
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1060,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1061,
								"nodeType": "StructuredDocumentation",
								"src": "132:131:3",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.9._"
							},
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079
							],
							"name": "IERC1967Upgradeable",
							"nameLocation": "274:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "300:68:3",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1066,
									"name": "Upgraded",
									"nameLocation": "379:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "404:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "388:30:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "387:32:3"
									},
									"src": "373:47:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "426:67:3",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1073,
									"name": "AdminChanged",
									"nameLocation": "504:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "525:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "517:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "548:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "540:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:41:3"
									},
									"src": "498:60:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "564:59:3",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1078,
									"name": "BeaconUpgraded",
									"nameLocation": "634:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "665:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "649:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:24:3"
									},
									"src": "628:45:3"
								}
							],
							"scope": 1080,
							"src": "264:411:3",
							"usedErrors": [],
							"usedEvents": [
								1066,
								1073,
								1078
							]
						}
					],
					"src": "107:569:3"
				},
				"id": 3
			},
			"lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
					"exportedSymbols": {
						"IERC1822ProxiableUpgradeable": [
							1089
						]
					},
					"id": 1090,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1081,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822ProxiableUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1082,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:4",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1089,
							"linearizedBaseContracts": [
								1089
							],
							"name": "IERC1822ProxiableUpgradeable",
							"nameLocation": "352:28:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "387:438:4",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1088,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "839:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:4"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "878:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1085,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:4"
									},
									"scope": 1089,
									"src": "830:57:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1090,
							"src": "342:547:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:777:4"
				},
				"id": 4
			},
			"lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							2121
						],
						"ERC1967UpgradeUpgradeable": [
							1444
						],
						"IBeaconUpgradeable": [
							1454
						],
						"IERC1822ProxiableUpgradeable": [
							1089
						],
						"IERC1967Upgradeable": [
							1079
						],
						"Initializable": [
							1623
						],
						"StorageSlotUpgradeable": [
							2223
						]
					},
					"id": 1445,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1091,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:5"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
							"file": "../beacon/IBeaconUpgradeable.sol",
							"id": 1092,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1445,
							"sourceUnit": 1455,
							"src": "141:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
							"file": "../../interfaces/IERC1967Upgradeable.sol",
							"id": 1093,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1445,
							"sourceUnit": 1080,
							"src": "184:50:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 1094,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1445,
							"sourceUnit": 1090,
							"src": "235:56:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 1095,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1445,
							"sourceUnit": 2122,
							"src": "292:44:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
							"file": "../../utils/StorageSlotUpgradeable.sol",
							"id": 1096,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1445,
							"sourceUnit": 2224,
							"src": "337:48:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../utils/Initializable.sol",
							"id": 1097,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1445,
							"sourceUnit": 1624,
							"src": "386:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1099,
										"name": "Initializable",
										"nameLocations": [
											"708:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1623,
										"src": "708:13:5"
									},
									"id": 1100,
									"nodeType": "InheritanceSpecifier",
									"src": "708:13:5"
								},
								{
									"baseName": {
										"id": 1101,
										"name": "IERC1967Upgradeable",
										"nameLocations": [
											"723:19:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "723:19:5"
									},
									"id": 1102,
									"nodeType": "InheritanceSpecifier",
									"src": "723:19:5"
								}
							],
							"canonicalName": "ERC1967UpgradeUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1098,
								"nodeType": "StructuredDocumentation",
								"src": "424:236:5",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"
							},
							"fullyImplemented": true,
							"id": 1444,
							"linearizedBaseContracts": [
								1444,
								1079,
								1623
							],
							"name": "ERC1967UpgradeUpgradeable",
							"nameLocation": "679:25:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "808:7:5",
										"statements": []
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1105,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1104,
												"name": "onlyInitializing",
												"nameLocations": [
													"791:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1568,
												"src": "791:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "791:16:5"
										}
									],
									"name": "__ERC1967Upgrade_init",
									"nameLocation": "758:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:5"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "808:0:5"
									},
									"scope": 1444,
									"src": "749:66:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "890:7:5",
										"statements": []
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1111,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1110,
												"name": "onlyInitializing",
												"nameLocations": [
													"873:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1568,
												"src": "873:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "873:16:5"
										}
									],
									"name": "__ERC1967Upgrade_init_unchained",
									"nameLocation": "830:31:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "861:2:5"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "890:0:5"
									},
									"scope": 1444,
									"src": "821:76:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 1117,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "1006:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "981:108:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1115,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 1116,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1023:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "1096:214:5",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 1121,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1341:20:5",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "1315:115:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1119,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1315:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1120,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1364:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "1571:89:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1129,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1121,
																"src": "1626:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1127,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "1588:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2223_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1611:14:5",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2189,
															"src": "1588:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2169_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1588:59:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2169_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1648:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2168,
													"src": "1588:65:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1132,
												"nodeType": "Return",
												"src": "1581:72:5"
											}
										]
									},
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "1437:67:5",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1518:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1536:2:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1562:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1561:9:5"
									},
									"scope": 1444,
									"src": "1509:151:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "1814:218:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1143,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "1862:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1141,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "1832:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$2121_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1851:10:5",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1855,
																"src": "1832:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1832:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1882:47:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 1140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1824:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1824:106:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "1824:106:5"
											},
											{
												"expression": {
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1151,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1121,
																	"src": "1978:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1148,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2223,
																	"src": "1940:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2223_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1963:14:5",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2189,
																"src": "1940:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2169_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1940:59:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2169_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2000:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2168,
														"src": "1940:65:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1154,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "2008:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1940:85:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "1940:85:5"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "1666:80:5",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1760:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1787:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1779:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:27:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:0:5"
									},
									"scope": 1444,
									"src": "1751:281:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "2194:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "2223:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1164,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1158,
														"src": "2204:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2204:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "2204:37:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1169,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "2265:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1168,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "2256:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2256:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1171,
												"nodeType": "EmitStatement",
												"src": "2251:32:5"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "2038:95:5",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2147:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2166:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2158:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2157:27:5"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:0:5"
									},
									"scope": 1444,
									"src": "2138:152:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1200,
										"nodeType": "Block",
										"src": "2552:160:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "2573:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1183,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "2562:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "2562:29:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1187,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "2605:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2610:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2605:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2619:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2605:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 1191,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "2624:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2605:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1199,
												"nodeType": "IfStatement",
												"src": "2601:105:5",
												"trueBody": {
													"id": 1198,
													"nodeType": "Block",
													"src": "2635:71:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1194,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1176,
																		"src": "2671:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1195,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1178,
																		"src": "2690:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1193,
																	"name": "_functionDelegateCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1438,
																	"src": "2649:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2649:46:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1197,
															"nodeType": "ExpressionStatement",
															"src": "2649:46:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "2296:123:5",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 1201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2433:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2468:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "2460:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2508:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "2495:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1177,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2527:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "2522:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2522:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:92:5"
									},
									"returnParameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2552:0:5"
									},
									"scope": 1444,
									"src": "2424:288:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "3016:842:5",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 1213,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "3368:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1211,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "3330:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2223_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3353:14:5",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2200,
															"src": "3330:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$2172_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3330:53:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$2172_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3384:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2171,
													"src": "3330:59:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1251,
													"nodeType": "Block",
													"src": "3459:393:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1236,
																		"nodeType": "Block",
																		"src": "3564:115:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 1232,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1230,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1227,
																								"src": "3590:4:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 1231,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1121,
																								"src": "3598:20:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3590:28:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 1233,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3620:43:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 1229,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3582:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 1234,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3582:82:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1235,
																				"nodeType": "ExpressionStatement",
																				"src": "3582:82:5"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1237,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1228,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1227,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3558:4:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1237,
																				"src": "3550:12:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1226,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3550:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3549:14:5"
																	},
																	"src": "3541:138:5"
																},
																{
																	"block": {
																		"id": 1242,
																		"nodeType": "Block",
																		"src": "3686:89:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 1239,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3711:48:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 1238,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3704:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1240,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3704:56:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1241,
																				"nodeType": "ExpressionStatement",
																				"src": "3704:56:5"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1243,
																	"nodeType": "TryCatchClause",
																	"src": "3680:95:5"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1222,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1204,
																				"src": "3506:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1221,
																			"name": "IERC1822ProxiableUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1089,
																			"src": "3477:28:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822ProxiableUpgradeable_$1089_$",
																				"typeString": "type(contract IERC1822ProxiableUpgradeable)"
																			}
																		},
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3477:47:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822ProxiableUpgradeable_$1089",
																			"typeString": "contract IERC1822ProxiableUpgradeable"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3525:13:5",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1088,
																	"src": "3477:61:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3477:63:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1244,
															"nodeType": "TryStatement",
															"src": "3473:302:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1246,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "3806:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1247,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1206,
																		"src": "3825:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1248,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "3831:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1245,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "3788:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3788:53:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1250,
															"nodeType": "ExpressionStatement",
															"src": "3788:53:5"
														}
													]
												},
												"id": 1252,
												"nodeType": "IfStatement",
												"src": "3326:526:5",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "3391:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1217,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "3424:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1216,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1158,
																	"src": "3405:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3405:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "3405:37:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "2718:161:5",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 1254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2893:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2932:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "2924:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2924:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2972:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "2959:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2959:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2991:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "2986:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2914:92:5"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3016:0:5"
									},
									"scope": 1444,
									"src": "2884:974:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "3864:189:5",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 1258,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "4084:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "4058:106:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1256,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4058:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1257,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4098:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "4279:80:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1266,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "4334:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1264,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "4296:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2223_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4319:14:5",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2189,
															"src": "4296:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2169_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4296:50:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2169_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4347:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2168,
													"src": "4296:56:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1263,
												"id": 1269,
												"nodeType": "Return",
												"src": "4289:63:5"
											}
										]
									},
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "4171:50:5",
										"text": " @dev Returns the current admin."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4235:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4244:2:5"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "4270:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4270:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4269:9:5"
									},
									"scope": 1444,
									"src": "4226:133:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "4486:167:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1278,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "4504:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4524:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4516:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1279,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4516:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4516:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4504:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4528:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 1277,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4496:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4496:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "4496:73:5"
											},
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1290,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "4617:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1287,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2223,
																	"src": "4579:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2223_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4602:14:5",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2189,
																"src": "4579:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2169_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4579:50:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2169_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4630:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2168,
														"src": "4579:56:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1293,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "4638:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4579:67:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "4579:67:5"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "4365:71:5",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4450:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4468:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "4460:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4460:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4459:18:5"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4486:0:5"
									},
									"scope": 1444,
									"src": "4441:212:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "4813:86:5",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1304,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "4841:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4841:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1306,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "4854:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1303,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "4828:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4828:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "EmitStatement",
												"src": "4823:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1310,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "4883:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1309,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1297,
														"src": "4873:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "ExpressionStatement",
												"src": "4873:19:5"
											}
										]
									},
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "4659:100:5",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4773:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4794:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "4786:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4786:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4785:18:5"
									},
									"returnParameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4813:0:5"
									},
									"scope": 1444,
									"src": "4764:135:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "4905:232:5",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 1318,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5168:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "5142:107:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1316,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5142:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1317,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5183:66:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "5366:81:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1326,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1318,
																"src": "5421:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1324,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2223,
																"src": "5383:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2223_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5406:14:5",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2189,
															"src": "5383:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2169_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5383:51:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2169_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5435:5:5",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2168,
													"src": "5383:57:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1323,
												"id": 1329,
												"nodeType": "Return",
												"src": "5376:64:5"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "5256:51:5",
										"text": " @dev Returns the current beacon."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5321:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5331:2:5"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5357:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5357:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5356:9:5"
									},
									"scope": 1444,
									"src": "5312:135:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "5576:368:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1340,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "5624:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1338,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "5594:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$2121_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5613:10:5",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1855,
																"src": "5594:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5594:40:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5636:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 1337,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5586:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5586:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "5586:90:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1349,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1334,
																					"src": "5756:9:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1348,
																				"name": "IBeaconUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1454,
																				"src": "5737:18:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$1454_$",
																					"typeString": "type(contract IBeaconUpgradeable)"
																				}
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:29:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeaconUpgradeable_$1454",
																				"typeString": "contract IBeaconUpgradeable"
																			}
																		},
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5767:14:5",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1453,
																		"src": "5737:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5737:46:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1346,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "5707:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$2121_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5726:10:5",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1855,
																"src": "5707:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5707:77:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5798:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 1345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5686:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5686:172:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "5686:172:5"
											},
											{
												"expression": {
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1360,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1318,
																	"src": "5906:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1357,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2223,
																	"src": "5868:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$2223_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5891:14:5",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2189,
																"src": "5868:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2169_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5868:51:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2169_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5920:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2168,
														"src": "5868:57:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1363,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "5928:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5868:69:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "5868:69:5"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "5453:71:5",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5538:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5557:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "5549:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5549:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5548:19:5"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5576:0:5"
									},
									"scope": 1444,
									"src": "5529:415:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "6373:221:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1378,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "6394:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1377,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "6383:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6383:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "6383:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1382,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "6434:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1381,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "6419:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1384,
												"nodeType": "EmitStatement",
												"src": "6414:30:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1385,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "6458:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6463:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6458:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6472:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6458:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 1389,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "6477:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6458:28:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1401,
												"nodeType": "IfStatement",
												"src": "6454:134:5",
												"trueBody": {
													"id": 1400,
													"nodeType": "Block",
													"src": "6488:100:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1393,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1370,
																						"src": "6543:9:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1392,
																					"name": "IBeaconUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1454,
																					"src": "6524:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$1454_$",
																						"typeString": "type(contract IBeaconUpgradeable)"
																					}
																				},
																				"id": 1394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6524:29:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeaconUpgradeable_$1454",
																					"typeString": "contract IBeaconUpgradeable"
																				}
																			},
																			"id": 1395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6554:14:5",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1453,
																			"src": "6524:44:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6524:46:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1397,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1372,
																		"src": "6572:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1391,
																	"name": "_functionDelegateCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1438,
																	"src": "6502:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6502:75:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1399,
															"nodeType": "ExpressionStatement",
															"src": "6502:75:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "5950:292:5",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6256:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6297:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "6289:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6289:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6329:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "6316:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6316:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6348:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "6343:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6343:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6279:84:5"
									},
									"returnParameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6373:0:5"
									},
									"scope": 1444,
									"src": "6247:347:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1437,
										"nodeType": "Block",
										"src": "6877:358:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1416,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1406,
																	"src": "6925:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1414,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "6895:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$2121_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6914:10:5",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1855,
																"src": "6895:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6895:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6934:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6887:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6887:88:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "6887:88:5"
											},
											{
												"assignments": [
													1422,
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7051:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1437,
														"src": "7046:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1421,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7046:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7073:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1437,
														"src": "7060:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7060:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"arguments": [
														{
															"id": 1427,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "7107:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1425,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "7087:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7094:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7087:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7087:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7045:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1432,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "7165:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1433,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "7174:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7186:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"expression": {
															"id": 1430,
															"name": "AddressUpgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2121,
															"src": "7129:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$2121_$",
																"typeString": "type(library AddressUpgradeable)"
															}
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7148:16:5",
														"memberName": "verifyCallResult",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2100,
														"src": "7129:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7129:99:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1412,
												"id": 1436,
												"nodeType": "Return",
												"src": "7122:106:5"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "6600:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_functionDelegateCall",
									"nameLocation": "6789:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6819:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "6811:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6811:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6840:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "6827:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6827:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6810:35:5"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1438,
												"src": "6863:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1410,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6863:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6862:14:5"
									},
									"scope": 1444,
									"src": "6780:455:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1439,
										"nodeType": "StructuredDocumentation",
										"src": "7241:254:5",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1443,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "7520:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1444,
									"src": "7500:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1440,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7500:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1442,
										"length": {
											"hexValue": "3530",
											"id": 1441,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "7508:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "7500:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1445,
							"src": "661:6867:5",
							"usedErrors": [],
							"usedEvents": [
								1066,
								1073,
								1078,
								1469
							]
						}
					],
					"src": "116:7413:5"
				},
				"id": 5
			},
			"lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
					"exportedSymbols": {
						"IBeaconUpgradeable": [
							1454
						]
					},
					"id": 1455,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1446,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeaconUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1447,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:6",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1454,
							"linearizedBaseContracts": [
								1454
							],
							"name": "IBeaconUpgradeable",
							"nameLocation": "208:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "233:162:6",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "409:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:6"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "449:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:6"
									},
									"scope": 1454,
									"src": "400:58:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1455,
							"src": "198:262:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "93:368:6"
				},
				"id": 6
			},
			"lib/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							2121
						],
						"Initializable": [
							1623
						]
					},
					"id": 1624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1456,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:7"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 1457,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1624,
							"sourceUnit": 2122,
							"src": "138:44:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1458,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:7",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 1623,
							"linearizedBaseContracts": [
								1623
							],
							"name": "Initializable",
							"nameLocation": "2401:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1459,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:7",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 1461,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1623,
									"src": "2535:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1460,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:7",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 1464,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:7",
									"nodeType": "VariableDeclaration",
									"scope": 1623,
									"src": "2664:26:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1463,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1465,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:7",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 1469,
									"name": "Initialized",
									"nameLocation": "2798:11:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1469,
												"src": "2810:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1466,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:7"
									},
									"src": "2792:33:7"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "3258:483:7",
										"statements": [
											{
												"assignments": [
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3273:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1524,
														"src": "3268:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1472,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3268:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3290:14:7",
													"subExpression": {
														"id": 1474,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "3291:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3268:36:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1478,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1473,
																			"src": "3336:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1479,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "3354:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1480,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3369:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3354:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3336:34:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1483,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3335:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3376:45:7",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1488,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3415:4:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$1623",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$1623",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 1487,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3407:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1486,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3407:7:7",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1489,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3407:13:7",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 1484,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2121,
																						"src": "3377:18:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$2121_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 1485,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3396:10:7",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1855,
																					"src": "3377:29:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 1490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3377:44:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1492,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1461,
																				"src": "3425:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3441:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3425:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3376:66:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3375:68:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3335:108:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3457:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 1477,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3314:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:201:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1500,
												"nodeType": "ExpressionStatement",
												"src": "3314:201:7"
											},
											{
												"expression": {
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1501,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "3525:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3540:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3525:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "3525:16:7"
											},
											{
												"condition": {
													"id": 1505,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1473,
													"src": "3555:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1511,
												"nodeType": "IfStatement",
												"src": "3551:65:7",
												"trueBody": {
													"id": 1510,
													"nodeType": "Block",
													"src": "3571:45:7",
													"statements": [
														{
															"expression": {
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1506,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "3585:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3601:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3585:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1509,
															"nodeType": "ExpressionStatement",
															"src": "3585:20:7"
														}
													]
												}
											},
											{
												"id": 1512,
												"nodeType": "PlaceholderStatement",
												"src": "3625:1:7"
											},
											{
												"condition": {
													"id": 1513,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1473,
													"src": "3640:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "3636:99:7",
												"trueBody": {
													"id": 1522,
													"nodeType": "Block",
													"src": "3656:79:7",
													"statements": [
														{
															"expression": {
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1514,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "3670:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3686:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3670:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1517,
															"nodeType": "ExpressionStatement",
															"src": "3670:21:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 1519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3722:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 1518,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "3710:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3710:14:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1521,
															"nodeType": "EmitStatement",
															"src": "3705:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "2831:399:7",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 1525,
									"name": "initializer",
									"nameLocation": "3244:11:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:7"
									},
									"src": "3235:506:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "4852:255:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4870:14:7",
																"subExpression": {
																	"id": 1531,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "4871:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1533,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "4888:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1534,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1528,
																	"src": "4903:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4888:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4870:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 1530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4862:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:99:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "4862:99:7"
											},
											{
												"expression": {
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1540,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "4971:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1541,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "4986:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4971:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1543,
												"nodeType": "ExpressionStatement",
												"src": "4971:22:7"
											},
											{
												"expression": {
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1544,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "5003:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5019:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5003:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "5003:20:7"
											},
											{
												"id": 1548,
												"nodeType": "PlaceholderStatement",
												"src": "5033:1:7"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1549,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "5044:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5060:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5044:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "5044:21:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1554,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "5092:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1553,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "5080:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5080:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "EmitStatement",
												"src": "5075:25:7"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "3747:1062:7",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 1558,
									"name": "reinitializer",
									"nameLocation": "4823:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4843:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "4837:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1527,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4837:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4836:15:7"
									},
									"src": "4814:293:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "5345:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1562,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "5363:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5378:45:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 1561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5355:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5355:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "5355:69:7"
											},
											{
												"id": 1566,
												"nodeType": "PlaceholderStatement",
												"src": "5434:1:7"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "5113:199:7",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 1568,
									"name": "onlyInitializing",
									"nameLocation": "5326:16:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5342:2:7"
									},
									"src": "5317:125:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "5977:230:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5995:14:7",
															"subExpression": {
																"id": 1573,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "5996:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6011:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 1572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5987:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5987:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "5987:66:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1578,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "6067:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6087:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1580,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6087:5:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 1579,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6082:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6082:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6094:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6082:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6067:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1602,
												"nodeType": "IfStatement",
												"src": "6063:138:7",
												"trueBody": {
													"id": 1601,
													"nodeType": "Block",
													"src": "6099:102:7",
													"statements": [
														{
															"expression": {
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1585,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "6113:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6133:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 1587,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6133:5:7",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 1586,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6128:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6128:11:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 1590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6140:3:7",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6128:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6113:30:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1592,
															"nodeType": "ExpressionStatement",
															"src": "6113:30:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1596,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6179:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 1595,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6179:5:7",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 1594,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6174:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6174:11:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 1598,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6186:3:7",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6174:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 1593,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "6162:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6162:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1600,
															"nodeType": "EmitStatement",
															"src": "6157:33:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "5448:475:7",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5937:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5957:2:7"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5977:0:7"
									},
									"scope": 1623,
									"src": "5928:279:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "6381:36:7",
										"statements": [
											{
												"expression": {
													"id": 1610,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1461,
													"src": "6398:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1609,
												"id": 1611,
												"nodeType": "Return",
												"src": "6391:19:7"
											}
										]
									},
									"documentation": {
										"id": 1605,
										"nodeType": "StructuredDocumentation",
										"src": "6213:99:7",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6326:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6348:2:7"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "6374:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1607,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6374:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6373:7:7"
									},
									"scope": 1623,
									"src": "6317:100:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1621,
										"nodeType": "Block",
										"src": "6589:37:7",
										"statements": [
											{
												"expression": {
													"id": 1619,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1464,
													"src": "6606:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1618,
												"id": 1620,
												"nodeType": "Return",
												"src": "6599:20:7"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "6423:105:7",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 1622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6542:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6557:2:7"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "6583:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1616,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6583:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6582:6:7"
									},
									"scope": 1623,
									"src": "6533:93:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1624,
							"src": "2383:4245:7",
							"usedErrors": [],
							"usedEvents": [
								1469
							]
						}
					],
					"src": "113:6516:7"
				},
				"id": 7
			},
			"lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							2121
						],
						"ERC1967UpgradeUpgradeable": [
							1444
						],
						"IBeaconUpgradeable": [
							1454
						],
						"IERC1822ProxiableUpgradeable": [
							1089
						],
						"IERC1967Upgradeable": [
							1079
						],
						"Initializable": [
							1623
						],
						"StorageSlotUpgradeable": [
							2223
						],
						"UUPSUpgradeable": [
							1759
						]
					},
					"id": 1760,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:8"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 1626,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1760,
							"sourceUnit": 1090,
							"src": "140:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
							"file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
							"id": 1627,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1760,
							"sourceUnit": 1445,
							"src": "197:50:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 1628,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1760,
							"sourceUnit": 1624,
							"src": "248:29:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1630,
										"name": "Initializable",
										"nameLocations": [
											"965:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1623,
										"src": "965:13:8"
									},
									"id": 1631,
									"nodeType": "InheritanceSpecifier",
									"src": "965:13:8"
								},
								{
									"baseName": {
										"id": 1632,
										"name": "IERC1822ProxiableUpgradeable",
										"nameLocations": [
											"980:28:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1089,
										"src": "980:28:8"
									},
									"id": 1633,
									"nodeType": "InheritanceSpecifier",
									"src": "980:28:8"
								},
								{
									"baseName": {
										"id": 1634,
										"name": "ERC1967UpgradeUpgradeable",
										"nameLocations": [
											"1010:25:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1444,
										"src": "1010:25:8"
									},
									"id": 1635,
									"nodeType": "InheritanceSpecifier",
									"src": "1010:25:8"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1629,
								"nodeType": "StructuredDocumentation",
								"src": "279:648:8",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1759,
							"linearizedBaseContracts": [
								1759,
								1444,
								1079,
								1089,
								1623
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "946:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1640,
										"nodeType": "Block",
										"src": "1102:7:8",
										"statements": []
									},
									"id": 1641,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1638,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1637,
												"name": "onlyInitializing",
												"nameLocations": [
													"1085:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1568,
												"src": "1085:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1085:16:8"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "1051:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:2:8"
									},
									"returnParameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:8"
									},
									"scope": 1759,
									"src": "1042:67:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "1185:7:8",
										"statements": []
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1644,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1643,
												"name": "onlyInitializing",
												"nameLocations": [
													"1168:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1568,
												"src": "1168:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1168:16:8"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "1124:32:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1156:2:8"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1185:0:8"
									},
									"scope": 1759,
									"src": "1115:77:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "1197:87:8",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 1654,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1315:6:8",
									"nodeType": "VariableDeclaration",
									"scope": 1759,
									"src": "1289:48:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1649,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1289:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1652,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1332:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1759",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1759",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 1651,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1324:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1650,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1324:7:8",
												"typeDescriptions": {}
											}
										},
										"id": 1653,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1324:13:8",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "1863:205:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1660,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1889:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1759",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1759",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1658,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1881:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1881:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1662,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "1898:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1881:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1906:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 1657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1873:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1873:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1666,
												"nodeType": "ExpressionStatement",
												"src": "1873:80:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1668,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "1971:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1971:20:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1670,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "1995:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1971:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2003:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 1667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1963:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "1963:87:8"
											},
											{
												"id": 1675,
												"nodeType": "PlaceholderStatement",
												"src": "2060:1:8"
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "1344:493:8",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 1677,
									"name": "onlyProxy",
									"nameLocation": "1851:9:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:8"
									},
									"src": "1842:226:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "2298:120:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1683,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2324:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1759",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$1759",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2316:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1681,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2316:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2316:13:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1685,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1654,
																"src": "2333:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2316:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 1680,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2308:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2308:92:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "2308:92:8"
											},
											{
												"id": 1690,
												"nodeType": "PlaceholderStatement",
												"src": "2410:1:8"
											}
										]
									},
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "2074:195:8",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 1692,
									"name": "notDelegated",
									"nameLocation": "2283:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:2:8"
									},
									"src": "2274:144:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1088
									],
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "3093:44:8",
										"statements": [
											{
												"expression": {
													"id": 1701,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1121,
													"src": "3110:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1700,
												"id": 1702,
												"nodeType": "Return",
												"src": "3103:27:8"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "2424:577:8",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1697,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1696,
												"name": "notDelegated",
												"nameLocations": [
													"3062:12:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1692,
												"src": "3062:12:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3062:12:8"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3015:13:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1695,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3053:8:8"
									},
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:2:8"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "3084:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1698,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3084:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:9:8"
									},
									"scope": 1759,
									"src": "3006:131:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "3390:124:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1713,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "3418:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1712,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "3400:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "3400:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1717,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "3468:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3497:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3487:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1718,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3491:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3487:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3501:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1716,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "3446:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3446:61:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "3446:61:8"
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "3143:169:8",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."
									},
									"functionSelector": "3659cfe6",
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1709,
												"name": "onlyProxy",
												"nameLocations": [
													"3380:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1677,
												"src": "3380:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3380:9:8"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3326:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3344:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "3336:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3336:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3335:27:8"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:8"
									},
									"scope": 1759,
									"src": "3317:197:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "3870:115:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1737,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "3898:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1736,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "3880:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3880:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "3880:36:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1741,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "3948:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1742,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "3967:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3973:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1740,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "3926:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "3926:52:8"
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "3520:238:8",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event."
									},
									"functionSelector": "4f1ef286",
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1733,
												"name": "onlyProxy",
												"nameLocations": [
													"3860:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1677,
												"src": "3860:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3860:9:8"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3772:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3797:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "3789:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3789:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3829:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "3816:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3816:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3788:46:8"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3870:0:8"
									},
									"scope": 1759,
									"src": "3763:222:8",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "3991:397:8",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 1753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4402:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4428:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "4420:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:27:8"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4463:0:8"
									},
									"scope": 1759,
									"src": "4393:71:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "4470:254:8",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1758,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4749:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1759,
									"src": "4729:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1755,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4729:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1757,
										"length": {
											"hexValue": "3530",
											"id": 1756,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4737:2:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4729:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1760,
							"src": "928:3829:8",
							"usedErrors": [],
							"usedEvents": [
								1066,
								1073,
								1078,
								1469
							]
						}
					],
					"src": "115:4643:8"
				},
				"id": 8
			},
			"lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1837
						]
					},
					"id": 1838,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1761,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1762,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:9",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1837,
							"linearizedBaseContracts": [
								1837
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:9",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1771,
									"name": "Transfer",
									"nameLocation": "405:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "414:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "436:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1771,
												"src": "456:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:9"
									},
									"src": "399:72:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:9",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1780,
									"name": "Approval",
									"nameLocation": "636:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "645:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "668:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1780,
												"src": "693:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:9"
									},
									"src": "630:78:9"
								},
								{
									"documentation": {
										"id": 1781,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:9",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:9"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "831:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:9"
									},
									"scope": 1837,
									"src": "785:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:9",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "942:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:9"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "982:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:9"
									},
									"scope": 1837,
									"src": "923:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:9",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1222:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1234:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:9"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "1268:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1801,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:9"
									},
									"scope": 1837,
									"src": "1204:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:9",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1814,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "1568:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "1583:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:9"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "1623:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:9"
									},
									"scope": 1837,
									"src": "1549:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:9",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "2302:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "2319:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:9"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "2353:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1821,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:9"
									},
									"scope": 1837,
									"src": "2285:74:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:9",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2688:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2710:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2730:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:9"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1836,
												"src": "2769:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1833,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:9"
									},
									"scope": 1837,
									"src": "2657:118:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1838,
							"src": "202:2575:9",
							"usedErrors": [],
							"usedEvents": [
								1771,
								1780
							]
						}
					],
					"src": "106:2672:9"
				},
				"id": 9
			},
			"lib/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							2121
						]
					},
					"id": 2122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1839,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1840,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2121,
							"linearizedBaseContracts": [
								2121
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "1252:254:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1848,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1843,
																"src": "1476:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1484:4:10",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1489:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1847,
												"id": 1853,
												"nodeType": "Return",
												"src": "1469:30:10"
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:10",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "1206:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:10"
									},
									"returnParameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "1246:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1845,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:10"
									},
									"scope": 2121,
									"src": "1186:320:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "2494:241:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1866,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$2121",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$2121",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1864,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2526:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1869,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "2537:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:10"
											},
											{
												"assignments": [
													1875,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1875,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1888,
														"src": "2589:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1874,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1882,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1876,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1858,
																"src": "2607:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2617:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1878,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "2629:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1884,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1875,
															"src": "2658:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:10"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "2442:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "2469:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:10"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:10"
									},
									"scope": 2121,
									"src": "2423:312:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1906,
										"nodeType": "Block",
										"src": "3566:96:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1900,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "3605:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1901,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "3613:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3619:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3622:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1899,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1947,
															1991
														],
														"referencedDeclaration": 1991,
														"src": "3583:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:72:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1898,
												"id": 1905,
												"nodeType": "Return",
												"src": "3576:79:10"
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "3499:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "3515:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1893,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:10"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1907,
												"src": "3552:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:10"
									},
									"scope": 2121,
									"src": "3477:185:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "4031:76:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1920,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1910,
															"src": "4070:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1921,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "4078:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4084:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1923,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "4087:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1919,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1947,
															1991
														],
														"referencedDeclaration": 1991,
														"src": "4048:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4048:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1925,
												"nodeType": "Return",
												"src": "4041:59:10"
											}
										]
									},
									"documentation": {
										"id": 1908,
										"nodeType": "StructuredDocumentation",
										"src": "3668:211:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3893:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3923:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "3915:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3915:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3952:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "3939:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3939:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3980:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "3966:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1913,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3966:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3905:93:10"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "4017:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1916,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4017:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4016:14:10"
									},
									"scope": 2121,
									"src": "3884:223:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "4612:111:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1940,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "4651:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1941,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "4659:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1942,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "4665:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4672:43:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1939,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1947,
															1991
														],
														"referencedDeclaration": 1991,
														"src": "4629:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4629:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1938,
												"id": 1945,
												"nodeType": "Return",
												"src": "4622:94:10"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "4113:351:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4478:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4517:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4509:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4509:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4546:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4533:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4533:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4568:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4560:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4560:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:80:10"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "4598:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1936,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4598:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:14:10"
									},
									"scope": 2121,
									"src": "4469:254:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1990,
										"nodeType": "Block",
										"src": "5150:267:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1964,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5176:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$2121",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$2121",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5168:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1962,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5168:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5168:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5182:7:10",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5168:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1967,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1954,
																"src": "5193:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1969,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5200:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5160:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1971,
												"nodeType": "ExpressionStatement",
												"src": "5160:81:10"
											},
											{
												"assignments": [
													1973,
													1975
												],
												"declarations": [
													{
														"constant": false,
														"id": 1973,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5257:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1990,
														"src": "5252:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1972,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5252:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5279:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1990,
														"src": "5266:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1974,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5266:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"arguments": [
														{
															"id": 1980,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "5319:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1976,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1950,
																"src": "5293:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5300:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5293:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1978,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1954,
																"src": "5312:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5293:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5293:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5251:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1984,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1950,
															"src": "5368:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1985,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "5376:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1986,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1975,
															"src": "5385:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1987,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "5397:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1983,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "5341:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1960,
												"id": 1989,
												"nodeType": "Return",
												"src": "5334:76:10"
											}
										]
									},
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "4729:237:10",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4980:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5019:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5011:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5048:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5035:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5035:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5070:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5062:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5062:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5099:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5085:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5085:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:116:10"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1991,
												"src": "5136:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1958,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5136:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:14:10"
									},
									"scope": 2121,
									"src": "4971:446:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "5694:97:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2002,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "5730:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2003,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "5738:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5744:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2001,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2008,
															2037
														],
														"referencedDeclaration": 2037,
														"src": "5711:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5711:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2000,
												"id": 2006,
												"nodeType": "Return",
												"src": "5704:80:10"
											}
										]
									},
									"documentation": {
										"id": 1992,
										"nodeType": "StructuredDocumentation",
										"src": "5423:166:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5603:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5630:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "5622:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5622:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5651:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "5638:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1995,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5638:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5621:35:10"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "5680:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5680:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5679:14:10"
									},
									"scope": 2121,
									"src": "5594:197:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2036,
										"nodeType": "Block",
										"src": "6133:168:10",
										"statements": [
											{
												"assignments": [
													2021,
													2023
												],
												"declarations": [
													{
														"constant": false,
														"id": 2021,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6149:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2036,
														"src": "6144:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2020,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6144:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2023,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6171:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2036,
														"src": "6158:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2022,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6158:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2028,
												"initialValue": {
													"arguments": [
														{
															"id": 2026,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "6203:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2024,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "6185:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6192:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6185:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6185:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2030,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "6252:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2031,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "6260:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2032,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "6269:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2033,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "6281:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2029,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "6225:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6225:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2019,
												"id": 2035,
												"nodeType": "Return",
												"src": "6218:76:10"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "5797:173:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5984:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6020:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "6012:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6012:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6049:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "6036:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2012,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6036:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6077:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "6063:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2014,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6063:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6002:93:10"
									},
									"returnParameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "6119:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2017,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6119:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6118:14:10"
									},
									"scope": 2121,
									"src": "5975:326:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "6783:434:10",
										"statements": [
											{
												"condition": {
													"id": 2051,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2042,
													"src": "6797:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2073,
													"nodeType": "Block",
													"src": "7153:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2069,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2044,
																		"src": "7175:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2070,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2046,
																		"src": "7187:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2068,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "7167:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7167:33:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2072,
															"nodeType": "ExpressionStatement",
															"src": "7167:33:10"
														}
													]
												},
												"id": 2074,
												"nodeType": "IfStatement",
												"src": "6793:418:10",
												"trueBody": {
													"id": 2067,
													"nodeType": "Block",
													"src": "6806:341:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2052,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2044,
																		"src": "6824:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6835:6:10",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6824:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6845:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6824:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2064,
															"nodeType": "IfStatement",
															"src": "6820:286:10",
															"trueBody": {
																"id": 2063,
																"nodeType": "Block",
																"src": "6848:258:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2058,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2040,
																							"src": "7050:6:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2057,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1855,
																						"src": "7039:10:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 2059,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7039:18:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 2060,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7059:31:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 2056,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7031:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7031:60:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2062,
																		"nodeType": "ExpressionStatement",
																		"src": "7031:60:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2065,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "7126:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2050,
															"id": 2066,
															"nodeType": "Return",
															"src": "7119:17:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2038,
										"nodeType": "StructuredDocumentation",
										"src": "6307:277:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "6598:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6642:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "6634:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6634:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2042,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6663:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "6658:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6658:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6693:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "6680:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6680:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6727:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "6713:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2045,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6713:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6624:121:10"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "6769:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2048,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6769:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:14:10"
									},
									"scope": 2121,
									"src": "6589:628:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "7598:135:10",
										"statements": [
											{
												"condition": {
													"id": 2088,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2079,
													"src": "7612:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2097,
													"nodeType": "Block",
													"src": "7669:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2093,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "7691:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 2094,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2083,
																		"src": "7703:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2092,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2120,
																	"src": "7683:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7683:33:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2096,
															"nodeType": "ExpressionStatement",
															"src": "7683:33:10"
														}
													]
												},
												"id": 2098,
												"nodeType": "IfStatement",
												"src": "7608:119:10",
												"trueBody": {
													"id": 2091,
													"nodeType": "Block",
													"src": "7621:42:10",
													"statements": [
														{
															"expression": {
																"id": 2089,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2081,
																"src": "7642:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2087,
															"id": 2090,
															"nodeType": "Return",
															"src": "7635:17:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "7223:210:10",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7447:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7478:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "7473:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2078,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7473:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7508:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "7495:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7495:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7542:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "7528:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2082,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7528:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7463:97:10"
									},
									"returnParameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "7584:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2085,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7584:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:14:10"
									},
									"scope": 2121,
									"src": "7438:295:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2119,
										"nodeType": "Block",
										"src": "7822:457:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2107,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "7898:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7909:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7898:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7918:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7898:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2117,
													"nodeType": "Block",
													"src": "8228:45:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2114,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2104,
																		"src": "8249:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2113,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "8242:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8242:20:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2116,
															"nodeType": "ExpressionStatement",
															"src": "8242:20:10"
														}
													]
												},
												"id": 2118,
												"nodeType": "IfStatement",
												"src": "7894:379:10",
												"trueBody": {
													"id": 2112,
													"nodeType": "Block",
													"src": "7921:301:10",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8079:133:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8097:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "8126:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8120:5:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8120:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8101:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8165:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "8169:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8161:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8161:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "8182:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8154:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8154:44:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8154:44:10"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 2102,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8126:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 2102,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "8169:10:10",
																	"valueSize": 1
																}
															],
															"id": 2111,
															"nodeType": "InlineAssembly",
															"src": "8070:142:10"
														}
													]
												}
											}
										]
									},
									"id": 2120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "7748:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7769:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "7756:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7756:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7795:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "7781:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2103,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7781:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7755:53:10"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7822:0:10"
									},
									"scope": 2121,
									"src": "7739:540:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2122,
							"src": "194:8087:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:8181:10"
				},
				"id": 10
			},
			"lib/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							2121
						],
						"ContextUpgradeable": [
							2163
						],
						"Initializable": [
							1623
						]
					},
					"id": 2164,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:11"
						},
						{
							"absolutePath": "lib/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 2124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2164,
							"sourceUnit": 1624,
							"src": "110:42:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2126,
										"name": "Initializable",
										"nameLocations": [
											"691:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1623,
										"src": "691:13:11"
									},
									"id": 2127,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:11"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2125,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2163,
							"linearizedBaseContracts": [
								2163,
								1623
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "763:7:11",
										"statements": []
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2130,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2129,
												"name": "onlyInitializing",
												"nameLocations": [
													"746:16:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1568,
												"src": "746:16:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:11"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:11"
									},
									"returnParameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:11"
									},
									"scope": 2163,
									"src": "711:59:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "838:7:11",
										"statements": []
									},
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2136,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2135,
												"name": "onlyInitializing",
												"nameLocations": [
													"821:16:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1568,
												"src": "821:16:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:11"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:11"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:11"
									},
									"scope": 2163,
									"src": "776:69:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "912:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2144,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "933:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2143,
												"id": 2146,
												"nodeType": "Return",
												"src": "922:17:11"
											}
										]
									},
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:11"
									},
									"returnParameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "903:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:11"
									},
									"scope": 2163,
									"src": "850:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "1019:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2153,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1040:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2152,
												"id": 2155,
												"nodeType": "Return",
												"src": "1029:15:11"
											}
										]
									},
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:11"
									},
									"returnParameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2157,
												"src": "1003:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2150,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:11"
									},
									"scope": 2163,
									"src": "952:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 2158,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:11",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 2162,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 2163,
									"src": "1316:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 2159,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 2161,
										"length": {
											"hexValue": "3530",
											"id": 2160,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:11",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 2164,
							"src": "651:693:11",
							"usedErrors": [],
							"usedEvents": [
								1469
							]
						}
					],
					"src": "86:1259:11"
				},
				"id": 11
			},
			"lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "lib/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							2223
						]
					},
					"id": 2224,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2165,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlotUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2166,
								"nodeType": "StructuredDocumentation",
								"src": "130:1148:12",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
							},
							"fullyImplemented": true,
							"id": 2223,
							"linearizedBaseContracts": [
								2223
							],
							"name": "StorageSlotUpgradeable",
							"nameLocation": "1287:22:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 2169,
									"members": [
										{
											"constant": false,
											"id": 2168,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1353:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2169,
											"src": "1345:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2167,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1345:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1323:11:12",
									"nodeType": "StructDefinition",
									"scope": 2223,
									"src": "1316:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 2172,
									"members": [
										{
											"constant": false,
											"id": 2171,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1405:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2172,
											"src": "1400:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2170,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1400:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1378:11:12",
									"nodeType": "StructDefinition",
									"scope": 2223,
									"src": "1371:46:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 2175,
									"members": [
										{
											"constant": false,
											"id": 2174,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1460:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2175,
											"src": "1452:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2173,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1452:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1430:11:12",
									"nodeType": "StructDefinition",
									"scope": 2223,
									"src": "1423:49:12",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 2178,
									"members": [
										{
											"constant": false,
											"id": 2177,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1515:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2178,
											"src": "1507:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2176,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1507:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1485:11:12",
									"nodeType": "StructDefinition",
									"scope": 2223,
									"src": "1478:49:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2188,
										"nodeType": "Block",
										"src": "1709:106:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1771:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1785:14:12",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1795:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1785:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2185,
														"isOffset": false,
														"isSlot": true,
														"src": "1785:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2181,
														"isOffset": false,
														"isSlot": false,
														"src": "1795:4:12",
														"valueSize": 1
													}
												],
												"id": 2187,
												"nodeType": "InlineAssembly",
												"src": "1762:47:12"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "1533:87:12",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1634:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1657:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "1649:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2180,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:14:12"
									},
									"returnParameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1706:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2189,
												"src": "1686:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2169_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 2184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2183,
														"name": "AddressSlot",
														"nameLocations": [
															"1686:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2169,
														"src": "1686:11:12"
													},
													"referencedDeclaration": 2169,
													"src": "1686:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2169_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1685:23:12"
									},
									"scope": 2223,
									"src": "1625:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "1997:106:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2059:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2073:14:12",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2083:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2073:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2196,
														"isOffset": false,
														"isSlot": true,
														"src": "2073:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2192,
														"isOffset": false,
														"isSlot": false,
														"src": "2083:4:12",
														"valueSize": 1
													}
												],
												"id": 2198,
												"nodeType": "InlineAssembly",
												"src": "2050:47:12"
											}
										]
									},
									"documentation": {
										"id": 2190,
										"nodeType": "StructuredDocumentation",
										"src": "1821:87:12",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1922:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1945:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1937:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:14:12"
									},
									"returnParameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1994:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1974:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2172_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 2195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2194,
														"name": "BooleanSlot",
														"nameLocations": [
															"1974:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2172,
														"src": "1974:11:12"
													},
													"referencedDeclaration": 2172,
													"src": "1974:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2172_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1973:23:12"
									},
									"scope": 2223,
									"src": "1913:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "2285:106:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2347:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2361:14:12",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2371:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2207,
														"isOffset": false,
														"isSlot": true,
														"src": "2361:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2203,
														"isOffset": false,
														"isSlot": false,
														"src": "2371:4:12",
														"valueSize": 1
													}
												],
												"id": 2209,
												"nodeType": "InlineAssembly",
												"src": "2338:47:12"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "2109:87:12",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2210:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2233:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2225:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2202,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:14:12"
									},
									"returnParameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2282:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2262:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2175_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 2206,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2205,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2262:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2175,
														"src": "2262:11:12"
													},
													"referencedDeclaration": 2175,
													"src": "2262:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2175_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2261:23:12"
									},
									"scope": 2223,
									"src": "2201:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2221,
										"nodeType": "Block",
										"src": "2573:106:12",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2635:38:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2649:14:12",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2659:4:12"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2649:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2218,
														"isOffset": false,
														"isSlot": true,
														"src": "2649:6:12",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2214,
														"isOffset": false,
														"isSlot": false,
														"src": "2659:4:12",
														"valueSize": 1
													}
												],
												"id": 2220,
												"nodeType": "InlineAssembly",
												"src": "2626:47:12"
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "2397:87:12",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2498:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2521:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "2513:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2213,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2513:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2512:14:12"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2570:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2222,
												"src": "2550:21:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2178_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 2217,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2216,
														"name": "Uint256Slot",
														"nameLocations": [
															"2550:11:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2178,
														"src": "2550:11:12"
													},
													"referencedDeclaration": 2178,
													"src": "2550:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2178_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:23:12"
									},
									"scope": 2223,
									"src": "2489:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2224,
							"src": "1279:1402:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "105:2577:12"
				},
				"id": 12
			}
		}
	}
}